{"version":3,"sources":["../../../../../../js/src/core/index.js","../../../../../../js/src/designer/index.js","../../../../../../js/src/core/katrid.js","../../../../../../js/src/core/app.js","../../../../../../js/src/utils/index.js","../../../../../../js/src/utils/i18n.js","../../../../../../js/src/io/services.js","../../../../../../js/src/data/index.js","../../../../../../js/src/data/record.js","../../../../../../js/src/data/datasource.js","../../../../../../js/src/data/fields.js","../../../../../../js/src/ui/index.js","../../../../../../js/src/ui/actions.js","../../../../../../js/src/ui/actions.client.js","../../../../../../js/src/ui/actions.window.js","../../../../../../js/src/ui/templates.js","../../../../../../js/src/ui/actions.report.js","../../../../../../js/src/ui/reports.js","../../../../../../js/src/ui/widgets.js","../../../../../../js/src/ui/views.js","../../../../../../js/src/ui/views.info.js","../../../../../../js/src/ui/grid.js","../../../../../../js/src/ui/filters.js","../../../../../../js/src/ui/search.js","../../../../../../js/src/ui/components.js","../../../../../../js/src/ui/fields.js","../../../../../../js/src/ui/tabs.js","../../../../../../js/src/ui/fields.date.js","../../../../../../js/src/ui/mail.js","../../../../../../js/src/ui/ui.templ.js","../../../../../../js/src/ui/numpad.js","../../../../../../js/src/ui/code-editor.js","../../../../../../js/src/ui/dialogs.js","../../../../../../js/src/ui/fields.foreignkey.js","../../../../../../js/src/ui/fields.status.js","../../../../../../js/src/ui/fields.sortable.js","../../../../../../js/src/ui/jquery.number.js","../../../../../../js/src/ui/grid.totals.js","../../../../../../js/src/ui/dashboard.js","../../../../../../js/src/ui/telegram.js","../../../../../../js/src/plugins/query.manager.js","../../../../../../js/src/plugins/file-manager.js"],"names":["Katrid","Core","_","emptyText","LocalSettings","[object Object]","localSettings","searchMenuVisible","parseInt","localStorage","value","_isMobile","check","a","navigator","userAgent","vendor","window","opera","test","substr","settings","additionalModules","server","servicesProtocol","io","connect","ui","isMobile","dateInputMask","defaultView","goToDefaultViewAfterCancelInsert","goToDefaultViewAfterCancelEdit","horizontalForms","services","choicesPageLimit","speech","enabled","plugins","callbacks","app","cb","this","callback","push","socketio","document","domain","location","port","isObject","isString","isNumber","isArray","arr","Array","Menu","$","on","event","preventDefault","target","actionClick","getAttribute","closest","style","display","querySelectorAll","forEach","el","removeAttribute","hash","loadPage","WebApplication","opts","menu","actionManager","Actions","ActionManager","title","self","loadingTimeout","overlayTimeout","loadingMsg","hide","overlay","setTimeout","show","clearTimeout","ajaxStart","ajaxStop","item","data","clear","attr","each","idx","params","menu_id","action","param","trigger","addEventListener","fetch","templates","then","res","text","ngApp","angular","module","run","$templateCache","UI","Templates","config","$locationProvider","$interpolateProvider","hashPrefix","startSymbol","endSymbol","controller","$scope","$compile","$location","$element","init","element","bootstrap","reset","evt","Event","isPropagationStopped","currentMenu","startsWith","split","URLSearchParams","k","v","entries","$parent","id","name","onHashChange","tpl","context","get","endsWith","ctx","Object","assign","env","render","console","log","Application","login","async","username","password","multidb","db","next","search","Services","post","redirect","error","messages","type","message","$apply","href","$hashId","mixin","obj","iterable","member","r","row","Number","isNaN","length","sum","call","globals","i18n","languageCode","formats","catalog","initialize","plural","pluralidx","n","boolean","count","gettext","ngettext","gettext_noop","pgettext","npgettext","interpolate","get_format","sprintf","initialized","merge","from","map","key","s","singular","indexOf","fmt","named","replace","match","String","slice","shift","formatType","requestManager","requestId","requests","reqId","def","Deferred","JSON","parse","resolve","Service","url","scope","URL","searchParams","append","response","$fetch","method","credentials","body","stringify","headers","content-type","json","Settings","emit","channel","service","args","methName","rpcName","constructor","request","req-id","req-method","Promise","reject","Accept","Content-Type","result","warn","info","msg","Dialogs","Alerts","success","catch","Model","kwargs","ids","fields","Data","Fields","Field","fromArray","fieldList","values","views","keys","ViewInfo","_prepareFields","field","term","status","responseText","alert","grouping","meth","open","join","Query","super","details","with_desc","as_dict","rpc","sql","model","offset","View","Attachments","destroy","file","FormData","recordId","f","files","ajax","processData","contentType","done","attachments","Auth","$post","Upload","form","record","dataSource","refresh","Record","state","raw","pending","modified","children","submitted","$record","pk","RecordState","destroyed","setModified","parent","splice","rec","created","$setDirty","_pendingChanges","fieldName","addChild","child","oldValue","newValue","propKey","fieldByName","toJSON","compare","onChange","$encode","_info","dispatchEvent","jQuery","extend","toObject","initClass","createRecord","Proxy","receiver","OneToManyField","set","Reflect","SubRecords","recs","DataSourceState","inserting","browsing","editing","loading","inactive","DEFAULT_REQUEST_INTERVAL","DataSource","readonly","$modifiedRecords","_recordIndex","recordCount","loadingRecord","_masterSource","_pageIndex","pageLimit","offsetLimit","requestInterval","pendingRequest","modifiedData","uploading","_state","fieldWatchers","$fieldLog","pageIndex","page","_params","_fields","view","loadingAction","_loadingAction","changing","switchView","$emit","save","modal","copy","insert","setValues","records","findById","_page","invalidate","elForm","errorMsgs","elfield","errorType","$error","$name","_validateForm","find","addClass","caption","raiseError","$invalid","errors","formElement","uiKatrid","setFocus","Error","timeout","masterSource","_clearTimeout","limit","req","finally","group","groups","groupings","_loadGroup","index","rows","$params","concat","groupBy","groupName","paramValue","__str__","$expanded","$group","$level","$hasChildren","recordIndex","newIndex","_canceled","master","getModifiedData","_id","ds","ret","deleted","$deleted","undefined","$modified","$modifiedData","_getModified","getNestedData","autoRefresh","$form","validate","beforeSubmit","$eval","write","viewType","$setPristine","$setUntouched","fld","msgs","subField","focus","vals","$created","_getNested","apply","_get","getById","defaultValues","loadDefaults","oldRecs","getDefaults","urlParams","display_name","defaults","default","ngDefaultValues","default_values","isFunction","isUndefined","fromJSON","Date","_modifiedFields","includes","pendingMasterId","$broadcast","moveBy","p","Math","floor","$children","_chain","collapse","_applyResponse","control","setDirty","$destroy","cols","visible","cssClass","helpText","help_text","required","onchange","nolabel","displayChoices","object","choices","template","list","card","StringField","fromInfo","$el","attrs","attributes","camelCase","trim","toLowerCase","b","c","toUpperCase","ngReadonly","ngShow","ngIf","ngClass","html","getTemplate","invisible","validAttributes","ngFieldChange","hasChoices","maxLength","max_length","paramTemplate","toString","val","widget","Widgets","defaultCondition","condition","arguments","DateField","moment","format","getAttributes","DateTimeField","NumericField","parseFloat","ForeignKey","TextField","PasswordField","IntegerField","FloatField","DecimalField","decimalPlaces","decimal_places","TimeField","childByName","addRecord","ManyToManyField","XmlField","JsonField","PythonCodeField","BooleanField","ImageField","noImageUrl","ngSrc","ngEmptyImage","emptyImage","keyCode","BACKSPACE","COMMA","DELETE","DOWN","END","ENTER","ESCAPE","HOME","LEFT","PAGE_DOWN","PAGE_UP","PERIOD","RIGHT","SPACE","TAB","UP","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","Action","actionType","_context","$container","addAction","removeAction","remove","empty","act","action_type","dispatchAction","stopPropagation","ctrlKey","breadcrumb","back","isDialog","execute","ViewAction","svc","content","UrlAction","currentAction","mainAction","$attach","refreshBreadcrumb","i","path","oldAction","actionId","actionInfo","createScope","load","$new","_breadcrumb","bc","isLeaf","ClientAction","registry","tag","prototype","Views","ActionView","renderTo","btn","templateUrl","ClientView","WindowAction","viewMode","view_mode","viewModes","$on","onDataStateChange","afterCancel","history","allowedParams","view_type","oldParams","getContext","sel","selection","active_id","active_ids","_currentPath","$$path","_currentParams","$state","go","getCurrentTitle","$$search","confirm","configId","getViewInfo","Window","compile","createNew","searchModes","filter","makeUrl","lastViewType","h","templ","detach","appendTo","loadViews","toolbar","lastUrl","_viewType","destroyChildren","q","parseJSON","arg","expandGroup","collapseGroup","viewAction","confirmation","prompt","_doViewAction","promptValue","doViewAction","action_name","download","createElement","click","currentTarget","ReportAction","dispatchBindingAction","groupHeaderClick","autoReport","ok","Utils","getSetDefaultValueDialog","core","_selection","selectionLength","att","Loader","templateCache","$cache","src","noCache","nunjucks","Environment","autoescape","oldGet","prepare","loadTemplates","PRE_LOADED_TEMPLATES","put","tagName","innerHTML","base","op","templateLst","readTemplates","preProcess","root","DOMParser","parseFromString","firstChild","registerTemplate","tmpl","katridReportViewer","userReport","report","user_report","Reports","renderDialog","_counter","currentReport","currentUserReport","repName","Report","Params","Labels","exact","in","contains","startswith","endswith","gt","lt","between","isnull","filters","groupables","sortables","totals","Telegram","export","container","operation","value1","value2","sorting","xml","dataTypeDict","date","datetime","customizableReport","advancedOptions","label","groupable","sortable","total","autoCreate","modelChoices","getUserParams","dataType","addParam","paramName","Param","flds","aggs","result1","select2","tags","result2","result3","elParams","loaded","userParams","static","containment","start","update","renderFields","renderSorting","renderGrouping","renderParams","Operations","DefaultOperations","CharField","ModelChoices","SelectionField","TypeOperations","secondField","serviceName","multiple","defaultValue","defaultOperation","operations","getOperations","exclude","createControls","operationTemplate","xmlReport","loadFromXml","loadParams","setOperation","Widget","Component","compileButtons","sendFileCounter","sendFile","idSendFile","directive","restrict","transclude","BaseView","getTemplateContext","setContent","btns","buttons","View2","viewInfo","fieldEl","FormView","dialog","headerEl","header","parents","replaceWith","renderField","outerHTML","first","List","$observe","newViews","inline","prepend","$loaded","totalDisplayed","_cachedViews","_changeCount","dataSet","isList","inlineEditor","hasOwnProperty","gridDialog","str","charAt","substring","_incChanges","addItem","$attr","showDialog","edit","cancelChanges","setState","openItem","editItem","select","removeItem","$delete","$set","$setViewValue","$render","pasteData","cache","_queryForeignKeyField","getFieldChoices","items","txt","clipboard","readText","newObj","col","masterChanged","unhook","cancel","fn","me","gridEl","_destroyChildren","rowClick","ngRowClick","options","listOptions","formView","tr","thead","tfoot","ngTrClass","td","th","hasTotal","inplaceEditor","deleteRow","delRow","maxDigits","Intl","NumberFormat","maximumSignificantDigits","conditionsLabels","=","!=",">","<","conditionSuffix","like","not like",">=","<=","not in","SearchQuery","searchView","facet","addValue","renderFacets","SearchGroup","change","getParamValues","FacetView","separator","searchString","getDisplayValue","templateValue","SearchObject","onRemoveItem","query","loadItem","getParamValue","OR","FacetGroup","oldValues","_ref","_selected","SearchItem","SearchFilter","selected","removeValue","_doChange","SearchFilters","_facet","fromItem","_refresh","facets","SearchGroups","facetGrouping","groupLength","newItem","SearchResult","indent","selectItem","SearchField","_expanded","expandable","expanded","_loadChildren","$items","_value","addFacet","close","$filter","tempFilter","customFilter","fieldChange","conditionChange","controlVisible","isControlVisible","valueChange","searchValue","addCondition","applyFilter","selectAll","customSearchExpanded","SearchView","_viewMoreButtons","getItem","filterGroups","_groupLength","input","prop","fromGroup","fromField","which","move","customGroups","viewMoreButtons","setItem","getByName","subitem","removeClass","distance","fw","abs","prev","applyGroups","getParams","setSearchParams","shouldApply","SearchViewComponent","retrict","default_search","formCount","priority","ctrl","fieldAttributes","sectionAttrs","fcontrol","$ngModelController","$addControl","RegExp","require","nm","ngSum","$watch","$modelValue","bind","ngEnter","$event","ngEsc","Constructor","_enforceFocus","ajaxChoices","_timeout","cfg","allowClear","name_fields","nameFields","searchName","more","results","escapeMarkup","m","e","$viewValue","inputmask","decimal","inputDecimal","alias","groupSeparator","unmaskAsNumber","radixPoint","autoGroup","digitsOptional","placeholder","digits","$parsers","$formatters","toFixed","fromNow","link","accept","reader","FileReader","onload","readAsDataURL","setNow","toISOString","_focus","keypress","keydown","isDate","utc","regex","insertMode","connectWith","cardDraggable","cursor","cardItem","cardGroup","modelName","reorder","disableSelection","tooltip","delay","_pendingOperation","attachment","object_id","ngClick","actions","WIDGET_COUNT","DEFAULT_COLS","SmallIntegerField","templAttrs","wAttrs","spanPrefix","depends","addFieldWatcher","classes","templTag","cls","ngModel","attrName","widgetAttrs","readOnlyClass","_getWidgetAttrs","inner","innerHtml","span","spanTemplate","labelTemplate","widgetTemplate","dep","fieldChangeWatchers","onFieldChange","lbl","_gridEditor","_td","InputWidget","prependIcon","icon","FileField","imgSrc","SortableField","allowOpen","inList","string","integer","float","image","tabs","selectedTab","tab","active","onDeselect","onSelect","addTab","removeTab","newActiveIndex","vertical","isDefined","justified","$parse","heading","elm","tabsetCtrl","disabled","$transcludeFn","tabCtrl","tabContentTransclude","contents","node","hasAttribute","isTabHeading","headingElement","mask","datePicker","calendar","datetimepicker","useCurrent","icons","time","isValid","comments","content_subtype","hideEditor","upload","_sendMesage","showEditor","attachFile","deleteFile","MailComments","BaseTemplate","cssListClass","parentDataSource","showSelector","ths","colHtml","fieldInfo","_widget","createWidget","Boolean","t","gridClass","tbl","renderList","utils","ngChange","buttonClick","num","editor","paths","vs","language","monaco","create","minimap","automaticLayout","getModel","onDidChangeContent","getValue","setValue","Dialog","toastr","WaitDialog","parentAction","dialogTitle","elScope","targetScope","creationName","creation_name","$controller","autocomplete","source","minLength","_shown","foreignkey","newEditItem","allowCreate","formatSelection","allowCreateEdit","noCreateEdit","added","createName","err","parentModal","itemClick","$timeout","helper","$originals","$helper","clone","width","eq","stop","setSelectionRange","rangeStart","rangeEnd","createTextRange","range","moveStart","moveEnd","getSelection","part","pos","stored_range","selectionStart","selectionEnd","createRange","duplicate","expand","setEndPoint","_keydown","codes","188","110","108","109","190","191","192","220","222","221","219","173","187","186","189","shifts","96","49","50","51","52","53","54","55","56","57","48","45","61","91","93","92","59","39","44","46","47","number","decimals","dec_point","thousands_sep","u_dec","charCodeAt","regex_dec_num","regex_dec","is","keydown.format","$this","code","chara","end","setPos","negative","shiftKey","fromCharCode","metaKey","max","isFinite","altKey","keyup.format","paste.format","original","originalEvent","clipboardData","getData","origHookGet","origHookSet","isPlainObject","valHooks","u_sep","pow","round","toFixedFix","expr","dataGroup","x","grps","g","z","register","dashboardId","chart","observe","executeSql","bindto","color","pattern","Dashboard","colorPatterns","hasData","columns","c3","generate","headerClick","className","footer","controls","$counter","$loading","dataParams","DashboardWidget","$sourceScope","sourceScope","_groupBy","grid","_lastData","to","_renderGroup","unit","duration","Chart","backButton","firstRow","alasql","y","axis","legend","onclick","labels","pie","$data","$columns","size","$chart","partners","contacts","Designer","BaseDesigner","handles","startMove","moveSelection","stopMove","refreshSelection","deleteSelection","destroyHandles","top","left","_moveSelection","right","bottom","height","addGrabHandles","updateSelection","onSelectionChange","GrabHandleObject","createHandles","designer","dragging","dragObject","DragObject","surface","rect","getBoundingClientRect","handle","bottomLeft","css","middleLeft","topLeft","topRight","middleRight","bottomRight","topCenter","bottomCenter","_y","_x","screenY","screenX","setPointerCapture","pointerId","position","outerHeight","w","outerWidth","setPosition","releasePointerCapture","off","pageY","pageX","createHandle","_setGrabHandle","_dragging","mousedown","dragStart","mouseup","dragEnd","mousemove","drag","button","removeEventListener","queryChange","is_default","is_shared","ordering","reverse","getSearchView","renderSearch","renderTable","read","getFilter","_toObject","queries","all","level","levels","fm","dirs","getPath","currentItem","currentPath","backTo","uploadFile","uploadTo"],"mappings":"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","file":"katrid.full.min.js","sourcesContent":["\n// initialize the katrid namespace\nvar Katrid = {};\n","var Katrid;\n(function (Katrid) {\n    var UI;\n    (function (UI) {\n        var Designer;\n        (function (Designer) {\n            class BaseDesigner {\n                constructor(container) {\n                    this._selection = [];\n                    this.handles = [];\n                    container.addEventListener('keydown', (evt) => {\n                        switch (evt.key) {\n                            case 'ArrowUp':\n                            case 'ArrowRight':\n                            case 'ArrowDown':\n                            case 'ArrowLeft':\n                                this.startMove(evt);\n                                this.moveSelection(evt);\n                                break;\n                        }\n                    });\n                    container.addEventListener('keyup', (evt) => {\n                        switch (evt.key) {\n                            case 'ArrowUp':\n                            case 'ArrowRight':\n                            case 'ArrowDown':\n                            case 'ArrowLeft':\n                                this.stopMove(evt);\n                                this.refreshSelection(evt);\n                                break;\n                        }\n                    });\n                    container.addEventListener('keypress', (evt) => {\n                        if (evt.key === 'Delete') {\n                            evt.stopPropagation();\n                            this.deleteSelection();\n                        }\n                    });\n                }\n                deleteSelection() {\n                    for (let child of this.selection)\n                        child.$delete();\n                    this.destroyHandles();\n                }\n                moveSelection(evt) {\n                    let top = 0, right = 0, bottom = 0, left = 0;\n                    switch (evt.key) {\n                        case 'ArrowUp':\n                            top = -1;\n                            break;\n                        case 'ArrowRight':\n                            left = 1;\n                            break;\n                        case 'ArrowDown':\n                            top = 1;\n                            break;\n                        case 'ArrowLeft':\n                            left = -1;\n                            break;\n                    }\n                    this._moveSelection(top, right, bottom, left);\n                }\n                _moveSelection(top, right, bottom, left) {\n                    for (let sel of this.selection) {\n                        if (top)\n                            sel.top += top;\n                        if (right)\n                            sel.width += right;\n                        if (bottom)\n                            sel.height += bottom;\n                        if (left)\n                            sel.left += left;\n                    }\n                }\n                clearSelection() {\n                    this.destroyHandles();\n                    this.selection = [];\n                }\n                refreshSelection(evt) {\n                    this.selection = this._selection;\n                }\n                updateSelection() {\n                    this.destroyHandles();\n                    for (let sel of this.selection)\n                        this.addGrabHandles(sel);\n                }\n                get selection() {\n                    return this._selection;\n                }\n                set selection(value) {\n                    this._selection = value;\n                    this.updateSelection();\n                    this.onSelectionChange(value);\n                }\n                destroyHandles() {\n                    for (let h of this.handles)\n                        h.destroy();\n                    this.handles = [];\n                }\n                startMove(evt) {\n                    // start keyboard move\n                    this.destroyHandles();\n                }\n                stopMove(evt) {\n                    // stop keyboard move\n                    this.updateSelection();\n                }\n                onSelectionChange(value) {\n                    // on selection change event\n                }\n                addGrabHandles(obj) {\n                    // show grab handles to an object\n                    let handle = new GrabHandleObject(obj.el, this);\n                    handle.createHandles();\n                }\n            }\n            Designer.BaseDesigner = BaseDesigner;\n            class GrabHandleObject {\n                constructor(el, designer) {\n                    this.handles = [];\n                    this.dragging = false;\n                    this.el = el;\n                    this.designer = designer;\n                    // init object drag\n                    this.dragObject = new DragObject(el, designer.surface[0]);\n                }\n                createHandle() {\n                    let h = $('<label class=\"target-handle\"></label>');\n                    this.handles.push(h);\n                    return h;\n                }\n                setPosition() {\n                    let rect = this.el.getBoundingClientRect();\n                    let handle = this.bottomLeft;\n                    handle.css('left', rect.left - 3);\n                    handle.css('top', rect.bottom - 5);\n                    handle = this.middleLeft;\n                    handle.css('left', rect.left - 3);\n                    handle.css('top', rect.bottom - rect.height / 2 - 4);\n                    handle = this.topLeft;\n                    handle.css('left', rect.left - 3);\n                    handle.css('top', rect.top - 3);\n                    handle = this.topRight;\n                    handle.css('left', rect.right - 4);\n                    handle.css('top', rect.top - 3);\n                    handle = this.middleRight;\n                    handle.css('left', rect.right - 4);\n                    handle.css('top', rect.bottom - rect.height / 2 - 4);\n                    handle = this.bottomRight;\n                    handle.css('left', rect.right - 4);\n                    handle.css('top', rect.bottom - 5);\n                    handle = this.topCenter;\n                    handle.css('left', rect.right - rect.width / 2 - 4);\n                    handle.css('top', rect.top - 3);\n                    handle = this.bottomCenter;\n                    handle.css('left', rect.right - rect.width / 2 - 4);\n                    handle.css('top', rect.bottom - 5);\n                }\n                _setGrabHandle() {\n                    let handle = this.topLeft;\n                    let _y, _x;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let pos = el.position();\n                                el.css('left', (pos.left - x).toString() + 'px');\n                                el.css('top', pos.top - y);\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('height', h + y);\n                                el.css('width', (w + x).toString() + 'px');\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.topRight;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let parent = el.parent();\n                                let pos = el.position();\n                                el.css('top', pos.top - y);\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('height', h + y);\n                                el.css('width', w - x);\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].setPointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.bottomRight;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.pageY;\n                        _x = evt.pageX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = _y - evt.pageY;\n                                let x = _x - evt.pageX;\n                                let el = $(this.el);\n                                let parent = el.parent();\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('height', h - y);\n                                el.css('width', w - x);\n                                _y = evt.pageY;\n                                _x = evt.pageX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.middleLeft;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let pos = el.position();\n                                el.css('left', pos.left - x);\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('width', w + x);\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.middleRight;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let pos = el.position();\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('width', w - x);\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.bottomCenter;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let parent = el.parent();\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('height', h - y);\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.topCenter;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let parent = el.parent();\n                                let pos = el.position();\n                                el.css('top', pos.top - y);\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('height', h + y);\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.bottomLeft;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let pos = el.position();\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('height', h - y);\n                                el.css('left', pos.left - x);\n                                el.css('width', w + x);\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                }\n                createHandles() {\n                    let handle;\n                    // bottom-left\n                    this.bottomLeft = handle = this.createHandle();\n                    handle.addClass('bottom-left');\n                    this.designer.surface.append(handle);\n                    // middle-left\n                    this.middleLeft = handle = this.createHandle();\n                    handle.addClass('middle-left');\n                    this.designer.surface.append(handle);\n                    // top-left\n                    this.topLeft = handle = this.createHandle();\n                    handle.addClass('top-left');\n                    this.designer.surface.append(handle);\n                    // top-right\n                    this.topRight = handle = this.createHandle();\n                    handle.addClass('top-right');\n                    this.designer.surface.append(handle);\n                    // middle-right\n                    this.middleRight = handle = this.createHandle();\n                    handle.addClass('middle-right');\n                    this.designer.surface.append(handle);\n                    // bottom-right\n                    this.bottomRight = handle = this.createHandle();\n                    handle.addClass('bottom-right');\n                    this.designer.surface.append(handle);\n                    // top-center\n                    this.topCenter = handle = this.createHandle();\n                    handle.addClass('top-center');\n                    this.designer.surface.append(handle);\n                    // bottom-center\n                    this.bottomCenter = handle = this.createHandle();\n                    handle.addClass('bottom-center');\n                    this.designer.surface.append(handle);\n                    this.designer.handles.push(this);\n                    this.setPosition();\n                    this._setGrabHandle();\n                }\n                destroy() {\n                    for (let h of this.handles)\n                        h.remove();\n                    this.handles = [];\n                    this.dragObject.destroy();\n                }\n            }\n            Designer.GrabHandleObject = GrabHandleObject;\n            class DragObject {\n                constructor(el, container) {\n                    this.el = el;\n                    this.container = container;\n                    this._dragging = false;\n                    this.el = el;\n                    this.mousedown = (evt) => this.dragStart(evt);\n                    this.mouseup = (evt) => this.dragEnd(evt);\n                    this.mousemove = (evt) => this.drag(evt);\n                    container.addEventListener('mousedown', this.mousedown);\n                    container.addEventListener('mouseup', this.mouseup);\n                    container.addEventListener('mousemove', this.mousemove);\n                }\n                dragStart(evt) {\n                    if ((evt.button === 0) && (evt.target === this.el)) {\n                        this._y = evt.screenY;\n                        this._x = evt.screenX;\n                        this.dragging = true;\n                    }\n                }\n                dragEnd(evt) {\n                    if (this.dragging) {\n                        this.dragging = false;\n                        this.el.dispatchEvent(new Event('designerdragend'));\n                    }\n                }\n                drag(evt) {\n                    if (this.dragging) {\n                        evt.preventDefault();\n                        evt.stopPropagation();\n                        let el = $(this.el);\n                        if (this.dragging) {\n                            let y = evt.screenY;\n                            let x = evt.screenX;\n                            y = this._y - y;\n                            x = this._x - x;\n                            let el = $(this.el);\n                            let pos = el.position();\n                            el.css('left', (pos.left - x).toString() + 'px');\n                            el.css('top', (pos.top - y).toString() + 'px');\n                            this._y = evt.screenY;\n                            this._x = evt.screenX;\n                        }\n                        this.el.dispatchEvent(new Event('designerdrag'));\n                    }\n                }\n                destroy() {\n                    this.container.removeEventListener('mousedown', this.mousedown);\n                    this.container.removeEventListener('mouseup', this.mouseup);\n                    this.container.removeEventListener('mousemove', this.mousemove);\n                }\n                get dragging() {\n                    return this._dragging;\n                }\n                set dragging(value) {\n                    if (value)\n                        this.el.dispatchEvent(new Event('designerdragstart'));\n                    this._dragging = value;\n                }\n            }\n            Designer.DragObject = DragObject;\n        })(Designer = UI.Designer || (UI.Designer = {}));\n    })(UI = Katrid.UI || (Katrid.UI = {}));\n})(Katrid || (Katrid = {}));\n","Katrid.Core = {};\n\n\n(function () {\n\n  _.emptyText = '--';\n\n  class LocalSettings {\n    static init() {\n      Katrid.localSettings = new LocalSettings();\n    }\n\n    constructor() {\n    }\n\n    get searchMenuVisible() {\n      return parseInt(localStorage.searchMenuVisible) === 1;\n    }\n\n    set searchMenuVisible(value) {\n      localStorage.searchMenuVisible = value ? 1 : 0;\n    }\n  }\n\n\n  const _isMobile = function isMobile() {\n    var check = false;\n    (function (a) {\n      if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true;\n    })(navigator.userAgent || navigator.vendor || window.opera);\n    return check;\n  }();\n\n  Katrid.settings = {\n    additionalModules: [],\n    server: '',\n    servicesProtocol: (typeof io !== 'undefined' && io !== null) && io.connect ? 'io' : 'http',\n\n    // Katrid Framework UI Settings\n    ui: {\n      isMobile: _isMobile,\n      dateInputMask: true,\n      defaultView: 'list',\n      goToDefaultViewAfterCancelInsert: true,\n      goToDefaultViewAfterCancelEdit: false,\n      horizontalForms: true\n    },\n\n    services: {\n      choicesPageLimit: 10\n    },\n\n    speech: {\n      enabled: false\n    }\n  };\n\n  Katrid.Core.LocalSettings = LocalSettings;\n\n  Katrid.Core.plugins = {\n    callbacks: [],\n    init(app) {\n      for (let cb of this.callbacks)\n        cb(app);\n    },\n    register(callback) {\n      this.callbacks.push(callback);\n    }\n  };\n\n  if (Katrid.settings.servicesProtocol === 'io') {\n    Katrid.socketio = io.connect(`//${document.domain}:${location.port}/rpc`);\n  }\n\n  Katrid.isObject = function (value) {\n    // http://jsperf.com/isobject4\n    return value !== null && typeof value === 'object';\n  };\n\n  Katrid.isString = function (value) {\n    return typeof value === 'string';\n  };\n\n  Katrid.isNumber = function (value) {\n    return typeof value === 'number';\n  };\n\n  Katrid.isArray =- function (arr) {\n    return Array.isArray(arr) || arr instanceof Array;\n  };\n\n})();\n","(function() {\n\n  class Application {\n  }\n\n  class Menu {\n    constructor(app) {\n      this.app = app;\n\n      $('.menu-item-action')\n      .on('click', event => {\n        event.preventDefault();\n        let target = event.target;\n        this.actionClick(target.getAttribute('href'));\n        target.closest('.dropdown-menu').style.display = 'none';\n      });\n      $('li.nav-item.dropdown').on('mouseenter', function() {\n        this.querySelectorAll('.dropdown-menu').forEach(el => el.removeAttribute('style'));\n      });\n    }\n\n    actionClick(hash) {\n      this.app.loadPage(hash, true);\n    }\n  }\n\n  class WebApplication {\n\n    constructor(opts) {\n      Katrid.app = this;\n      this.menu = new Menu(this);\n      this.actionManager = new Katrid.Actions.ActionManager();\n      this.title = opts.title;\n      this.plugins = [\n        'ui.katrid',\n        'ngSanitize',\n      ];\n\n      let self = this;\n      $(Katrid).on('app.ready', () => {\n\n        let loadingTimeout, overlayTimeout;\n        let loadingMsg = $('#loading-msg').hide();\n        let overlay = $('#overlay').hide();\n        $(Katrid).on('fetch.before', () => {\n          loadingTimeout = setTimeout(() => loadingMsg.show(), 400);\n          overlayTimeout = setTimeout(() => {\n            loadingMsg.hide();\n            overlay.show();\n          }, 2500);\n        })\n        .on('fetch.always', () => {\n          clearTimeout(loadingTimeout);\n          clearTimeout(overlayTimeout);\n          loadingMsg.hide();\n          overlay.hide();\n        });\n\n        // TODO replace jquery ajax by fetch api\n        $(document).ajaxStart(function() {\n          loadingTimeout = setTimeout(() => loadingMsg.show(), 400);\n          overlayTimeout = setTimeout(() => {\n            loadingMsg.hide();\n            overlay.show()\n          }, 2500);\n        })\n        .ajaxStop(function() {\n          clearTimeout(loadingTimeout);\n          clearTimeout(overlayTimeout);\n          loadingMsg.hide();\n          overlay.hide();\n        });\n\n        $('a.module-selector')\n        .on('click', function(event) {\n          event.preventDefault();\n          let item = $(this);\n          let params = {};\n          params.menu_id = item.data('menu-id');\n\n          // clear history\n          Katrid.app.actionManager.clear();\n          self.loadPage(item.attr('href'));\n        })\n        .each(function(idx, el) {\n          el = $(el);\n          let params = {};\n          params.menu_id = el.data('menu-id');\n          params.action = $(`.menu-item-action[data-parent-id=\"${params.menu_id}\"]:first`).data('action-id');\n          el.attr('href', '#/app/?' + $.param(params));\n        });\n\n        if (location.hash === '')\n          $('a.module-selector:first').trigger('click');\n        else\n          this.loadPage(location.hash);\n      });\n\n      window.addEventListener('hashchange', (event) => {\n        this.loadPage(location.hash);\n      });\n\n      // initialize sync resources\n      fetch(opts.templates || '/web/client/templates/')\n      .then(res => res.text())\n      .then((templates) => {\n        if (templates)\n          templates = '<templates>' + templates + '</templates>';\n\n        // initialize angular app (katrid module)\n        this.ngApp = angular.module('katridApp', this.plugins)\n        .run(['$templateCache', ($templateCache) => {\n          this.$templateCache = $templateCache;\n          Katrid.UI.templates = new Katrid.UI.Templates(this, templates);\n        }])\n        // config hash\n        .config(['$locationProvider', '$interpolateProvider', function ($locationProvider, $interpolateProvider) {\n          $locationProvider.hashPrefix('');\n          $interpolateProvider.startSymbol('${');\n          $interpolateProvider.endSymbol('}');\n        }]);\n\n        this.ngApp.controller('AppController', ['$scope', '$compile', '$location', function($scope, $compile, $location) {\n          Katrid.Core.$compile = $compile;\n          Katrid.app.$scope = $scope;\n          Katrid.app.$location = $location;\n          $scope._ = _;\n          Katrid.app.$element = $('#katrid-action-view');\n          $(Katrid).trigger('app.ready', [Katrid.app]);\n        }]);\n\n        this.ngApp.controller('ActionController', ['$scope', function($scope) {\n        }]);\n\n        Katrid.Core.plugins.init(this);\n        $(Katrid).trigger('loaded', [Katrid.app]);\n\n      });\n    }\n\n    static bootstrap(opts) {\n      let app = new WebApplication(opts);\n      $(Katrid).on('loaded', function() {\n        angular.element(function () {\n          angular.bootstrap(document, ['katridApp']);\n        });\n      });\n      return app;\n    }\n\n    async loadPage(hash, reset) {\n      let evt = $.Event('hashchange');\n      $(this).trigger(evt, [hash, reset]);\n      // check if any plugin has stopped the event flow\n      if (!evt.isPropagationStopped()) {\n        this.$scope.currentMenu = '';\n        // load the page content\n        if (hash.startsWith('#/app/?'))\n          hash = hash.split('#/app/?')[1];\n        hash = new URLSearchParams(hash);\n        let params = {};\n        for (let [k, v] of hash.entries())\n          params[k] = v;\n\n        if (params.menu_id)\n          $('a.module-selector');\n\n        if (!this.$scope.$parent.currentMenu || (params.menu_id && (this.$scope.$parent.currentMenu.id != params.menu_id))) {\n          this.$scope.$parent.currentMenu = { id: params.menu_id, name: $(`.module-selector[data-menu-id=\"${params.menu_id}\"]`).text() };\n        }\n\n        if (('action' in params) || ('model' in params))\n          await this.actionManager.onHashChange(params, reset);\n      }\n    }\n\n    getTemplate(tpl, context) {\n      let text = this.$templateCache.get(tpl);\n      if (tpl.endsWith('jinja2')) {\n        let ctx = {\n          _,\n          window,\n        };\n        if (context)\n          Object.assign(ctx, context);\n        return Katrid.UI.Templates.env.render(tpl, ctx);\n      }\n      else if (tpl.endsWith('pug')) {\n        text = text(context);\n      }\n      return text;\n    }\n\n    get context() {\n      console.log('get context', this.actionManager.context);\n      return this.actionManager.context;\n    }\n\n  }\n\n  Katrid.Core.Application = Application;\n  Katrid.Core.WebApplication = WebApplication;\n\n})();\n\n\nangular.module('basicApp', [])\n.controller('LoginController', ['$scope', function($scope) {\n  $scope.login = async (username, password, multidb, db) => {\n    let next = new URLSearchParams(window.location.search);\n    next = next.get('next');\n    let res;\n    if (multidb)\n      res = await Katrid.Services.post('/web/db/', { db });\n    if ((multidb && res.redirect) || !multidb) {\n      res = await Katrid.Services.post('/web/login/', { username, password, next });\n      if (res.error) {\n        $scope.messages = [{ type: 'danger', message: res.message }];\n        $scope.$apply();\n      } else {\n        $scope.messages = [{ type: 'success', message: res.message }];\n        $scope.$apply();\n        setTimeout(() => window.location.href = res.redirect);\n      }\n    }\n  }\n}]);\n","(function () {\n\n  Katrid.$hashId = 0;\n\n  _.mixin({\n    hash(obj) {\n      if (!obj.$hashId) {\n        obj.$hashId = ++Katrid.$hashId;\n      }\n      return obj.$hashId;\n    }\n  });\n\n  _.mixin({\n    sum(iterable, member) {\n      let r = 0;\n      if (iterable)\n        for (let row of iterable) {\n          let v = row[member];\n          if (!_.isNumber(v))\n            v = Number(v);\n          if (_.isNaN(v))\n            v = 0;\n          r += v;\n        }\n      return r;\n    },\n    avg(iterable, member) {\n      if (iterable && iterable.length) {\n        let r = 0;\n        return _.sum(iterable, member) / iterable.length;\n      }\n    }\n  })\n\n}).call(this);\n","(function() {\n\n  const globals = this;\n\n  // Internationalization\n  Katrid.i18n = {\n    languageCode: 'pt-BR',\n    formats: {},\n    catalog: {},\n\n    initialize(plural, catalog, formats) {\n      Katrid.i18n.plural = plural;\n      Katrid.i18n.catalog = catalog;\n      Katrid.i18n.formats = formats;\n      if (plural) {\n        Katrid.i18n.pluralidx = function (n) {\n          if (plural instanceof boolean) {\n            if (plural) {\n              return 1;\n            } else {\n              return 0;\n            }\n          } else {\n            return plural;\n          }\n        };\n      } else {\n        Katrid.i18n.pluralidx = function (n) {\n          if (count === 1) {\n            return 0;\n          } else {\n            return 1;\n          }\n        };\n      }\n\n      globals.pluralidx = Katrid.i18n.pluralidx;\n      globals.gettext = Katrid.i18n.gettext;\n      globals.ngettext = Katrid.i18n.ngettext;\n      globals.gettext_noop = Katrid.i18n.gettext_noop;\n      globals.pgettext = Katrid.i18n.pgettext;\n      globals.npgettext = Katrid.i18n.npgettext;\n      globals.interpolate = Katrid.i18n.interpolate;\n      globals.get_format = Katrid.i18n.get_format;\n\n      _.mixin({\n        gettext: Katrid.i18n.gettext,\n        sprintf: sprintf,\n      });\n\n      return Katrid.i18n.initialized = true;\n    },\n\n    merge(catalog) {\n      return Array.from(catalog).map((key) =>\n        (Katrid.i18n.catalog[key] = catalog[key]));\n    },\n\n    gettext(s) {\n      const value = Katrid.i18n.catalog[s];\n      if (value != null) {\n        return value;\n      } else {\n        return s;\n      }\n    },\n\n    gettext_noop(s) {\n      return s;\n    },\n\n    ngettext(singular, plural, count) {\n      const value = Katrid.i18n.catalog[singular];\n      if (value != null) {\n        return value[Katrid.i18n.pluralidx(count)];\n      } else if (count === 1) {\n        return singular;\n      } else {\n        return plural;\n      }\n    },\n\n    pgettext(s) {\n      let value = Katrid.i18n.gettext(s);\n      if (value.indexOf('\\x04') !== -1) {\n        value = s;\n      }\n      return value;\n    },\n\n    npgettext(ctx, singular, plural, count) {\n      let value = Katrid.i18n.ngettext(ctx + '\\x04' + singular, ctx + '\\x04' + plural, count);\n      if (value.indexOf('\\x04') !== -1) {\n        value = Katrid.i18n.ngettext(singular, plural, count);\n      }\n      return value;\n    },\n\n    interpolate(fmt, obj, named) {\n      if (named) {\n        fmt.replace(/%\\(\\w+\\)s/g, match => String(obj[match.slice(2, -2)]));\n      } else {\n        fmt.replace(/%s/g, match => String(obj.shift()));\n      }\n\n      return {\n        get_format(formatType) {\n          const value = Katrid.i18n.formats[formatType];\n          if (value != null) {\n            return value;\n          } else {\n            return formatType;\n          }\n        }\n      };\n    }\n  };\n\n})();\n","(function () {\n\n  let requestManager;\n  class RequestManager {\n    constructor() {\n      this.requestId = 0;\n      this.requests = {};\n    }\n\n    request() {\n      const reqId = ++requestManager.requestId;\n      const def = new $.Deferred();\n      this.requests[reqId] = def;\n      def.requestId = reqId;\n      return def;\n    }\n  }\n\n\n  if (Katrid.socketio) {\n    requestManager = new RequestManager();\n\n    Katrid.socketio.on('connect', () => console.log(\"I'm connected!\"));\n\n    Katrid.socketio.on('api', function (data) {\n      if (_.isString(data)) {\n        data = JSON.parse(data);\n      }\n      const def = requestManager.requests[data['req-id']];\n      return def.resolve(data);\n    });\n  }\n\n\n  class Service {\n    static get url() { return '/api/rpc/' };\n\n    constructor(name, scope) {\n      this.name = name;\n    }\n\n    static $fetch(url, config, params) {\n      if (params) {\n        url = new URL(url);\n        Object.entries(params).map((k, v) => url.searchParams.append(k, v));\n      }\n      // send events\n      $(Katrid).trigger('fetch.before');\n      return fetch(url, config)\n      .then(response => {\n        $(Katrid).trigger('fetch.done');\n        return response;\n      });\n    }\n\n    static $post(url, data, params) {\n      return this.$fetch(url, {\n        method: 'POST',\n        credentials: \"same-origin\",\n        body: JSON.stringify(data),\n        headers: {\n          'content-type': 'application/json',\n        }\n      }, params)\n      .then(res => res.json());\n    }\n\n    delete(name, params, data) {\n    }\n\n    get(name, params) {\n      if (Katrid.Settings.servicesProtocol === 'ws') {\n        // Using websocket protocol\n        return Katrid.socketio.emit('api', {channel: 'rpc', service: this.name, method: name, data, args: params});\n      } else {\n        // Using http protocol\n        const methName = this.name ? this.name + '/': '';\n        const rpcName = Katrid.Settings.server + this.constructor.url + methName + name + '/';\n        return $.get(rpcName, params);\n      }\n    }\n\n    post(name, data, params) {\n      let context;\n      if (Katrid.app)\n        context = Katrid.app.context;\n      if (!data)\n        data = {};\n      if (context)\n        data.context = context;\n\n      console.log(Katrid.app.context);\n\n      data = {\n        method: name,\n        params: data,\n      };\n\n      // Check if protocol is socket.io\n      if (Katrid.settings.servicesProtocol === 'io') {\n        const def = requestManager.request();\n        Katrid.socketio.emit('api',\n          {\n            \"req-id\": def.requestId,\n            \"req-method\": 'POST',\n            service: this.name,\n            method: name,\n            data,\n            args: params\n          }\n        );\n        return def;\n\n        // Else, using ajax\n      } else {\n        const methName = this.name ? this.name + '/': '';\n        let rpcName = Katrid.settings.server + this.constructor.url + methName + name + '/';\n        if (params) {\n          rpcName += `?${$.param(params)}`;\n        }\n        return new Promise(\n          (resolve, reject) => {\n\n            fetch(rpcName, {\n              method: 'POST',\n              body: JSON.stringify(data),\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n              },\n            })\n            .then(res => res.json())\n            .then(res => {\n              if (res.error)\n                reject(res.error);\n              else {\n                if (res.result) {\n                  let messages;\n                  if (res.result.messages)\n                    messages = res.result.messages;\n                  else\n                    messages = [];\n                  if (res.result.message)\n                    messages.push(res.result.message);\n                  else if (res.result.warn)\n                    messages.push({ type: 'warn', message: res.result.warn });\n                  else if (res.result.info)\n                    messages.push({ type: 'info', message: res.result.info });\n                  else if (res.result.error)\n                    messages.push({ type: 'error', message: res.result.error });\n                  messages.forEach(function (msg) {\n                    if (_.isString(msg))\n                      Katrid.UI.Dialogs.Alerts.success(msg);\n                    else if (msg.type === 'warn')\n                      Katrid.UI.Dialogs.Alerts.warn(msg.message);\n                    else if (msg.type === 'info')\n                      Katrid.UI.Dialogs.Alerts.info(msg.message);\n                    else if ((msg.type === 'error') || (msg.type === 'danger'))\n                      Katrid.UI.Dialogs.Alerts.error(msg.message);\n                  });\n                }\n                resolve(res.result);\n              }\n            })\n            .catch(res => reject(res));\n          }\n        );\n      }\n    }\n  }\n\n\n  class Model extends Service {\n    searchName(name) {\n      if (_.isString(name))\n        name = { args: name };\n      return this.post('search_name', name);\n    }\n\n    createName(name) {\n      let kwargs = {name};\n      return this.post('create_name', { kwargs: kwargs });\n    }\n\n    search(data, params) {\n      return this.post('search', { kwargs: data }, params);\n    }\n\n    destroy(id) {\n      if (!_.isArray(id))\n        id = [id];\n      return this.post('destroy', { kwargs: {ids: id} });\n    }\n\n    getById(id) {\n      return this.post('get', { args: [id] });\n    }\n\n    getDefaults(kwargs) {\n      return this.post('get_defaults', { kwargs });\n    }\n\n    copy(id) {\n      return this.post('copy', { args: [id] });\n    }\n\n    static _prepareFields(res) {\n      if (res) {\n        res.fields = Katrid.Data.Fields.Field.fromArray(res.fields);\n        res.fieldList = Object.values(res.fields);\n        if (res.views) {\n          Object.values(res.views).map(v => v.fields = Katrid.Data.Fields.Field.fromArray(v.fields));\n          Object.keys(res.views).map(k => res.views[k] = new Katrid.UI.ViewInfo(res.views[k]));\n        }\n      }\n      return res;\n    }\n\n    getViewInfo(data) {\n      return this.post('get_view_info', { kwargs: data })\n      .then(this.constructor._prepareFields);\n    }\n\n    async loadViews(data) {\n      return this.post('load_views', { kwargs: data })\n      .then(this.constructor._prepareFields);\n    }\n\n    getFieldsInfo(data) {\n      return this.post('get_fields_info', { kwargs: data })\n      .then(this.constructor._prepareFields);\n    }\n\n    getFieldChoices(field, term, kwargs) {\n      return this.post('get_field_choices', { args: [ field, term ], kwargs: kwargs } );\n    }\n\n    doViewAction(data) {\n      return this.post('do_view_action', { kwargs: data });\n    }\n\n    write(data, params) {\n      return new Promise((resolve, reject) => {\n        this.post('write', {kwargs: {data}}, params)\n        .then((res) => {\n          Katrid.UI.Dialogs.Alerts.success(Katrid.i18n.gettext('Record saved successfully.'));\n          resolve(res);\n        })\n        .catch(res => {\n          if ((res.status === 500) && res.responseText)\n            alert(res.responseText);\n          else\n            Katrid.UI.Dialogs.Alerts.error(Katrid.i18n.gettext('Error saving record changes'));\n          reject(res);\n        });\n      });\n    }\n\n    groupBy(grouping, params) {\n      return this.post('group_by', { kwargs: { grouping, params } });\n    }\n\n    autoReport() {\n      return this.post('auto_report', { kwargs: {} });\n    }\n\n    rpc(meth, args, kwargs) {\n      // execute rpc\n      return new Promise((resolve, reject) => {\n        this.post(meth, { args: args, kwargs: kwargs })\n        .then(res => {\n          // open a document\n          if (res && res.open)\n            window.open(res.open);\n          resolve(res);\n        })\n        .catch(res => {\n          if (res.messages && _.isObject(res.messages))\n            for (let msg of Object.values(res.messages))\n              Katrid.UI.Dialogs.Alerts.error(msg.join('\\n'));\n          else\n            Katrid.UI.Dialogs.Alerts.error(res.message);\n          reject(res);\n        });\n      });\n    }\n  }\n\n\n  // Represents a server query\n  class Query extends Model {\n    constructor() {\n      super('ir.query');\n    }\n\n    static read(config) {\n      // read data from server\n      let details, id, params;\n      if (_.isObject(config)) {\n        details = config.details;\n        params = config.params;\n        id = config.id;\n      } else\n        id = config;\n      return (new Query()).post('read', { args: [id], kwargs: { with_desc: details, params, as_dict: config.as_dict } });\n    }\n\n    static all() {\n      return (new Query()).rpc('all');\n    }\n\n    static executeSql(sql) {\n      return (new Query()).post('execute_sql', { args: [sql] });\n    }\n  }\n\n\n  class Data extends Service {\n    static get url() { return '/web/data/' };\n\n    reorder(model, ids, field='sequence', offset=0) {\n      return this.post('reorder', { args: [ model, ids, field, offset ] });\n    }\n  }\n\n  class Attachments {\n    static destroy(id) {\n      let svc = new Model('ir.attachment');\n      svc.destroy(id);\n    }\n\n    static upload(file, scope=null) {\n      let data = new FormData();\n      if (!scope) scope = angular.element(file).scope();\n      console.log(file);\n      data.append('model', scope.model.name);\n      data.append('id', scope.recordId);\n      for (let f of file.files) data.append('attachment', f, f.name);\n      return $.ajax({\n        url: '/web/content/upload/',\n        type: 'POST',\n        data: data,\n        processData: false,\n        contentType: false\n      })\n      .done((res) => {\n        console.log('attachments', scope.attachments, scope);\n        if (!scope.attachments)\n          scope.attachments = [];\n        if (res)\n          for (let obj of res) scope.attachments.push(obj);\n        scope.$apply();\n      });\n    }\n  }\n\n  class View extends Model {\n    constructor() {\n      super('ui.view');\n    }\n\n    fromModel(model) {\n      return this.post('from_model', null, {model});\n    }\n  }\n\n\n  class Actions extends Model {\n    static load(action) {\n      let svc = new Model('ir.action');\n      return svc.post('load', { args: [action] });\n    }\n  }\n\n\n  class Auth extends Service {\n    static login(username, password) {\n      return this.$post('/web/login/', { username: username, password: password });\n    }\n  }\n\n  class Upload {\n    static sendFile(service, file) {\n      let form = new FormData();\n      form.append('files', file.files[0]);\n      let scope = angular.element(file).scope();\n      let url = `/web/file/upload/${scope.model.name}/${service}/`;\n      if (scope.record && scope.record.id)\n        form.append('id', scope.record.id);\n      // try to detect the current datasource to be refreshed if needed\n      let dataSource = scope.action.dataSource;\n      if (!dataSource) {\n        dataSource = scope.$parent.dataSource;\n        let s = scope.$parent;\n        while (s) {\n          dataSource = s.dataSource;\n          if (dataSource)\n            break;\n          s = scope.$parent;\n        }\n      }\n      $.ajax({\n        url: url,\n        data: form,\n        processData: false,\n        contentType: false,\n        type: 'POST',\n        success: (data) => {\n          dataSource.refresh();\n          Katrid.UI.Dialogs.Alerts.success('Operação realizada com sucesso.')\n        }\n      });\n    }\n\n    static uploadTo(url, file) {\n      let form = new FormData();\n      form.append('files', file.files[0]);\n      return $.ajax({\n        url: url,\n        data: form,\n        processData: false,\n        contentType: false,\n        type: 'POST',\n        success: (data) => {\n          Katrid.UI.Dialogs.Alerts.success('Arquivo enviado com sucesso!');\n        }\n      });\n    }\n  }\n\n  this.Katrid.Services = {\n    Data,\n    View,\n    data: new Data('', ),\n    Attachments,\n    Service,\n    Model,\n    Query,\n    Auth,\n    Upload,\n    Actions,\n    post(url, data) {\n      // post json data to server\n      return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n      }).then(res => res.json());\n    }\n  };\n\n})();\n\n","Katrid.Data = {};\n","(function() {\n\n  class Record {\n    constructor(data, dataSource, state) {\n      // current record data\n      this.raw = data;\n      // modified data only\n      this.data = {};\n      // original record\n      // this.old = jQuery.extend({}, data);\n      this.dataSource = dataSource;\n      this.pending = null;\n      this.modified = false;\n      this.children = [];\n      this.state = state;\n      this.submitted = false;\n      data.$record = this;\n    }\n\n    get scope() {\n      return this.dataSource.scope;\n    }\n\n    get pk() {\n      return this.raw.id;\n    }\n\n    $delete() {\n      this.state = RecordState.destroyed;\n      if (this.pk)\n        this.setModified();\n      else if (this.parent.children.indexOf(this) > -1)\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    _prepareRecord(rec, parent) {\n      console.log(rec.constructor.name);\n      return;\n      let getValue = (v) => {\n        if (_.isObject(v))\n          return this._prepareRecord(v, rec);\n        else if (_.isArray(v))\n          return v.map(obj => getValue(obj));\n        return v;\n      };\n\n      let res = {};\n      for (let [k, v] of Object.entries(rec)) {\n        // prevent circular json object\n        if (parent && _.isObject(v))\n          continue;\n        res[k] = getValue(v);\n        if (v)\n        console.log(v.constructor.name);\n      }\n      if (this.dataSource.parent && !parent) {\n        let field = this.dataSource.parent.scope.view.fields[this.dataSource.fieldName]._info.field;\n        res[field] = this.dataSource.parent.record.$record._prepareRecord(this.dataSource.parent.record);\n      }\n      return res;\n    }\n\n    setModified(field) {\n      if (!this.modified && (this.state !== RecordState.destroyed)) {\n        if (this.pk)\n          this.state = RecordState.modified;\n        else\n          this.state = RecordState.created;\n      }\n      if (field)\n        this.dataSource.$setDirty(field);\n      this.dataSource._pendingChanges = true;\n      this.modified = true;\n\n      if (this.parent && this.scope.fieldName) {\n        this.parent.setModified(this.scope.fieldName);\n        this.parent.addChild(this);\n      }\n    }\n\n    get parent() {\n      return this.dataSource.parent && this.dataSource.parent.record.$record;\n    }\n\n    addChild(child) {\n      this.setModified(child.scope.fieldName);\n      if (this.children.indexOf(child) === -1) {\n        this.children.push(child);\n      }\n    }\n\n    compare(oldValue, newValue) {\n      if (_.isArray(oldValue) && _.isArray(newValue))\n        return oldValue.join(',') !== newValue.join(',');\n      return oldValue != newValue;\n    }\n\n    set(propKey, value) {\n      let field = this.dataSource.fieldByName(propKey);\n      if (field) {\n        let oldValue = this.raw[propKey];\n        value = field.toJSON(value);\n        // check if field value has been changed\n        if (this.compare(oldValue, value)) {\n          this.setModified(propKey);\n          this.data[propKey] = value;\n          this.modified = true;\n          // send field change event\n          if (field.onChange) {\n            let rec = this.$encode(this.raw);\n            rec[propKey] = value;\n\n            // let's send parent data\n            if (this.dataSource.parent && this.dataSource.fieldName) {\n              let field = this.dataSource.parent.fields[this.dataSource.fieldName]._info.field;\n              rec[field] = this.$encode(this.dataSource.parent.record);\n            }\n\n            // send prepared data\n            this.dataSource.dispatchEvent('field_change_event', [propKey, rec]);\n          }\n        }\n      }\n      return true;\n    }\n\n    $encode(obj) {\n      if (_.isArray(obj))\n        return obj.map(v => this.$encode(v));\n      else if (_.isObject(obj)) {\n        let r = {};\n        for (let [k, v] of Object.entries(obj))\n          if (!k.startsWith('$'))\n            r[k] = this.$encode(v);\n        return r;\n      } else\n        return obj;\n    }\n\n    $new() {\n      return Record(this.raw);\n    }\n\n    toObject() {\n      let data = jQuery.extend({}, this.data);\n      if (this.pk)\n        data.id = this.pk;\n      for (let child of this.children) {\n        if (!(child.scope.fieldName in data))\n          data[child.scope.fieldName] = [];\n        if (child.state === RecordState.created)\n          data[child.scope.fieldName].push({ action: 'CREATE', values: child.toObject() });\n        else if (child.state === RecordState.modified)\n          data[child.scope.fieldName].push({ action: 'UPDATE', values: child.toObject() });\n        else if (child.state === RecordState.destroyed)\n          data[child.scope.fieldName].push({ action: 'DESTROY', id: child.pk });\n      }\n      return data;\n    }\n  }\n\n  class SubRecords {\n    constructor(recs) {\n      this.recs = recs;\n    }\n\n    append(rec) {\n      if (this.recs.indexOf(rec) === -1)\n        this.recs.push(rec);\n    }\n  }\n\n\n  function createRecord(rec, dataSource) {\n    new Record(rec, dataSource);\n    return new Proxy(rec, {\n      set(target, propKey, value, receiver) {\n        if (!propKey.startsWith('$$')) {\n          let scope = dataSource.scope;\n          let field = dataSource.fieldByName(propKey);\n          if (!propKey.startsWith('$') && scope && field && !(field instanceof Katrid.Data.Fields.OneToManyField)) {\n            rec.$record.set(propKey, value);\n          }\n        }\n        return Reflect.set(target, propKey, value, receiver);\n      }\n    })\n  }\n\n  class RecordState {\n    static initClass() {\n      this.destroyed = 'destroyed';\n      this.created = 'created';\n      this.modified = 'modified';\n    }\n  }\n  RecordState.initClass();\n\n  Katrid.Data.RecordState = RecordState;\n  Katrid.Data.createRecord = createRecord;\n  Katrid.Data.SubRecords = SubRecords;\n\n})();\n","(function () {\n\n  class DataSourceState {\n    static initClass() {\n      this.inserting = 'inserting';\n      this.browsing = 'browsing';\n      this.editing = 'editing';\n      this.loading = 'loading';\n      this.inactive = 'inactive';\n    }\n  }\n  DataSourceState.initClass();\n\n  DEFAULT_REQUEST_INTERVAL = 300;\n\n  class DataSource {\n    constructor(scope, action) {\n      this.readonly = false;\n      this.$modifiedRecords = [];\n      // this.onFieldChange = this.onFieldChange.bind(this);\n      this.scope = scope;\n      this.action = action;\n      this._recordIndex = 0;\n      this.recordCount = null;\n      this.loading = false;\n      this.loadingRecord = false;\n      this._masterSource = null;\n      this._pageIndex = 0;\n      this.pageLimit = 100;\n      this.offset = 0;\n      this.offsetLimit = 0;\n      this.requestInterval = DEFAULT_REQUEST_INTERVAL;\n      this.pendingRequest = null;\n      this.fieldName = null;\n      this.children = [];\n      this.modifiedData = null;\n      this.uploading = 0;\n      this._state = null;\n      this.fieldWatchers = [];\n      this._pendingChanges = false;\n      this.recordId = null;\n      scope.$fieldLog = {};\n    }\n\n    get pageIndex() {\n      return this._pageIndex;\n    }\n\n    set pageIndex(page) {\n      this._pageIndex = page;\n      console.log('goto page', page);\n      this.search(this._params, page, this._fields, DEFAULT_REQUEST_INTERVAL);\n    }\n\n    get fields() {\n      return this.scope.view.fields;\n    }\n\n    get loadingAction() {\n      return this._loadingAction;\n    }\n\n    set loadingAction(v) {\n      if (v) this.requestInterval = 0;\n      else this.requestInterval = DEFAULT_REQUEST_INTERVAL;\n      this._loadingAction = v;\n    }\n\n    async cancel() {\n      if (!this.changing)\n        return;\n\n      this._recordIndex = null;\n      this._pendingChanges = false;\n      if (this.state === DataSourceState.editing)\n        await this.refresh();\n      else if (this.action)\n        this.action.switchView('list');\n      this.state = DataSourceState.browsing;\n\n      this.scope.$emit('afterCancel', this);\n    }\n\n    async saveAndClose() {\n      // Save changes and close dialog\n      let r = await this.save(false);\n      this.scope.$emit('saveAndClose', this.scope, r);\n      return this.action.$element.closest('.modal').modal('hide');\n    }\n\n\n    async copy(id) {\n      let res = await this.model.copy(id);\n      this.record = {};\n      await this.insert();\n      this.setValues(res);\n      return res;\n    }\n\n    findById(id) {\n      for (let rec of this.scope.records)\n        if (rec.id === id)\n          return rec;\n      return null;\n    }\n\n    hasKey(id) {\n      return this.findById(id) !== null;\n    }\n\n    refresh(data) {\n      let r;\n      if (data) {\n        // Refresh current record\n        r = this.get(data[0]);\n      } else if (this.scope.record && this.scope.record.id) {\n        r = this.get(this.scope.record.id);\n      } else {\n        r = this.search(this._params, this._page);\n      }\n      r.then(() => {\n        for (let child in this.children)\n          if (child.invalidate) {\n            child.invalidate(this.recordId);\n            child.scope.$apply();\n          }\n      });\n      return r;\n    }\n\n    _validateForm(elForm, form, errorMsgs) {\n      let elfield;\n      for (let errorType in form.$error)\n        if (errorType === 'required')\n        for (let child of Array.from(form.$error[errorType])) {\n          if (child.$name.startsWith('grid-row-form'))\n            elfield = this._validateForm(elForm.find('#' + child.$name), child, errorMsgs);\n          else {\n            elfield = elForm.find(`.form-field[name=\"${child.$name}\"]`);\n            elfield.addClass('ng-touched');\n            let scope = angular.element(elForm).scope();\n            const field = scope.view.fields[child.$name];\n            errorMsgs.push(`<span>${field.caption}</span><ul><li>${Katrid.i18n.gettext('This field cannot be empty.')}</li></ul>`);\n          }\n        }\n        else\n          console.log(form.$error[errorType]);\n\n      return elfield;\n    }\n\n    validate(raiseError=true) {\n      if (this.action.form.$invalid) {\n        let elfield;\n        let errors = [];\n        let s = `<span>${Katrid.i18n.gettext('The following fields are invalid:')}</span><hr>`;\n        const el = this.scope.formElement;\n        elfield = this._validateForm(el, this.scope.form, errors);\n        Katrid.ui.uiKatrid.setFocus(elfield);\n        s += errors.join('');\n        Katrid.ui.Dialogs.Alerts.error(s);\n        if (raiseError)\n          throw Error('Error validating form: ' + s);\n        return false;\n      }\n      return true;\n    }\n\n    indexOf(obj) {\n      if (this.scope.records)\n        return this.scope.records.indexOf(this.findById(obj.id));\n    }\n\n    search(params, page, fields, timeout) {\n      let master = this.masterSource;\n      // if (this.groups && !this.groups.length && this.scope.defaultGrouping) {\n      //   let g = {\n      //     context: {\n      //       grouping: [this.scope.defaultGrouping]\n      //     }\n      //   };\n      //   this.groupBy(g);\n      //   return;\n      // }\n      this._params = params;\n      this._page = page;\n      this._fields = fields;\n      this._clearTimeout();\n      this.pendingRequest = true;\n      this.loading = true;\n      page = page || 1;\n      this._pageIndex = page;\n      let domain;\n      if (this.action)\n        domain = this.action.info.domain;\n      if (domain) {\n        domain = JSON.parse(domain);\n      }\n      if (_.isObject(fields))\n        fields = Object.keys(fields);\n      params = {\n        count: true,\n        page,\n        params,\n        fields,\n        domain,\n        limit: this.pageLimit,\n      };\n\n      return new Promise(\n        (resolve, reject) => {\n\n          let req = () => {\n            this.model.search(params)\n            .catch(res => {\n              return reject(res);\n            })\n            .then(res => {\n              if (this.pageIndex > 1) {\n                this.offset = ((this.pageIndex - 1) * this.pageLimit) + 1;\n              } else {\n                this.offset = 1;\n              }\n              this.scope.$apply(() => {\n                if (res.count != null)\n                  this.recordCount = res.count;\n\n                let data = res.data;\n                if (this.readonly)\n                  this.scope.records = data;\n                else\n                  this.scope.records = data.map((obj) => Katrid.Data.createRecord(obj, this));\n                // list view uses only groups\n                //this.scope.groups = this.scope.records;\n                if (this.pageIndex === 1) {\n                  return this.offsetLimit = this.scope.records.length;\n                } else {\n                  return this.offsetLimit = (this.offset + this.scope.records.length) - 1;\n                }\n              });\n              return resolve(res);\n            })\n            .finally(() => {\n              this.pendingRequest = false;\n              this.scope.$apply(() => {\n                this.loading = false;\n              });\n            });\n          };\n\n          timeout = 0;\n\n          if (((this.requestInterval > 0) || timeout) && (timeout !== false))\n            this.pendingRequest = setTimeout(req, this.requestInterval);\n          else req();\n        }\n      );\n    }\n\n    async groupBy(group, params) {\n      this._params = [];\n      console.log('group by', group, params);\n      if (!group || !group.length) {\n        this.groups = [];\n        this.action.groups = null;\n        this.scope.groups = null;\n        this.search(params);\n        return;\n      }\n      this.scope.action.groups = group;\n      this.scope.groupings = [];\n      this.groups = group;\n      this.scope.groups = await this._loadGroup(group, 0, params);\n      return this.scope.$apply();\n    }\n\n    async _loadGroup(group, index, params, parent) {\n      let rows = [];\n      if (!params)\n        params = [];\n      if (parent && parent.$params)\n        params = params.concat(parent.$params);\n      let res = await this.model.groupBy([group[index]], params);\n      const groupName = group[index];\n      for (let r of res) {\n        let s = r[groupName];\n        let paramValue;\n        if ($.isArray(s)) {\n          paramValue = s[0];\n          s = s[1];\n        } else {\n          paramValue = s;\n        }\n        r.__str__ = s;\n        r.$expanded = false;\n        r.$group = groupName;\n        r.$params = [];\n        if (parent)\n          r.$params = r.$params.concat(parent.$params);\n        let params = {};\n        params[groupName] = paramValue;\n        r.$params.push(params);\n        r.$level = index;\n        r.$hasChildren = true;\n\n        // add group object to list\n        rows.push(r);\n      }\n      return rows;\n    }\n\n    goto(index) {\n      return this.recordIndex = index;\n    }\n\n    moveBy(index) {\n      const newIndex = (this._recordIndex + index);\n      if ((newIndex > -1) && (newIndex < this.scope.records.length))\n        this.recordIndex = newIndex;\n    }\n\n    _clearTimeout() {\n      this.loading = false;\n      this.loadingRecord = false;\n      this._canceled = true;\n      clearTimeout(this.pendingRequest);\n    }\n\n    set masterSource(master) {\n      this._masterSource = master;\n      master.children.push(this);\n    }\n\n    get masterSource() {\n      return this._masterSource;\n    }\n\n    applyModifiedData(form, element, record) {\n      const data = this.getModifiedData(form, element, record);\n      const _id = _.hash(record);\n      if (data) {\n        let ds = this.modifiedData;\n        if ((ds == null)) {\n          ds = {};\n        }\n        let obj = ds[_id];\n        if (!obj) {\n          obj = {};\n          ds[_id] = obj;\n        }\n        for (let attr in data) {\n          const v = data[attr];\n          obj[attr] = v;\n          //record[attr] = v;\n        }\n\n        this.modifiedData = ds;\n        this.masterSource.scope.form.$setDirty();\n      }\n      return data;\n    }\n\n    getNestedData() {\n      let ret = {};\n      for (let child of this.children)\n        if (child.$modifiedRecords.length) {\n          let res = [];\n          let deleted = [];\n          for (let rec of child.$modifiedRecords) {\n            if (rec.$deleted) {\n              deleted.push(rec);\n              if ((rec.id !== null) && (rec.id !== undefined))\n                res.push({id: rec.id, action: 'DESTROY'})\n            }\n          }\n\n          for (let rec of child.$modifiedRecords) {\n            console.log(rec.$modified, rec.$modifiedData);\n            if (rec.$modifiedData && !rec.$deleted && rec.$modified && (deleted.indexOf(rec) === -1)) {\n              let data = this._getModified(rec.$modifiedData);\n              if (rec.id)\n                data['id'] = rec.id;\n              jQuery.extend(data, child.getNestedData());\n              if ((rec.id === null) || (rec.id === undefined))\n                res.push({\n                  action: 'CREATE',\n                  values: data,\n                });\n              else if ((rec.id !== null) && (rec.id !== undefined))\n                res.push({\n                  action: 'UPDATE',\n                  values: data,\n                });\n            }\n          }\n          if (Object.keys(res).length > 0)\n            ret[child.fieldName] = res;\n        }\n      return ret;\n    }\n\n    save(autoRefresh=true) {\n      // Save pending children\n      for (let child of this.children)\n        if (child.changing)\n          child.scope.save();\n\n      const el = this.action.$form;\n      if (this.validate()) {\n        const data = this.record.$record.toObject();\n        // const data = this.getModifiedData(this.scope.form, el, this.scope.record);\n        this.action.form.data = data;\n\n        let beforeSubmit = el.attr('before-submit');\n        if (beforeSubmit)\n          beforeSubmit = this.scope.$eval(beforeSubmit);\n\n        //@scope.form.data = null\n\n        if (data) {\n          this.uploading++;\n          return this.model.write([data])\n          .then(res => {\n            // this._clearCache();\n            if (this.action && this.action.viewType && (this.action.viewType === 'form'))\n              Katrid.app.$location.search('id', res[0]);\n            this.action.form.$setPristine();\n            this.action.form.$setUntouched();\n            this._pendingChanges = false;\n            this.state = DataSourceState.browsing;\n            if (autoRefresh)\n              return this.refresh(res);\n            else\n              return res;\n\n          })\n          .catch(error => {\n            let s = `<span>${Katrid.i18n.gettext('The following fields are invalid:')}<hr></span>`;\n            if (error.message)\n              s = error.message;\n            else if (error.messages) {\n              let elfield;\n              for (let fld of Object.keys(error.messages)) {\n                const msgs = error.messages[fld];\n                let field;\n                // check qualified field name\n                if (fld.indexOf('.') > -1) {\n                  fld = fld.split('.');\n                  let subField = fld[1];\n                  for (let child of this.children)\n                    if (child.scope.fieldName === fld[0]) {\n                      field = child.scope.view.fields[subField];\n                    }\n                } else\n                  field = this.scope.view.fields[fld];\n                console.log('field invalid', field);\n                if (!field || !field.name)\n                  continue;\n                elfield = el.find(`.form-field[name=\"${field.name}\"]`);\n                elfield.addClass('ng-invalid ng-touched');\n                s += `<strong>${field.caption}</strong><ul>`;\n                for (let msg of msgs) {\n                  s += `<li>${msg}</li>`;\n                }\n                s += '</ul>';\n              }\n              if (elfield)\n                elfield.focus();\n            }\n\n            Katrid.UI.Dialogs.Alerts.error(s);\n            throw new Error(s);\n\n          })\n          .finally(() => this.scope.$apply(() => this.uploading-- ) );\n        } else\n          Katrid.UI.Dialogs.Alerts.warn(Katrid.i18n.gettext('No pending changes'));\n      }\n    }\n\n    _getNested(recs) {\n      let res = [];\n      if (recs.$deleted && recs.$deleted.recs.length)\n        for (let rec of recs.$deleted.recs)\n          res.push({id: rec.id, action: 'DESTROY'});\n\n      let vals;\n      if (recs.recs.length)\n        for (let rec of recs.recs) if (rec) {\n          vals = {};\n          if (rec.$created)\n            vals = {\n              action: 'CREATE',\n              values: this._getModified(rec.$modifiedData)\n            };\n          else if (rec.$modified) {\n            vals = {\n              action: 'UPDATE',\n              values: this._getModified(rec.$modifiedData)\n            };\n            vals.values.id = rec.id;\n          }\n          else\n            continue;\n          res.push(vals);\n        }\n\n      return res;\n    }\n\n\n    _getModified(data) {\n      let res = {};\n      if (data)\n        for (let [k, v] of Object.entries(data))\n          if (v instanceof Katrid.Data.SubRecords) {\n            res[k] = this._getNested(v);\n          } else\n            res[k] = v;\n      return res;\n    }\n\n    getModifiedData(form, element, record) {\n      let data = {};\n      if (record.$modified)\n        jQuery.extend(data, this._getModified(record.$modifiedData));\n\n      if (this.record.id)\n        data['id'] = record.id;\n      return data;\n    }\n\n    get(id, timeout, apply=true, index=false) {\n      this._clearTimeout();\n      this.state = DataSourceState.loading;\n      this.loadingRecord = true;\n      this._canceled = false;\n\n      return new Promise(\n        (resolve, reject) => {\n          const _get = () => {\n            return this.model.getById(id)\n            .catch(res => {\n              return reject(res);\n            })\n            .then(res => {\n              if (this._canceled || !res)\n                return;\n              if (this.state === DataSourceState.loading)\n                this.state = DataSourceState.browsing;\n              else if (this.state === DataSourceState.inserting)\n                return;\n              this.record = res.data[0];\n              if (index !== false)\n                this.scope.records[index] = this.record;\n              // if (apply)\n              //   this.scope.$apply();\n              return resolve(this.record);\n            })\n            .finally(() => {\n                this.loadingRecord = false;\n              if (apply)\n                return this.scope.$apply();\n            });\n          };\n          if (!timeout && !this.requestInterval)\n            return _get();\n          else\n            this.pendingRequest = setTimeout(_get, timeout || this.requestInterval);\n\n        }\n      );\n    }\n\n    get defaultValues() {\n\n    }\n\n    set defaultValues(values) {\n      for (let [k, v] of Object.entries(values)) {\n        if (_.isObject(v) && (k in this.fields)) {\n          this.fields[k].defaultValues = v;\n        }\n      }\n    }\n\n    async insert(loadDefaults=true, defaultValues, kwargs) {\n      this._clearTimeout();\n      for (let child of this.children)\n        child._clearTimeout();\n      let rec = {};\n      rec.$created = true;\n      let oldRecs = this.scope.records;\n      this.record = rec;\n      this.scope.records = oldRecs;\n      let res;\n\n      for (let child of this.children)\n        child.scope.records = [];\n\n      // check if load defaults is needed\n      if (loadDefaults)\n        // load default fields values with optional kwargs\n        res = await this.model.getDefaults(kwargs);\n\n      const urlParams = new URLSearchParams();\n      console.log(urlParams);\n\n      this.state = DataSourceState.inserting;\n      this.scope.record.display_name = Katrid.i18n.gettext('(New)');\n\n      let defaults = {};\n      if (this.masterSource && this.field && this.field.defaultValues)\n        Object.assign(defaults, this.field.defaultValues);\n      for (let v of Object.values(this.fields))\n        if (v.default)\n          defaults[v.name] = v.default;\n      if (this.scope.ngDefaultValues)\n        Object.assign(defaults, this.scope.$eval(this.scope.ngDefaultValues));\n      if (this.action.context.default_values)\n        Object.assign(defaults, this.action.context.default_values);\n      if (defaultValues)\n        Object.assign(defaults, defaultValues);\n      if (res)\n        Object.assign(defaults, res);\n\n      // eval functions values\n      for (let [k, v] of Object.entries(defaults))\n        if (_.isFunction(v)) {\n          v = v(defaults, this);\n          if (!_.isUndefined(v))\n            defaults[k] = v;\n        }\n      this.setValues(defaults);\n    }\n\n    _new() {\n      return Katrid.Data.createRecord({}, this);\n    }\n\n    setValues(values) {\n      Object.entries(values).forEach(([k, v]) => {\n        let fld = this.fields[k];\n        if (fld)\n          fld.fromJSON(v, this);\n        else\n          this.scope.record[k] = v;\n      });\n\n      this.scope.$apply();\n    }\n\n    edit() {\n      this.state = DataSourceState.editing;\n    }\n\n    toClientValue(attr, value) {\n      const field = this.scope.view.fields[attr];\n      if (field) {\n        if (field.type === 'DateTimeField') {\n          value = new Date(value);\n        }\n      }\n      return value;\n    }\n\n    fieldByName(fieldName) {\n      if (this.scope.views)\n        return this.scope.views.form.fields[fieldName];\n      else\n        return this.scope.view.fields[fieldName];\n    }\n\n    set state(state) {\n      // Clear modified fields information\n      this._modifiedFields = [];\n      this._state = state;\n      this.inserting = state === DataSourceState.inserting;\n      this.editing = state === DataSourceState.editing;\n      this.loading = state === DataSourceState.loading;\n      this.changing =  [DataSourceState.editing, DataSourceState.inserting].includes(this.state);\n      if (this.scope)\n        this.scope.$emit('dataStateChange', this);\n    }\n\n    get browsing() {\n      return this._state === DataSourceState.browsing;\n    }\n\n    childByName(fieldName) {\n      for (let child of this.children) {\n        if (child.fieldName === fieldName)\n          return child;\n      }\n    }\n\n    get state() {\n      return this._state;\n    }\n\n    get record() {\n      return this.scope.record;\n    }\n\n    set recordId(value) {\n      // refresh record id\n      this.scope.recordId = value;\n      // refresh children\n      // avoid grid field delayed\n      for (let child of this.children)\n        child.pendingMasterId = value;\n      this.scope.$broadcast('masterChanged', this, value);\n    }\n\n    get recordId() {\n      return this.scope.recordId;\n    }\n\n    set record(rec) {\n      // Track field changes\n      console.log('set record', rec);\n      this.scope.record = Katrid.Data.createRecord(rec, this);\n      this.recordId = rec.id;\n      this._pendingChanges = false;\n      if (this.scope.form)\n        this.scope.form.$setPristine();\n      // this.state = DataSourceState.browsing;\n    }\n\n    next() {\n      return this.moveBy(1);\n    }\n\n    prior() {\n      return this.moveBy(-1);\n    }\n\n    nextPage() {\n      let p = this.recordCount / this.pageLimit;\n      if (Math.floor(p)) {\n        p++;\n      }\n      if (p > (this.pageIndex + 1)) {\n        this.pageIndex++;\n      }\n    }\n\n    prevPage() {\n      if (this.pageIndex > 1) {\n        this.pageIndex--;\n      }\n    }\n\n    set recordIndex(index) {\n      this._recordIndex = index;\n      this.scope.record = this.scope.records[index];\n      if (!this.parent)\n        return Katrid.app.$location.search('id', this.scope.record.id);\n      // load record\n      this.scope.recordId = null;\n      // set new id on browser address\n    }\n\n    get recordIndex() {\n      return this._recordIndex;\n    }\n\n    async expandGroup(index, row) {\n      let params = [];\n      if (this._params)\n        params = params.concat(this._params);\n      if (row.$params)\n        params = params.concat(row.$params);\n      if (row.$level === (this.groups.length - 1)) {\n        let res = await this.model.search({params});\n        if (res.data) {\n          row.$children = res.data;\n          this.scope.$apply(() => {\n            this.scope.groups.splice.apply(this.scope.groups, [index + 1, 0].concat(res.data));\n          })\n        }\n        this.scope.records = this._chain();\n      } else {\n        // expand next group level\n        let rows = await this._loadGroup(this.groups, row.$level + 1, this._params, row);\n        row.$children = rows;\n        this.scope.groups.splice.apply(this.scope.groups, [index + 1, 0].concat(rows));\n        this.scope.$apply();\n      }\n\n      // .then(res => {\n      //   console.log('')\n      //   if (res.ok && res.result.data) {\n      //     return this.action.scope.$apply(() => {\n      //       rg._children = res.result.data;\n      //       return this.action.scope.records.splice.apply(this.scope.records, [index + 1, 0].concat(res.result.data));\n      //     });\n      //   }\n    }\n\n    collapseGroup(index, row) {\n      let collapse = (index, row) => {\n        console.log('collapse', index, row);\n        if (row.$children && row.$children.length && row.$level !== (this.groups.length - 1))\n          row.$children.map(obj => collapse(this.scope.groups.indexOf(obj), obj));\n        if (row.$children && row.$children.length)\n          this.scope.groups.splice(index+1, row.$children.length);\n        row.$children = [];\n      };\n      collapse(index, row);\n      this.scope.records = this._chain();\n    }\n\n    _chain() {\n      let records = [];\n      for (let obj of this.scope.groups)\n        if (obj.$hasChildren && obj.$expanded && obj.$children.length)\n          records = records.concat(obj.$children);\n      return records;\n    }\n\n    _applyResponse(res) {\n      if (res) {\n        if (res.value)\n          this.setValues(res.value);\n        this.scope.$apply();\n      }\n    }\n\n    async dispatchEvent(name, ...args) {\n      let res = await this.model.rpc(name, ...args);\n      this._applyResponse(res);\n    }\n\n    get model() {\n      return this.scope.model;\n    }\n\n    open() {\n      this.search({}, 1, this.action.view.fields);\n    }\n\n    get parent() {\n      return this.masterSource;\n    }\n\n    set parent(value) {\n      this._masterSource = value;\n    }\n\n    $setDirty(field) {\n      let form = this.scope.form;\n      if (form) {\n        let control = form[field];\n        if (control)\n          control.$setDirty();\n      } else if (this.action)\n        this.action.setDirty(field);\n    }\n\n    destroyChildren() {\n      for (let child of this.children)\n        child.scope.$destroy();\n      this.children = [];\n    }\n  }\n\n\n  Katrid.Data.DataSource = DataSource;\n  Katrid.Data.DataSourceState = DataSourceState;\n\n})();\n","(function() {\n\n  function toCamelCase(s) {\n    // remove all characters that should not be in a variable name\n    // as well underscores an numbers from the beginning of the string\n    s = s.replace(/([^a-zA-Z0-9_\\- ])|^[_0-9]+/g, \"\").trim().toLowerCase();\n\n    // uppercase letters preceeded by a hyphen or a space\n    s = s.replace(/([ -]+)([a-zA-Z0-9])/g, function(a,b,c) {\n      return c.toUpperCase();\n    });\n\n    // uppercase letters following numbers\n    s = s.replace(/([0-9]+)([a-zA-Z])/g, function(a,b,c) {\n      return b + c.toUpperCase();\n    });\n\n    return s;\n  }\n\n  class Field {\n    constructor(info) {\n      this.cols = info.cols || 6;\n      this.visible = true;\n      this._info = info;\n      this.cssClass = info.type;\n      this.caption = info.caption || info.name;\n      this.helpText = this._info.help_text;\n      this.required = this._info.required;\n      this.onChange = this._info.onchange;\n      this.nolabel = false;\n\n      if (this._info.visible === false)\n        this.visible = false;\n      this.readonly = this._info.readonly;\n      if (!this.readonly)\n        this.readonly = false;\n\n      this.displayChoices = _.object(info.choices);\n      this.choices = info.choices;\n\n      if (info.choices)\n        this.template = {\n          list: 'view.list.selection-field.jinja2',\n          card: 'view.list.selection-field.jinja2',\n          form: 'view.form.selection-field.jinja2',\n        };\n      else\n        this.template = {\n          list: 'view.list.field.jinja2',\n          card: 'view.list.field.jinja2',\n          form: 'view.form.field.jinja2',\n        };\n\n      if (info.template)\n        this.template = Object.assign(this.template, info.template);\n\n      this.emptyText = '--';\n    }\n\n    static fromInfo(info) {\n      let cls = Katrid.Data.Fields[info.type] || StringField;\n      return new cls(info);\n    }\n\n    static fromArray(fields) {\n      let r = {};\n      Object.keys(fields).map(k => r[k] = this.fromInfo(fields[k]));\n      return r;\n    }\n\n    render(viewType, el, context) {\n      this.$el = el;\n      let attrs = {};\n      for (let attr of el[0].attributes) {\n        attrs[attr.name] = attr.value;\n        let camelCase = toCamelCase(attr.name);\n        if (camelCase !== attr.name)\n          attrs[camelCase] = attr.value;\n      }\n\n      if (attrs.cols)\n        this.cols = attrs.cols;\n      if (attrs.ngReadonly)\n        this.ngReadonly = attrs.ngReadonly;\n      if (attrs.domain)\n        this.domain = attrs.domain;\n      if (attrs.visible === 'false')\n        this.visible = false;\n      else if (attrs.visible === 'true')\n        this.visible = true;\n      if (attrs.ngShow)\n        this.ngShow = attrs.ngShow;\n      if (attrs.ngIf)\n        this.ngIf = attrs.ngIf;\n      if (attrs.ngClass)\n        this.ngClass = attrs.ngClass;\n      this.attrs = attrs;\n\n      context['field'] = this;\n      context['attrs'] = attrs;\n\n      // replace the field content by its html content\n      context['html'] = el.html();\n\n      return Katrid.app.getTemplate(this.template[viewType], context);\n    }\n\n    assign(el) {\n      this.$el = el;\n      let caption = el.attr('label');\n      if (!_.isUndefined(caption))\n          this.caption = caption;\n      let readonly = el.attr('ng-readonly');\n      let invisible = el.attr('invisible');\n      if (!_.isUndefined(invisible))\n        this.visible = false;\n      if (!_.isUndefined(readonly))\n        this.ngReadonly = readonly;\n      let cols = el.attr('cols');\n      if (!_.isUndefined(cols))\n        this.cols = cols;\n\n    }\n\n    fromJSON(value, dataSource) {\n      dataSource.record[this.name] = value;\n    }\n\n    get validAttributes() {\n       return ['name', 'nolabel', 'readonly', 'required'];\n    }\n\n    getAttributes() {\n      let res = {};\n      let validAttrs = this.validAttributes;\n      if (this.ngReadonly)\n        res['ng-readonly'] = this.ngReadonly;\n      else if (this.readonly)\n        res['readonly'] = this.readonly;\n      res['ng-model'] = 'record.' + this.name;\n      if (attrs.ngFieldChange) {\n        res['ng-change'] = attrs.ngFieldChange;\n        console.log('change', attrs.ngFieldChange);\n      }\n      if (this.required)\n        res['required'] = this.required;\n      return res;\n    }\n\n    get hasChoices() {\n      return this._info.choices && this._info.choices.length > 0;\n    }\n\n   get name() {\n      return this._info.name;\n    }\n\n    get model() {\n      return this._info.model;\n    }\n\n    get maxLength() {\n      return this._info.max_length;\n    }\n\n    get type() {\n      return this._info.type;\n    }\n\n    get paramTemplate() {\n      return 'view.param.String';\n    }\n\n    format(value) {\n      return value.toString();\n    }\n\n    toJSON(val) {\n      return val;\n    }\n\n    createWidget(widget, scope, attrs, element) {\n      if (!widget) {\n        // special fields case\n        if (this.hasChoices)\n          widget = 'SelectionField';\n      }\n      let cls = Katrid.ui.Widgets[widget || this.type] || Katrid.ui.Widgets.StringField;\n      return new cls(scope, attrs, this, element);\n    }\n\n    validate() {\n\n    }\n\n    get defaultCondition() {\n      return '=';\n    }\n\n    isControlVisible(condition) {\n      switch (condition) {\n        case 'is null':\n          return false;\n        case 'is not null':\n          return false;\n      }\n      return true;\n    }\n\n  }\n\n  class StringField extends Field {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n    }\n  }\n\n  class PasswordField extends StringField {\n    constructor(info) {\n      if (!info.template)\n        info.template = {};\n      if (!info.template.form)\n        info.template.form = 'view.form.password.jinja2';\n      if (!info.template.list)\n        info.template.list = 'view.list.password.jinja2';\n      super(info);\n    }\n  }\n\n\n  class BooleanField extends Field {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n      this.template.form = 'view.form.boolean-field.jinja2';\n      this.template.list = 'view.list.boolean-field.jinja2';\n      this.template.card = 'view.list.boolean-field.jinja2';\n      this.nolabel = true;\n    }\n\n    get paramTemplate() {\n      return 'view.param.Boolean';\n    }\n\n  }\n\n  class DateField extends Field {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n      this.template.form = 'view.form.date-field.jinja2';\n      this.template.list = 'view.list.date-field.jinja2';\n      this.template.card = 'view.list.date-field.jinja2';\n    }\n\n    toJSON(val) {\n      return val;\n    }\n\n    get paramTemplate() {\n      return 'view.param.Date';\n    }\n\n    format(value) {\n      if (_.isString(value))\n        return moment(value).format(Katrid.i18n.gettext('yyyy-mm-dd').toUpperCase());\n      return '';\n    }\n\n    getAttributes(attrs) {\n      let res = super.getAttributes(attrs);\n      res['type'] = 'date';\n      return res;\n    }\n  }\n\n  class DateTimeField extends DateField {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n      this.template.form = 'view.form.datetime-field.jinja2';\n      this.template.list = 'view.list.datetime-field.jinja2';\n    }\n\n    get paramTemplate() {\n      return 'view.param.DateTime';\n    }\n\n    getAttributes(attrs) {\n      let res = super.getAttributes(attrs);\n      res['type'] = 'datetime-local';\n      return res;\n    }\n  }\n\n\n  class TimeField extends DateTimeField {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n      this.template.form = 'view.form.time-field.jinja2';\n      this.template.list = 'view.list.time-field.jinja2';\n    }\n  }\n\n\n  class NumericField extends Field {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n      this.template.form = 'view.form.decimal-field.jinja2';\n      this.template.list = 'view.list.decimal-field.jinja2';\n    }\n\n    fromJSON(value, dataSource) {\n      dataSource.record[this.name] = parseFloat(value);\n    }\n\n    toJSON(val) {\n      if (val && _.isString(val))\n        return parseFloat(val);\n      return val;\n    }\n\n  }\n\n\n  class IntegerField extends Field {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n      this.template.form = 'view.form.numeric-field.jinja2';\n      this.template.list = 'view.list.numeric-field.jinja2';\n    }\n\n    toJSON(val) {\n      if (val && _.isString(val))\n        return parseInt(val);\n      return val;\n    }\n\n    get paramTemplate() {\n      return 'view.param.Integer';\n    }\n  }\n\n  class FloatField extends NumericField {\n  }\n\n  class DecimalField extends NumericField {\n    constructor() {\n      super(...arguments);\n      this.decimalPlaces = 2;\n      if (this._info.attrs) {\n        this.decimalPlaces = this._info.attrs.decimal_places || 2;\n      }\n    }\n  }\n\n  class ForeignKey extends Field {\n    constructor(info) {\n      super(...arguments);\n      this.domain = info.domain;\n      Object.assign(this.template, {\n        list: 'view.list.foreignkey.jinja2',\n        card: 'view.list.foreignkey.jinja2',\n        form: 'view.form.foreignkey.jinja2',\n      });\n      if (Katrid.settings.ui.isMobile)\n        this.template.form = 'view.form.autocomplete.jinja2';\n    }\n\n    assign(el) {\n      super.assign(el);\n      let domain = $(el).attr('domain');\n      if (domain)\n        this.domain = domain;\n    }\n\n    toJSON(val) {\n      if (_.isArray(val))\n        return val[0];\n      return val;\n    }\n\n    get validAttributes() {\n      return super.validAttributes.concat(['domain']);\n    }\n  }\n\n  class OneToManyField extends Field {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 12;\n      super(...arguments);\n      this.template.form = 'view.form.grid.jinja2';\n    }\n    get field() {\n      return this._info.field;\n    }\n\n    get validAttributes() {\n      return super.validAttributes.concat(['inline-editor', 'ng-default-values']);\n    }\n\n    fromJSON(val, dataSource) {\n      if (val && val instanceof Array) {\n        let child = dataSource.childByName(this.name);\n        val.map((obj) => {\n          if (obj.action === 'CLEAR') {\n            child.scope.records = [];\n            dataSource.record[this.name] = [];\n          }\n          else if (obj.action === 'CREATE') {\n            child.scope.addRecord(obj.values);\n          }\n        });\n          child.scope.$apply();\n\n      }\n    }\n  }\n\n  class ManyToManyField extends ForeignKey {\n    constructor(info) {\n      super(...arguments);\n      if (!info.template || (info.template && !info.template.form))\n        this.template.form = 'view.form.manytomany.jinja2';\n    }\n\n    toJSON(val) {\n      if (_.isArray(val))\n        return val.map(obj => _.isArray(obj) ? obj[0] : obj);\n      else if (_.isString(val))\n        val = val.split(',');\n      return val;\n    }\n  }\n\n  class TextField extends StringField {\n    constructor(info) {\n      super(...arguments);\n      if (!info.template || (info.template && !info.template.form))\n        this.template.form = 'view.form.text-field.jinja2';\n    }\n  }\n\n  class XmlField extends TextField {\n    constructor(info) {\n      super(...arguments);\n      // TODO change to code editor\n      if (!info.template || (info.template && !info.template.form))\n        this.template.form = 'view.form.code-editor.jinja2';\n    }\n  }\n\n  class JsonField extends TextField {\n    constructor(info) {\n      super(...arguments);\n      // TODO change to code editor\n      if (!info.template || (info.template && !info.template.form))\n        this.template.form = 'view.form.json-field.jinja2';\n    }\n  }\n\n  class PythonCodeField extends TextField {\n    constructor(info) {\n      super(...arguments);\n      console.log('python code field');\n      if (!info.template || (info.template && !info.template.form))\n        this.template.form = 'view.form.python-code.jinja2';\n    }\n  }\n\n  class ImageField extends Field {\n    constructor(info) {\n      if (!info.template)\n        info.template = {};\n      if (!info.template.form)\n        info.template.form = 'view.form.image-field.jinja2';\n      super(...arguments);\n      this.noImageUrl = '/static/web/assets/img/no-image.png';\n    }\n\n    getAttributes(attrs) {\n      let res = super.getAttributes(attrs);\n      res.ngSrc = attrs.ngEmptyImage || (attrs.emptyImage && (`'${attrs.emptyImage}`)) || `'${this.noImageUrl}'`;\n      res.ngSrc = `{{ ${res['ng-model']} || ${res.ngSrc} }}`;\n      return res;\n    }\n\n    get ngSrc() {\n      let ngSrc = this.attrs.ngEmptyImage || (this.attrs.emptyImage && (`'${this.attrs.emptyImage}`)) || `'${this.noImageUrl}'`;\n      ngSrc = `\\${ record.${this.name} || ${ngSrc} }`;\n      return ngSrc\n    }\n  }\n\n  Katrid.Data.Fields = {\n    Field,\n    StringField,\n    PasswordField,\n    IntegerField,\n    FloatField,\n    DecimalField,\n    DateTimeField,\n    TimeField,\n    ForeignKey,\n    OneToManyField,\n    ManyToManyField,\n    TextField,\n    XmlField,\n    JsonField,\n    PythonCodeField,\n    DateField,\n    BooleanField,\n    ImageField,\n  }\n\n\n})();\n","var Katrid;\n(function (Katrid) {\n    var UI;\n    (function (UI) {\n        Katrid.UI = {\n            keyCode: {\n                BACKSPACE: 8,\n                COMMA: 188,\n                DELETE: 46,\n                DOWN: 40,\n                END: 35,\n                ENTER: 13,\n                ESCAPE: 27,\n                HOME: 36,\n                LEFT: 37,\n                PAGE_DOWN: 34,\n                PAGE_UP: 33,\n                PERIOD: 190,\n                RIGHT: 39,\n                SPACE: 32,\n                TAB: 9,\n                UP: 38\n            },\n            toggleFullScreen() {\n                if (!document.fullscreenElement &&\n                    !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement) {\n                    if (document.documentElement.requestFullscreen) {\n                        document.documentElement.requestFullscreen();\n                    }\n                    else if (document.documentElement.msRequestFullscreen) {\n                        document.documentElement.msRequestFullscreen();\n                    }\n                    else if (document.documentElement.mozRequestFullScreen) {\n                        document.documentElement.mozRequestFullScreen();\n                    }\n                    else if (document.documentElement.webkitRequestFullscreen) {\n                        document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n                    }\n                }\n                else {\n                    if (document.exitFullscreen) {\n                        document.exitFullscreen();\n                    }\n                    else if (document.msExitFullscreen) {\n                        document.msExitFullscreen();\n                    }\n                    else if (document.mozCancelFullScreen) {\n                        document.mozCancelFullScreen();\n                    }\n                    else if (document.webkitExitFullscreen) {\n                        document.webkitExitFullscreen();\n                    }\n                }\n            }\n        };\n        Katrid.UI.uiKatrid = angular.module('ui.katrid', []);\n    })(UI = Katrid.UI || (Katrid.UI = {}));\n})(Katrid || (Katrid = {}));\n","(function () {\n\n  class ActionManager extends Array {\n    constructor() {\n      super();\n      this.currentAction = null;\n      this.mainAction = null;\n    }\n\n    addAction(action) {\n      if (!this.mainAction)\n        this.mainAction = action;\n      this.push(action);\n      this.currentAction = action;\n    }\n\n    back(action, url) {\n      if (action)\n        this.action = action;\n      else if (this.length > 1)\n        this.action = this[this.length-2];\n      this.action.$attach();\n      this.action.refreshBreadcrumb();\n      if (angular.isString(url))\n        Katrid.app.loadPage(url);\n      else if (url)\n        Katrid.app.$location.search(url);\n    }\n\n    removeAction(action) {\n      this.splice(this.indexOf(action), this.length);\n      if (this.length === 0)\n        this.mainAction = null;\n    }\n\n    get action() {\n      return this.currentAction;\n    }\n\n    get context() {\n      if (this.currentAction)\n        return this.currentAction.context;\n    }\n\n    set action(action) {\n      let i = this.indexOf(action);\n      if (i > -1) {\n        i++;\n        while (this.length > i)\n          this[i].$destroy();\n        this.currentAction = action;\n      }\n    }\n\n    clear() {\n      for (let action of this)\n        action.$destroy();\n      this.length = 0;\n      this.mainAction = null;\n      this.currentAction = null;\n    }\n\n    get path() {\n      return this.action.path;\n    }\n\n    doAction(action) {\n\n    }\n\n    async onHashChange(params, reset) {\n      let actionId = params.action;\n\n      // clear action manager history\n      if (reset)\n        this.clear();\n\n      // check if action has changed\n      let oldAction, action;\n      action = oldAction = this.currentAction;\n\n\n      // action auto detection\n      if (!actionId && params.model && (!action || (action.params && (action.params.model !== params.model)))) {\n        // get a virtual window action\n        let svc = new Katrid.Services.Model(params.model);\n        let actionInfo = await svc.rpc('get_formview_action', [params.id]);\n        let scope = this.createScope();\n        action = scope.action = new Katrid.Actions[actionInfo.action_type](actionInfo, scope, params);\n      } else if (!(this.currentAction && (this.currentAction.info.id == actionId))) {\n        if (this.currentAction && reset)\n          this.currentAction.$destroy();\n        let actionInfo = await Katrid.Services.Actions.load(actionId);\n        let scope = this.createScope();\n        action = scope.action = new Katrid.Actions[actionInfo.action_type](actionInfo, scope, params);\n      }\n\n      await action.onHashChange(params);\n    }\n\n    createScope() {\n      let scope = Katrid.app.$scope.$new(true);\n      scope._ = _;\n      return scope;\n    }\n\n    get breadcrumb() {\n      if (this._breadcrumb)\n        return this._breadcrumb;\n      let breadcrumb = [];\n      for (let action of this) {\n        let bc = action.breadcrumb;\n        if (bc && bc.length) {\n          for (let b of bc)\n            b.isLeaf = false;\n          breadcrumb.push(...bc);\n        }\n      }\n      breadcrumb[breadcrumb.length-1].isLeaf = true;\n      this._breadcrumb = breadcrumb;\n      return breadcrumb;\n    }\n  }\n\n  class Action {\n    static initClass() {\n      this.actionType = null;\n      this._context = null;\n    }\n\n    constructor(info, scope, params, $container) {\n      this.info = info;\n      this.scope = scope;\n      Katrid.app.actionManager.addAction(this);\n\n      if (!$container)\n        $container = Katrid.app.$element;\n      this.$parent = $container;\n    }\n\n    $destroy() {\n      Katrid.app.actionManager.removeAction(this);\n      this.scope.$destroy();\n      if (this.$element)\n        // check if there's an element\n        this.$element.remove();\n      else\n        // or clear the container\n        this.$parent.empty();\n    }\n\n    get id() {\n      return this.info.id;\n    }\n\n    get context() {\n      if (_.isString(this.info.context))\n        this._context = JSON.parse(this.info.context);\n      else\n        this._context = {};\n\n      // get query string context\n      // load default values on query string\n      let searchParams = window.location.href.split('#', 2)[1];\n      if (searchParams) {\n        const urlParams = new URLSearchParams(searchParams);\n        for (let [k, v] of urlParams)\n          if (k.startsWith('default_'))\n            this._context[k] = v;\n      }\n\n      return this._context;\n    }\n\n    doAction(act) {\n      let type = act.type || act.action_type;\n      return Katrid.Actions[type].dispatchAction(this, act);\n    }\n\n    openObject(evt) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      if (evt.ctrlKey) {\n        window.open(evt.target.href);\n        return false;\n      } else {\n        console.log(evt.target.href);\n        location.hash = evt.target.href;\n      }\n      return false;\n    }\n\n    restore() {}\n\n    apply() {}\n    backTo(index) {\n      let b = Katrid.app.actionManager.breadcrumb[index];\n      if (b)\n        Katrid.app.actionManager.back(b.action, b.url);\n      return;\n      if (this._currentPath !==  this._unregisterHook && (Katrid.app.actionManager.length > 1))\n        this._unregisterHook();\n\n      // restore to query view\n      let action = Katrid.app.actionManager[index];\n      if ((index === 0) && (viewType === 0))\n        return action.restore(action.searchViewType || action.viewModes[0]);\n      else if ((index === 0) && (viewType === 'form'))\n        return action.restore('form');\n\n      Katrid.app.actionManager.action = action;\n\n      if (!viewType)\n        viewType = 'form';\n\n      let location;\n      location = action.currentUrl;\n      action.info.__cached = true;\n      let p = this.location.path(location, true, action.info);\n      let search = action._currentParams[viewType];\n      if (search)\n        p.search(search);\n    }\n\n    execute() {}\n\n    getCurrentTitle() {\n      return this.info.display_name;\n    }\n\n    search() {\n      if (!this.isDialog) {\n        return this.location.search.apply(null, arguments);\n      }\n    }\n\n\n    async onHashChange(params) {\n      location.hash = '#/app/?' + $.param(params);\n      await this.execute();\n    }\n  }\n  Action.initClass();\n\n\n  class ViewAction extends Action {\n    static initClass() {\n      this.actionType = 'ir.action.view';\n    }\n\n    async onHashChange(params) {\n      location.hash = '#/app/?' + $.param(params);\n      let svc = new Katrid.Services.Model('ir.action.view');\n      let res = await svc.post('get_view', { args: [ this.info.view[0] ] });\n      let content = res.content;\n      Katrid.app.$element.html(Katrid.Core.$compile(content)(this.scope));\n    }\n  }\n  ViewAction.initClass();\n\n\n  class UrlAction extends Action {\n    static initClass() {\n      this.actionType = 'ir.action.url';\n    }\n\n    constructor(info, scope, location) {\n      super(info, scope, location);\n      window.location.href = info.url;\n    }\n  }\n  UrlAction.initClass();\n\n\n  Katrid.Actions = {\n    Action,\n    ViewAction,\n    UrlAction,\n    ActionManager,\n  };\n\n\n  Katrid.Actions[ViewAction.actionType] = ViewAction;\n  Katrid.Actions[UrlAction.actionType] = UrlAction;\n\n\n})();\n","(function() {\n\n  class ClientAction extends Katrid.Actions.Action {\n    static initClass() {\n      this.actionType = 'ir.action.client';\n      this.registry = {};\n    }\n\n    static register(tag, obj) {\n      this.registry[tag] = obj;\n    }\n\n    static executeTag(parent, act) {\n      // get action\n      let action = this.registry[act.tag];\n      if (action.prototype instanceof Katrid.UI.Views.ActionView) {\n        action = new action(parent.scope);\n        action.renderTo(parent);\n      }\n      else console.log('is a function');\n    }\n\n    static tagButtonClick(btn) {\n      let action = {\n        type: 'ir.action.client',\n        tag: btn.attr('name'),\n        target: btn.attr('target') || 'new',\n      };\n\n      action = new ClientAction(action, Katrid.Actions.actionManager.action.scope, Katrid.Actions.actionManager.action.location);\n      action.execute();\n    }\n\n    tag_refresh() {\n      this.dataSource.refresh();\n    }\n\n    get templateUrl() {\n      console.log(this.tag);\n      return this.tag.templateUrl;\n    }\n\n    async execute() {\n      let tag = ClientAction.registry[this.info.tag];\n      this.tag = tag;\n      if (tag.prototype instanceof Katrid.UI.Views.ClientView) {\n        this.tag = new tag(this);\n        let el = await this.tag.render();\n        if (this.info.target === 'new') {\n          el = el.modal();\n        } else {\n          $('#katrid-action-view').empty().append(el);\n        }\n      } else if (_.isString(tag))\n        this[tag].apply(this);\n    }\n\n    async routeUpdate(location) {\n      // this.execute();\n    }\n\n    get template() {\n      return this.tag.template;\n    }\n  }\n\n  ClientAction.initClass();\n\n  Katrid.Actions.ClientAction = ClientAction;\n  Katrid.Actions[ClientAction.actionType] = ClientAction;\n\n})();\n","(function() {\n\n  class WindowAction extends Katrid.Actions.Action {\n    static initClass() {\n      this.actionType = 'ir.action.window';\n    }\n\n    constructor(info, scope, params, $container) {\n      super(info, scope, params, $container);\n      this.viewMode = info.view_mode;\n      this.viewModes = this.viewMode.split(',');\n      if (info.model)\n        scope.model = this.model = new Katrid.Services.Model(info.model);\n      this.dataSource = new Katrid.Data.DataSource(scope, this);\n      scope.$on('dataStateChange', this.onDataStateChange);\n      scope.$on('afterCancel', (evt, dataSource) => {\n        if (dataSource === this.dataSource)\n          this.afterCancel(evt, dataSource);\n      });\n    }\n\n    afterCancel(evt, dataSource) {\n      if (dataSource.state === Katrid.Data.DataSourceState.inserting) {\n        this.dataSource.record = {};\n        this.back();\n      }\n    }\n\n    back() {\n      Katrid.app.actionManager.history.back();\n    }\n\n    setDirty(field) {\n      const control = this.form[field];\n      if (control) {\n        control.$setDirty();\n      }\n    }\n\n    async onHashChange(params) {\n      // normalize hash\n      let invalidate = false;\n      let allowedParams = ['action', 'view_type', 'menu_id', 'model'];\n      let loadRecord = (this.params && (this.params.id !== params.id));\n      this.params = {};\n      if (!params.view_type) {\n        this.params.view_type = this.viewModes[0];\n        invalidate = true;\n      }\n      if (!params.model) {\n        this.params.model = this.info.model;\n        invalidate = true;\n      }\n\n      Object.assign(this.params, params);\n      // view type form accepts id param\n      if (this.params.view_type === 'form')\n        allowedParams.splice(0, 0, 'id');\n      for (let k of Object.keys(this.params))\n        if (!allowedParams.includes(k) && !k.startsWith('default_')) {\n          invalidate = true;\n        }\n\n      // invalidate location hash\n      if (invalidate) {\n        let oldParams = this.params;\n        this.params = {};\n        for (let k of allowedParams)\n          this.params[k] = oldParams[k];\n\n        // the action param is not required if empty\n        if (!this.params.action)\n          delete this.params.action;\n\n        // redirect to new params\n        location.hash = '#/app/?' + $.param(this.params);\n      }\n\n      // apply params\n      let viewType = this.params.view_type;\n      if (viewType !== this.viewType) {\n        this.viewType = viewType;\n        await this.execute();\n      }\n      if (this.params.id && (this.dataSource.recordId != this.params.id))\n        await this.dataSource.get(this.params.id);\n    }\n\n    rpc(method, data, event) {\n      if (event)\n        event.stopPropagation();\n      if (!data)\n        data = {};\n      else if (_.isArray(data))\n        data = { args: data };\n      else if (!_.isObject(data))\n        data = { args: [data] };\n      this.model.rpc(method, data.args, data.kwargs);\n    }\n\n    getContext() {\n      let ctx = super.getContext();\n      let sel = this.selection;\n      if (sel && sel.length) {\n        ctx.active_id = sel[0];\n        ctx.active_ids = sel;\n      }\n      return ctx;\n    }\n\n    restore(viewType) {\n      // restore the last search mode view type\n      let url = this._currentPath || this.location.$$path;\n      let params = this._currentParams[viewType] || {};\n      params['view_type'] = viewType;\n      if (Katrid.app.actionManager.length > 1) {\n        params['actionId'] = this.info.id;\n        this.$state.go('actionView', params);\n        // this.location.path(url);\n        // this.location.search(params);\n      } else {\n        this.viewType = viewType;\n      }\n      // window.location.href = '/web/#' + url + '?view_type=list';\n      // this.setViewType(viewType, this._currentParams[viewType]);\n    }\n\n    getCurrentTitle() {\n      if (this.viewType === 'form') {\n        return this.scope.record.display_name;\n      }\n      return super.getCurrentTitle();\n    }\n\n    switchView(viewType, params) {\n      if (viewType !== this.viewType) {\n        this.viewType = viewType;\n        this.execute();\n        let search = Katrid.app.$location.$$search;\n        Object.assign(search, params);\n        search.view_type = viewType;\n        Katrid.app.$location.search(search);\n      }\n    }\n\n    createNew() {\n      this.switchView('form', { id: null });\n    }\n\n    async deleteSelection() {\n      let sel = this.selection;\n      if (!sel)\n        return false;\n      if (\n        ((sel.length === 1) && confirm(Katrid.i18n.gettext('Confirm delete record?'))) ||\n        ((sel.length > 1) && confirm(Katrid.i18n.gettext('Confirm delete records?')))\n      ) {\n        await this.model.destroy(sel);\n        const i = this.scope.records.indexOf(this.scope.record);\n        this.viewType = 'list';\n        this.dataSource.refresh();\n      }\n    }\n\n    async copy() {\n      this.viewType = 'form';\n      await this.dataSource.copy(this.scope.record.id);\n      return false;\n    }\n\n    async copyTo(configId) {\n      if (this.scope.recordId) {\n        let svc = new Katrid.Services.Model('ir.copy.to');\n        let res = await svc.rpc('copy_to', [configId, this.scope.recordId]);\n        let model = new Katrid.Services.Model(res.model);\n        let views = await model.getViewInfo({ view_type: 'form' });\n        let wnd = new Katrid.ui.Dialogs.Window(this.scope, { view: views }, Katrid.Core.compile, null, model);\n        wnd.createNew({ defaultValues: res.value });\n      }\n    }\n\n    makeUrl(viewType) {\n      // get the default view mode\n      if (!viewType)\n        viewType = this.viewModes[0];\n\n      const search = {\n        action: this.info.id,\n        view_type: viewType,\n        menu_id: Katrid.app.$location.$$search.menu_id,\n      };\n      if ((viewType === 'form') && this.record)\n        search.id = this.record.id;\n      return search;\n    }\n\n    get record() {\n      // returns the active record\n      return this.scope.record;\n    }\n\n    get searchModes() {\n      // returns search view modes\n      return this.viewModes.filter(v => v !== 'form');\n    }\n\n    get breadcrumb() {\n      let breadcrumb = [];\n      if (this.searchModes.length) {\n        breadcrumb.push({ action: this, url: this.makeUrl(this.lastViewType), text: this.info.display_name });\n      }\n      if (this.viewType === 'form') {\n        let h = { action: this, url: this.makeUrl('form') };\n        if (this === Katrid.app.actionManager.currentAction)\n          h.text = '${ record.display_name }';\n        else\n          h.text = this.record && this.record.display_name;\n        breadcrumb.push(h);\n      }\n      return breadcrumb;\n    }\n\n    refreshBreadcrumb() {\n      Katrid.app.actionManager._breadcrumb = null;\n\n      let templ = Katrid.app.getTemplate('view.breadcrumb.jinja2', {\n        breadcrumb: Katrid.app.actionManager.breadcrumb,\n        action: this\n      });\n      templ = Katrid.Core.$compile(templ)(this.scope);\n      this.$element.find('.breadcrumb-nav').html(templ);\n    }\n\n    $detach() {\n      this.$element.detach();\n    }\n\n    $attach() {\n      this.$element.appendTo(this.$parent);\n    }\n\n    async execute() {\n      if (!this.views) {\n        let res = await this.model.loadViews({\n          views: this.info.views,\n          action: this.info.id,\n          toolbar: true\n        });\n        this.fields = res.fields;\n        this.fieldList = res.fieldList;\n        this.views = res.views;\n\n        // pre-render the action container\n        let templ = Katrid.app.getTemplate('ir.action.window.jinja2', { action: this });\n        templ = Katrid.Core.$compile(templ)(this.scope);\n        this.$parent.html(templ);\n        this.$element = templ;\n        this.$container = this.$element.find('.action-view-content:first');\n      }\n      this.refreshBreadcrumb();\n      this.scope.view = this.views[this.viewType];\n      let view = new Katrid.UI.Views[this.viewType](this, this.scope.view);\n\n      if (this.viewType !== 'form') {\n        this.lastViewType = this.viewType;\n        this.lastUrl = location.hash;\n      }\n\n      // render view to main container\n      view.renderTo(this.$container);\n      setTimeout(() => {\n        if ((this.viewType === 'form') && !Katrid.app.$location.$$search.id)\n          this.dataSource.insert();\n      })\n    }\n\n    get viewType() {\n      return this._viewType;\n    }\n\n    set viewType(value) {\n      if (value !== this._viewType) {\n        // invalidate the current record id\n        if (value !== 'form')\n          this.dataSource.recordId = null;\n        // destroy children fields\n        this.dataSource.destroyChildren();\n        this._viewType = value;\n        this.execute();\n      }\n\n      return;\n      if (!value)\n        value = this.viewModes[0];\n\n      if (value === this._viewType)\n        return;\n\n      if (!this._viewType)\n        this.searchViewType = this.viewModes[0];\n\n      this.view = this.views[value];\n      this._viewType = value;\n      this.switchView(value);\n\n      if (!this.scope.$$phase)\n        this.scope.$apply();\n\n      if (this.location.$$search.view_type !== value) {\n        this.location.search({ view_type: value });\n      }\n\n      $(Katrid).trigger('formReady', [this.scope]);\n    }\n\n    searchText(q) {\n      return this.location.search('q', q);\n    }\n\n    _prepareParams(params) {\n      const r = {};\n      for (let p of Array.from(params)) {\n        if (p.field && (p.field.type === 'ForeignKey')) {\n          r[p.field.name] = p.id;\n        } else {\n          r[p.id.name + '__icontains'] = p.text;\n        }\n      }\n      return r;\n    }\n\n    setSearchParams(params) {\n      let p = {};\n      if (this.info.domain)\n        p = $.parseJSON(this.info.domain);\n      for (let [k, v] of Object.entries(p)) {\n        let arg = {};\n        arg[k] = v;\n        params.push(arg);\n      }\n      return this.dataSource.search(params);\n    }\n\n    applyGroups(groups, params) {\n      return this.dataSource.groupBy(groups, params);\n    }\n\n    groupHeaderClick(record, index) {\n      console.log('group header click', record);\n      record.$expanded = !record.$expanded;\n      if (record.$expanded) {\n        this.dataSource.expandGroup(index, record);\n      } else {\n        this.dataSource.collapseGroup(index, record);\n      }\n    }\n\n    async loadGroupRecords(group) {\n      if (group.count > 0) {\n        let res = await this.dataSource.model.search({ params: group.$params });\n        group.records = res.data;\n        console.log(group);\n        this.scope.$apply();\n      }\n    }\n\n    doViewAction(viewAction, target, confirmation, prompt) {\n      return this._doViewAction(this.scope, viewAction, target, confirmation, prompt);\n    }\n\n    _doViewAction(scope, viewAction, target, confirmation, prompt) {\n      let promptValue = null;\n      if (prompt) {\n        promptValue = window.prompt(prompt);\n      }\n      if (!confirmation || (confirmation && confirm(confirmation))) {\n        return this.model.doViewAction({ action_name: viewAction, target, prompt: promptValue })\n        .then(function(res) {\n          let msg, result;\n          if (res.status === 'open') {\n            return window.open(res.open);\n          }\n        });\n      }\n    }\n\n    async formButtonClick(id, meth, self) {\n      const res = await this.scope.model.rpc(meth, [id]);\n      if (res.open)\n        return window.open(res.open);\n      if (res.download) {\n        let a = document.createElement('a');\n        a.href = res.download;\n        a.click();\n        return;\n      }\n      if (res.tag === 'refresh')\n        this.dataSource.refresh();\n      if (res.type) {\n        const act = new (Katrid.Actions[res.type])(res, this.scope, this.scope.location);\n        act.execute();\n      }\n    };\n\n    doBindingAction(evt) {\n      this.selection;\n      Katrid.Services.Actions.load($(evt.currentTarget).data('id'))\n      .then(action => {\n\n        if (action.action_type === 'ir.action.report')\n          Katrid.Actions.ReportAction.dispatchBindingAction(this, action);\n\n      });\n    }\n\n    listRowClick(index, row, evt) {\n      if (row.$hasChildren) {\n        console.log('list row click');\n        this.groupHeaderClick(row, index);\n      } else {\n        const search = {\n          id: row.id,\n          action: this.info.id,\n          view_type: 'form',\n          menu_id: Katrid.app.$location.$$search.menu_id,\n        };\n        if (evt.ctrlKey) {\n          const url = `#${hash}`;\n          window.open(url);\n          return;\n        } else\n          Katrid.app.$location.search(search);\n        this.dataSource.recordIndex = index;\n      }\n    }\n\n    onDataStateChange(event, dataSource) {\n      let self = dataSource.scope.action;\n      if (dataSource.changing)\n        setTimeout(() => {\n          if (self.$element)\n            for (let el of Array.from(self.$element.find(\"input[type!=hidden].form-field:visible\"))) {\n              el = $(el);\n              if (!el.attr('readonly')) {\n                $(el).focus();\n                return;\n              }\n            }\n        });\n    }\n\n    autoReport() {\n      return this.model.autoReport()\n      .then(function(res) {\n        if (res.ok && res.result.open) {\n          return window.open(res.result.open);\n        }\n      });\n    }\n\n    showDefaultValueDialog() {\n      const html = Katrid.UI.Utils.Templates.getSetDefaultValueDialog();\n      const modal = $(Katrid.core.compile(html)(this.scope)).modal();\n      modal.on('hidden.bs.modal', function() {\n        $(this).data('bs.modal', null);\n        return $(this).remove();\n      });\n    }\n\n    selectToggle(el) {\n      this._selection = $(el).closest('table').find('td.list-record-selector :checkbox').filter(':checked');\n      this.selectionLength = this._selection.length;\n    }\n\n    get selection() {\n      if (this.viewType === 'form') {\n        console.log(this.scope.recordId);\n        if (this.scope.recordId)\n          return this.scope.recordId;\n        else\n          return;\n      }\n      if (this._selection)\n        return Array.from(this._selection).map((el) => ($(el).data('id')));\n    }\n\n    deleteAttachment(attachments, index) {\n      let att = attachments[index];\n      if (confirm(Katrid.i18n.gettext('Confirm delete attachment?'))) {\n        attachments.splice(index, 1);\n        Katrid.Services.Attachments.destroy(att.id);\n      }\n    }\n  }\n  WindowAction.initClass();\n\n  Katrid.Actions.WindowAction = WindowAction;\n  Katrid.Actions[WindowAction.actionType] = WindowAction;\n\n})();\n","(() => {\n\n  class Loader {\n    constructor(templateCache) {\n      this.$cache = templateCache;\n    }\n\n    getSource(name) {\n      return {\n        src: this.$cache.get(name),\n        path: name,\n        noCache: false,\n      }\n    }\n  }\n\n  class Templates {\n    constructor(app, templates) {\n      this.app = app;\n      Templates.env = new nunjucks.Environment(new Loader(app.$templateCache), { autoescape: false });\n      let oldGet = app.$templateCache.get;\n      app.$templateCache.get = name => {\n        return this.prepare(name, oldGet.call(this, name));\n      };\n      this.loadTemplates(app.$templateCache, templates);\n      for (let [k, v] of Object.entries(PRE_LOADED_TEMPLATES))\n        app.$templateCache.put(k, v);\n    }\n\n    prepare(name, templ) {\n      if (_.isUndefined(templ)) throw Error('Template not found: ' + name);\n      if (templ.tagName === 'SCRIPT')\n        return templ.innerHTML;\n      return templ;\n    }\n\n    compileTemplate(base, templ) {\n      let el = $(base);\n      templ = $(templ.innerHTML);\n      for (let child of Array.from(templ))\n        if (child.tagName === 'JQUERY') {\n          child = $(child);\n          let sel = child.attr('selector');\n          let op = child.attr('operation');\n          if (sel) sel = $(el).find(sel);\n          else sel = el;\n          sel[op](child[0].innerHTML);\n        }\n      return el[0].innerHTML;\n    }\n\n    loadTemplates(templateCache, res) {\n      let templateLst = {};\n      let readTemplates = el => {\n        if (el.tagName === 'TEMPLATES') Array.from(el.children).map(readTemplates);\n        else if (el.tagName === 'SCRIPT') {\n          templateLst[el.id] = el.innerHTML;\n        }\n      };\n      let preProcess = el => {\n        if (el.tagName === 'TEMPLATES') Array.from(el.children).map(preProcess);\n        else if (el.tagName === 'SCRIPT') {\n          let base = el.getAttribute('extends');\n          let id = el.getAttribute('id') || base;\n          if (base) {\n            el = templateLst[base] + el;\n          } else\n            id = el.id;\n          templateCache.put(id, el);\n        }\n      };\n      let parser = new DOMParser();\n      let doc = parser.parseFromString(res, 'text/html');\n      let root = doc.firstChild.children[1].firstChild;\n      readTemplates(root);\n      preProcess(root);\n    }\n\n  }\n\n  let PRE_LOADED_TEMPLATES = {};\n\n  Katrid.UI.registerTemplate = function(name, tmpl) {\n    PRE_LOADED_TEMPLATES[name] = tmpl;\n  };\n\n  Katrid.UI.Templates = Templates;\n  Katrid.UI.Templates.PRE_LOADED_TEMPLATES = PRE_LOADED_TEMPLATES;\n\n})();\n","(function() {\n\n  class ReportAction extends Katrid.Actions.Action {\n    static initClass() {\n      this.actionType = 'ir.action.report';\n    }\n\n    static async dispatchBindingAction(parent, action) {\n      let format = localStorage.katridReportViewer || 'pdf';\n      let sel = parent.selection;\n      console.log('selection ', sel);\n      if (sel)\n        sel = sel.join(',');\n      let params = { data: [{ name: 'id', value: sel }] };\n      const svc = new Katrid.Services.Model('ir.action.report');\n      let res = await svc.post('export_report', { args: [action.id], kwargs: { format, params } });\n      if (res.open)\n        return window.open(res.open);\n    }\n\n    get name() {\n      return this.info.name;\n    }\n\n    constructor(info, scope, location) {\n      super(info, scope, location);\n      this.templateUrl = 'view.report.jinja2';\n      this.userReport = {};\n    }\n\n    userReportChanged(report) {\n      return this.location.search({\n        user_report: report});\n    }\n\n    async onHashChange(params) {\n      console.log('report hash change', params);\n      this.userReport.id = params.user_report;\n      if (this.userReport.id) {\n        const svc = new Katrid.Services.Model('ir.action.report');\n        let res = await svc.post('load_user_report', { kwargs: { user_report: this.userReport.id } });\n        this.userReport.params = res.result;\n      } else {\n        // Katrid.core.setContent(, this.scope);\n      }\n      location.hash = '#/app/?' + $.param(params);\n      let templ = Katrid.Reports.Reports.renderDialog(this);\n      templ = Katrid.Core.$compile(templ)(this.scope);\n      $('#katrid-action-view').empty().append(templ);\n    }\n\n  }\n  ReportAction.initClass();\n\n  Katrid.Actions.ReportAction = ReportAction;\n  Katrid.Actions[ReportAction.actionType] = ReportAction;\n\n})();\n","(function () {\n  let _counter = 0;\n\n\n  class Reports {\n    static initClass() {\n      this.currentReport = {};\n      this.currentUserReport = {};\n    }\n\n    static get(repName) {}\n\n    static renderDialog(action) {\n      console.log(action);\n      return Katrid.app.getTemplate('view.report.jinja2', { action: action });\n    }\n  }\n  Reports.initClass();\n\n\n  class Report {\n    constructor(action, scope) {\n      this.action = action;\n      this.scope = scope;\n      this.info = this.action.info;\n      Katrid.Reports.Reports.currentReport = this;\n      if ((Params.Labels == null)) {\n        Params.Labels = {\n          exact: Katrid.i18n.gettext('Is equal'),\n          in: Katrid.i18n.gettext('Selection'),\n          contains: Katrid.i18n.gettext('Contains'),\n          startswith: Katrid.i18n.gettext('Starting with'),\n          endswith: Katrid.i18n.gettext('Ending with'),\n          gt: Katrid.i18n.gettext('Greater-than'),\n          lt: Katrid.i18n.gettext('Less-than'),\n          between: Katrid.i18n.gettext('Between'),\n          isnull: Katrid.i18n.gettext('Is Null')\n        };\n      }\n\n      this.name = this.info.name;\n      this.id = ++_counter;\n      this.values = {};\n      this.params = [];\n      this.filters = [];\n      this.groupables = [];\n      this.sortables = [];\n      this.totals = [];\n    }\n\n    telegram() {\n      Katrid.Reports.Telegram.export(this);\n    }\n\n    getUserParams() {\n      const report = this;\n      const params = {\n        data: [],\n        file: report.container.find('#id-report-file').val()\n      };\n      for (let p of Array.from(this.params)) {\n        params.data.push({\n          name: p.name,\n          op: p.operation,\n          value1: p.value1,\n          value2: p.value2,\n          type: p.type\n        });\n      }\n\n      const fields = report.container.find('#report-id-fields').val();\n      params['fields'] = fields;\n\n      const totals = report.container.find('#report-id-totals').val();\n      params['totals'] = totals;\n\n      const sorting = report.container.find('#report-id-sorting').val();\n      params['sorting'] = sorting;\n\n      const grouping = report.container.find('#report-id-grouping').val();\n      params['grouping'] = grouping;\n\n      return params;\n    }\n\n    loadFromXml(xml) {\n      let dataTypeDict = {\n        date: 'DateField',\n        datetime: 'DateTimeField',\n      };\n\n      if (_.isString(xml)) {\n        xml = $(xml);\n      }\n      this.scope.customizableReport = xml.attr('customizableReport');\n      this.scope.advancedOptions = xml.attr('advancedOptions');\n      this.model = xml.attr('model');\n      const fields = [];\n\n      for (let f of Array.from(xml.find('param,field'))) {\n        let tag = f.tagName;\n        f = $(f);\n        const name = f.attr('name');\n        console.log(this.info);\n        let fld;\n        if (this.info.fields)\n          fld = this.info.fields[name];\n        const label = f.attr('label') || f.attr('caption') || (fld && fld.caption) || name;\n        const groupable = f.attr('groupable');\n        const sortable = f.attr('sortable');\n        const total = f.attr('total');\n        let param = f.attr('param');\n        if ((tag === 'FIELD') && (!param))\n          param = 'static';\n        const required = f.attr('required');\n        const autoCreate = f.attr('autoCreate') || required || (param === 'static');\n        const operation = f.attr('operation');\n        let type = f.attr('type') || f.data('type') || (fld && fld.type);\n        if (type in dataTypeDict)\n          type = dataTypeDict[type];\n\n        const modelChoices = f.attr('model-choices');\n        if (!type && modelChoices) type = 'ModelChoices';\n        fields.push({\n          name,\n          label,\n          groupable,\n          sortable,\n          total,\n          param,\n          required,\n          operation,\n          modelChoices,\n          type,\n          autoCreate,\n          field: f,\n        });\n      }\n\n      const params = (Array.from(xml.find('param')).map((p) => $(p).attr('name')));\n\n      return this.load(fields, params);\n    }\n\n    saveDialog() {\n      const params = this.getUserParams();\n      const name = window.prompt(Katrid.i18n.gettext('Report name'), Katrid.Reports.Reports.currentUserReport.name);\n      if (name) {\n        Katrid.Reports.Reports.currentUserReport.name = name;\n        $.ajax({\n          type: 'POST',\n          url: this.container.find('#report-form').attr('action') + '?save=' + name,\n          contentType: \"application/json; charset=utf-8\",\n          dataType: 'json',\n          data: JSON.stringify(params)\n        });\n      }\n      return false;\n    }\n\n    load(fields, params) {\n      if (!fields) {\n        ({ fields } = this.info);\n      }\n      if (!params) {\n        params = [];\n      }\n      this.fields = fields;\n      this.scope.fields = {};\n\n      // Create params\n      for (let p of fields) {\n        this.scope.fields[p.name] = p;\n        if (p.groupable)\n          this.groupables.push(p);\n        if (p.sortable)\n          this.sortables.push(p);\n        if (p.total)\n          this.totals.push(p);\n        if (!p.autoCreate) p.autoCreate = params.includes(p.name);\n      }\n    }\n\n    loadParams() {\n      for (let p of Array.from(this.fields)) {\n        if (p.autoCreate)\n          this.addParam(p.name);\n      }\n    }\n\n    addParam(paramName) {\n      for (let p of Array.from(this.fields))\n        if (p.name === paramName) {\n          p = new Param(p, this);\n          this.params.push(p);\n          //$(p.render(@elParams))\n          break;\n        }\n    }\n\n    getValues() {}\n\n\n    export(format) {\n      if (format == null)\n        format = localStorage.katridReportViewer || 'pdf';\n      const params = this.getUserParams();\n      console.log('send params', params);\n      const svc = new Katrid.Services.Model('ir.action.report');\n      svc.post('export_report', { args: [this.info.id], kwargs: { format, params } })\n      .then(function(res) {\n        if (res.open) {\n          return window.open(res.open);\n        }\n      });\n      return false;\n    }\n\n    preview() {\n      return this.export(localStorage.katridReportViewer);\n    }\n\n    renderFields() {\n      let p;\n      let el = $('<div></div>');\n      const flds = this.fields.map(p => `<option value=\"${p.name}\">${p.label}</option>`).join('');\n      const aggs = ((() => {\n        const result1 = [];\n        for (p of Array.from(this.fields)) {\n          if (p.total) {\n            result1.push(`<option value=\"${p.name}\">${p.label}</option>`);\n          }\n        }\n        return result1;\n      })()).join('');\n      el = this.container.find('#report-params');\n      let sel = el.find('#report-id-fields');\n      sel.append($(flds))\n      .select2({ tags: ((() => {\n        const result2 = [];\n        for (p of Array.from(this.fields)) result2.push({id: p.name, text: p.label});\n        return result2;\n      })()) });\n      if (Katrid.Reports.Reports.currentUserReport.params && Katrid.Reports.Reports.currentUserReport.params.fields) {\n        console.log(Katrid.Reports.Reports.currentUserReport.params.fields);\n        sel.select2('val', Katrid.Reports.Reports.currentUserReport.params.fields);\n      }\n      //sel.data().select2.updateSelection([{ id: 'vehicle', text: 'Vehicle'}])\n      sel = el.find('#report-id-totals');\n      sel.append(aggs)\n      .select2({ tags: ((() => {\n        const result3 = [];\n        for (p of Array.from(this.fields)) {\n          if (p.total) {\n            result3.push({ id: p.name, text: p.label });\n          }\n        }\n        return result3;\n      })()) });\n      return el;\n    }\n\n    renderParams(container) {\n      let p;\n      const el = $('<div></div>');\n      this.elParams = el;\n      const loaded = {};\n\n      const userParams = Katrid.Reports.Reports.currentUserReport.params;\n      if (userParams && userParams.data) {\n        for (p of Array.from(userParams.data)) {\n          loaded[p.name] = true;\n          this.addParam(p.name, p.value);\n        }\n      }\n\n      for (p of Array.from(this.params)) {\n        if (p.static && !loaded[p.name]) {\n          $(p.render(el));\n        }\n      }\n      return container.find('#params-params').append(el);\n    }\n\n    renderGrouping(container) {\n      const opts = (Array.from(this.groupables).map((p) => `<option value=\"${p.name}\">${p.label}</option>`)).join('');\n      const el = container.find(\"#params-grouping\");\n      const sel = el.find('select').select2();\n      return sel.append(opts)\n      .select2(\"container\").find(\"ul.select2-choices\").sortable({\n          containment: 'parent',\n          start() { return sel.select2(\"onSortStart\"); },\n          update() { return sel.select2(\"onSortEnd\"); }\n      });\n    }\n\n    renderSorting(container) {\n      const opts = (Array.from(this.sortables).filter((p) => p.sortable).map((p) => `<option value=\"${p.name}\">${p.label}</option>`)).join('');\n      const el = container.find(\"#params-sorting\");\n      const sel = el.find('select').select2();\n      return sel.append(opts)\n      .select2(\"container\").find(\"ul.select2-choices\").sortable({\n          containment: 'parent',\n          start() { return sel.select2(\"onSortStart\"); },\n          update() { return sel.select2(\"onSortEnd\"); }\n      });\n    }\n\n    render(container) {\n      this.container = container;\n      let el = this.renderFields();\n      if (this.sortables.length) {\n        el = this.renderSorting(container);\n      } else {\n        container.find(\"#params-sorting\").hide();\n      }\n\n      if (this.groupables.length) {\n        el = this.renderGrouping(container);\n      } else {\n        container.find(\"#params-grouping\").hide();\n      }\n\n      return el = this.renderParams(container);\n    }\n  }\n\n\n  class Params {\n    static initClass() {\n      this.Operations = {\n        exact: 'exact',\n        in: 'in',\n        contains: 'contains',\n        startswith: 'startswith',\n        endswith: 'endswith',\n        gt: 'gt',\n        lt: 'lt',\n        between: 'between',\n        isnull: 'isnull'\n      };\n\n      this.DefaultOperations = {\n        CharField: this.Operations.exact,\n        IntegerField: this.Operations.exact,\n        DateTimeField: this.Operations.between,\n        DateField: this.Operations.between,\n        FloatField: this.Operations.between,\n        DecimalField: this.Operations.between,\n        ForeignKey: this.Operations.exact,\n        ModelChoices: this.Operations.exact,\n        SelectionField: this.Operations.exact,\n      };\n\n      this.TypeOperations = {\n        CharField: [this.Operations.exact, this.Operations.in, this.Operations.contains, this.Operations.startswith, this.Operations.endswith, this.Operations.isnull],\n        IntegerField: [this.Operations.exact, this.Operations.in, this.Operations.gt, this.Operations.lt, this.Operations.between, this.Operations.isnull],\n        FloatField: [this.Operations.exact, this.Operations.in, this.Operations.gt, this.Operations.lt, this.Operations.between, this.Operations.isnull],\n        DecimalField: [this.Operations.exact, this.Operations.in, this.Operations.gt, this.Operations.lt, this.Operations.between, this.Operations.isnull],\n        DateTimeField: [this.Operations.exact, this.Operations.in, this.Operations.gt, this.Operations.lt, this.Operations.between, this.Operations.isnull],\n        DateField: [this.Operations.exact, this.Operations.in, this.Operations.gt, this.Operations.lt, this.Operations.between, this.Operations.isnull],\n        ForeignKey: [this.Operations.exact, this.Operations.in, this.Operations.isnull],\n        ModelChoices: [this.Operations.exact, this.Operations.in, this.Operations.isnull],\n        SelectionField: [this.Operations.exact, this.Operations.isnull],\n      };\n\n      this.Widgets = {\n        CharField(param) {\n          return `<div><input id=\"rep-param-id-${param.id}\" ng-model=\"param.value1\" type=\"text\" class=\"form-control\"></div>`;\n        },\n\n        IntegerField(param) {\n          let secondField = '';\n          if (param.operation === 'between') {\n            secondField = `<div class=\"col-sm-6\"><input id=\"rep-param-id-${param.id}-2\" ng-model=\"param.value2\" type=\"number\" class=\"form-control\"></div>`;\n          }\n          return `<div class=\"row\"><div class=\"col-sm-6\"><input id=\"rep-param-id-${param.id}\" type=\"number\" ng-model=\"param.value1\" class=\"form-control\"></div>${secondField}</div>`;\n        },\n\n        DecimalField(param) {\n          let secondField = '';\n          if (param.operation === 'between') {\n            secondField = `<div class=\"col-xs-6\"><input id=\"rep-param-id-${param.id}-2\" ng-model=\"param.value2\" input-decimal class=\"form-control\"></div>`;\n          }\n          return `<div class=\"col-sm-12 row\"><div class=\"col-xs-6\"><input id=\"rep-param-id-${param.id}\" input-decimal ng-model=\"param.value1\" class=\"form-control\"></div>${secondField}</div>`;\n        },\n\n        DateTimeField(param) {\n          let secondField = '';\n          if (param.operation === 'between') {\n            secondField = `<div class=\"col-xs-6\"><input id=\"rep-param-id-${param.id}-2\" type=\"text\" date-picker=\"L\" ng-model=\"param.value2\" class=\"form-control\"></div>`;\n          }\n          return `<div class=\"col-sm-12 row\"><div class=\"col-xs-6\"><input id=\"rep-param-id-${param.id}\" type=\"text\" date-picker=\"L\" ng-model=\"param.value1\" class=\"form-control\"></div>${secondField}</div>`;\n        },\n\n        DateField(param) {\n          let secondField = '';\n          if (param.operation === 'between') {\n            secondField = `<div class=\"col-xs-6\"><input id=\"rep-param-id-${param.id}-2\" type=\"text\" date-picker=\"L\" ng-model=\"param.value2\" class=\"form-control\"></div>`;\n          }\n          return `<div class=\"col-sm-12 row\"><div class=\"col-xs-6\"><input id=\"rep-param-id-${param.id}\" type=\"text\" date-picker=\"L\" ng-model=\"param.value1\" class=\"form-control\"></div>${secondField}</div>`;\n        },\n\n        ForeignKey(param) {\n          const serviceName = param.info.field.attr('model') || param.params.model;\n          let multiple = '';\n          if (param.operation === 'in') {\n            multiple = 'multiple';\n          }\n          return `<div><input id=\"rep-param-id-${param.id}\" ajax-choices=\"${serviceName}\" field=\"${param.name}\" ng-model=\"param.value1\" ${multiple}></div>`;\n        },\n\n        ModelChoices(param) {\n          let multiple = '';\n          if (param.operation === 'in') {\n            multiple = 'multiple';\n          }\n          return `<div><input id=\"rep-param-id-${param.id}\" ajax-choices=\"ir.action.report\" model-choices=\"${param.info.modelChoices}\" ng-model=\"param.value1\" ${multiple}></div>`;\n        },\n\n        SelectionField(param) {\n          param.info.choices = param.info.field.data('choices');\n          let defaultValue = param.info.field.attr('default');\n          if (defaultValue)\n            defaultValue = ` ng-init=\"param.value1='${defaultValue}'\"`;\n          if (!param.info.choices) {\n            param.info.choices = {};\n            for (let child of param.info.field.find('option')) {\n              child = $(child);\n              param.info.choices[child.attr('value')] = child.text();\n\n            }\n          }\n          return `<div${defaultValue}><select class=\"form-control\" ng-model=\"param.value1\"><option value=\"\\${ key }\" ng-repeat=\"(key, value) in fields.${param.name}.choices\">\\${ value }</option></select></div>`\n        }\n      };\n    }\n  }\n  Params.initClass();\n\n\n  class Param {\n    constructor(info, params) {\n      this.info = info;\n      this.params = params;\n      this.name = this.info.name;\n      this.field = this.params.info.fields && this.params.info.fields[this.name];\n      this.label = this.info.label || this.params.info.caption;\n      this.static = this.info.param === 'static';\n      this.type = this.info.type || (this.field && this.field.type) || 'CharField';\n      this.defaultOperation = this.info.operation || Params.DefaultOperations[this.type];\n      this.operation = this.defaultOperation;\n      // @operations = @info.operations or Params.TypeOperations[@type]\n      this.operations = this.getOperations();\n      this.exclude = this.info.exclude;\n      this.id = ++_counter;\n    }\n\n    defaultValue() {\n      return null;\n    }\n\n    setOperation(op, focus) {\n      if (focus == null) { focus = true; }\n      this.createControls(this.scope);\n      const el = this.el.find(`#rep-param-id-${this.id}`);\n      if (focus) {\n        el.focus();\n      }\n    }\n\n    createControls(scope) {\n      const el = this.el.find(\".param-widget\");\n      el.empty();\n      let widget = Params.Widgets[this.type](this);\n      widget = Katrid.Core.$compile(widget)(scope);\n      return el.append(widget);\n    }\n\n    getOperations() { return (Array.from(Params.TypeOperations[this.type]).map((op) => ({ id: op, text: Params.Labels[op] }))); }\n\n    operationTemplate() {\n      const opts = this.getOperations();\n      return `<div class=\"col-sm-4\"><select id=\"param-op-${this.id}\" ng-model=\"param.operation\" ng-init=\"param.operation='${this.defaultOperation}'\" class=\"form-control\" onchange=\"$('#param-${this.id}').data('param').change();$('#rep-param-id-${this.id}')[0].focus()\">\n  ${opts}\n  </select></div>`;\n    }\n\n    template() {\n      let operation = '';\n      if (!this.operation) operation = this.operationTemplate();\n      return `<div id=\"param-${this.id}\" class=\"row form-group\" data-param=\"${this.name}\" ng-controller=\"ParamController\"><label class=\"control-label\">${this.label}</label>${operation}<div id=\"param-widget-${this.id}\"></div></div>`;\n    }\n\n    render(container) {\n      this.el = this.params.scope.compile(this.template())(this.params.scope);\n      this.el.data('param', this);\n      console.log('render param');\n      this.createControls(this.el.scope());\n      return container.append(this.el);\n    }\n  }\n\n\n  Katrid.UI.uiKatrid.controller('ReportController', ['$scope', '$element', '$compile', function($scope, $element, $compile) {\n    const xmlReport = $scope.$parent.action.info.content;\n    const report = new Report($scope.$parent.action, $scope);\n    $scope.report = report;\n    report.loadFromXml(xmlReport);\n    report.render($element);\n    return report.loadParams();\n  }]);\n\n\n  Katrid.UI.uiKatrid.controller('ReportParamController', ['$scope', '$element', function($scope, $element) {\n    $scope.$parent.param.el = $element;\n    $scope.$parent.param.scope = $scope;\n    return $scope.$parent.param.setOperation($scope.$parent.param.operation, false);\n  }]);\n\n\n\n  class ReportEngine {\n    static load(el) {\n      $('row').each((idx, el) => {\n        el.addClass('row');\n      });\n      $('column').each((idx, el) => {\n        el.addClass('col');\n      })\n    }\n  }\n\n\n  Katrid.Reports = {\n    Reports,\n    Report,\n    Param\n  };\n})();\n","(() => {\n\n  class Widget {\n  }\n\n  class Component {\n  }\n\n  Katrid.UI.Widgets = {\n    Widget,\n    Component\n  };\n})();\n","(() => {\n\n  let compileButtons = (container) => {\n    let sendFileCounter = 0;\n    console.log(container);\n    return container.find('button').each((idx, btn) => {\n      btn = $(btn);\n      let type = btn.attr('type');\n\n      if (!btn.attr('type') || (btn.attr('type') === 'object'))\n        btn.attr('type', 'button');\n      if (type === 'object') {\n        let sendFile = btn.attr('send-file');\n        btn.attr('button-object', btn.attr('name'));\n        if (_.isUndefined(sendFile)) {\n          btn.attr('ng-click', `action.formButtonClick(action.selection, '${ btn.attr('name') }', $event.target);$event.stopPropagation();`);\n        } else {\n          let idSendFile = `__send_file_${++sendFileCounter}`;\n          container.append(`<input id=\"${idSendFile}\" type=\"file\" style=\"display: none\" onchange=\"Katrid.Services.Upload.sendFile('${btn.attr('name')}', this)\"/>`);\n          btn.attr('send-file', btn.attr('name'));\n          btn.attr('onclick', `$('#${idSendFile}').trigger('click')`);\n        }\n      } else if (type === 'tag') {\n        btn.attr('button-tag', btn.attr('name'));\n        btn.attr('onclick', `Katrid.Actions.ClientAction.tagButtonClick($(this))`);\n      }\n      if (!btn.attr('class'))\n        btn.addClass('btn btn-outline-secondary');\n    });\n  };\n\n  class ToolbarComponent extends Katrid.UI.Widgets.Component {\n    constructor() {\n      super();\n      this.scope = false;\n      this.restrict = 'E';\n      this.replace = true;\n      this.transclude = true;\n      this.templateUrl = 'view.header.jinja2';\n    }\n  }\n  Katrid.UI.uiKatrid.directive('toolbar', ToolbarComponent);\n\n\n  class ClientView {\n    constructor(action) {\n      this.action = action;\n    }\n\n    get template() {\n      return Katrid.app.getTemplate(this.templateUrl);\n    }\n\n    render() {\n      return $(this.template);\n    }\n  }\n\n\n  class BaseView {\n    constructor(scope) {\n      this.scope = scope;\n    }\n\n    render() {\n      return Katrid.app.getTemplate(this.templateUrl);\n    }\n  }\n\n  class ActionView extends BaseView{\n    constructor(action, scope, view, content) {\n      super(scope);\n      this.action = action;\n      this.view = view;\n      this.templateUrl = 'view.basic';\n      this.toolbar = true;\n      this.content = content;\n    }\n\n    getTemplateContext() {\n      return { content: this.content };\n    }\n\n    render() {\n      return sprintf(Katrid.app.getTemplate(this.templateUrl), this.getTemplateContext());\n    }\n\n    renderTo(el) {\n      Katrid.core.setContent(this.render(), this.scope);\n    }\n  }\n\n  class View extends ActionView {\n    getBreadcrumb() {\n      let html = `<ol class=\"breadcrumb\">`;\n      let i = 0;\n      for (let h of Katrid.app.actionManager) {\n        if (i === 0 && h.viewModes.length > 1)\n          html += `<li class=\"breadcrumb-item\"><a href=\"#\" ng-click=\"action.backTo(0, 0)\">${ h.info.display_name }</a></li>`;\n        i++;\n        if (Katrid.Actions.actionManager.length > i && h.viewType === 'form')\n          html += `<li class=\"breadcrumb-item\"><a href=\"#\" ng-click=\"action.backTo(${i-1}, 'form')\">${ h.scope.record.display_name }</a></li>`;\n      }\n      if (this.constructor.type === 'form')\n        html += `<li class=\"breadcrumb-item\">{{ self.display_name }}</li>`;\n      return html + '</ol>';\n    }\n\n    render() {\n      return sprintf(Katrid.app.$templateCache.get(this.templateUrl), { content: this.content });\n    }\n\n    getViewButtons() {\n      let btns = Object.entries(View.buttons).map((btn) => this.view.viewModes.includes(btn[0]) ? btn[1] : '').join('');\n      if (btns) btns = `<div class=\"btn-group\">${btns}</div>`;\n      return btns;\n    }\n\n  }\n\n\n  class View2 {\n    constructor(action, viewInfo) {\n      this.viewType = null;\n      this.action = action;\n      this.viewInfo = viewInfo;\n      this.templateUrl = null;\n    }\n\n    renderTo(container) {\n      container.html(this.render(container));\n    }\n\n    get fields() {\n      return this.viewInfo.fields;\n    }\n\n    renderField(fieldEl) {\n      let name = fieldEl.attr('name');\n      if (name) {\n        let fld = this.fields[name];\n        if (fld) {\n          let html = fld.render(this.viewType, fieldEl, { view: this }).toString();\n          if (fld.visible)\n            return html;\n          return '';\n        } else\n          console.error(`Field \"${name}\" not found`);\n      }\n    }\n\n  }\n\n  class FormView extends View2 {\n    constructor(action, viewInfo, opts) {\n      super(action, viewInfo);\n      this.dialog = false;\n      this.viewType = 'form';\n      this.templateUrl = 'view.form.jinja2';\n      this.context = {};\n      if (opts) {\n        this.dialog = opts.dialog;\n        if (opts.templateUrl)\n          this.templateUrl = opts.templateUrl;\n        if (opts.context)\n          Object.assign(this.context, opts.context);\n      }\n    }\n\n    render(container) {\n      let form = $(this.viewInfo.content);\n      form.attr('smart-form', 'smart-form');\n\n      form.addClass('row');\n\n      compileButtons(form);\n      let headerEl = form.find('header:first');\n      let header = '';\n      if (headerEl.length) {\n        headerEl.find('field[name=status]:first').attr('status-field', 'status-field');\n        header = headerEl.html();\n        headerEl.remove();\n      }\n\n      for (let child of form.find('field')) {\n        child = $(child);\n        if (child.attr('invisible') !== undefined)\n          continue;\n        if (!child.parents('field').length) {\n          child.attr('form-field', 'form-field');\n          child.replaceWith(this.renderField(child));\n        }\n      }\n\n      let context = {};\n      Object.assign(context, this.context);\n      Object.assign(context, {\n        header, content: form[0].outerHTML,\n      });\n      if (!this.dialog)\n        context['breadcrumb'] = this.breadcrumb;\n      let templ = Katrid.app.getTemplate(this.templateUrl, context);\n      templ = $(templ);\n\n      templ = Katrid.Core.$compile(templ)(this.action.scope);\n      templ.addClass('ng-form');\n      if (this.action) {\n        // get the form element\n        this.action.$form = templ.find('form').first();\n        // get the form controller\n        this.action.form = angular.element(this.action.$form).controller('form');\n      }\n      return templ;\n    }\n  }\n\n  class List extends View2 {\n    constructor(...args) {\n      super(...args);\n      this.viewType = 'list';\n      this.templateUrl = 'view.list.jinja2';\n      this.action.view = this;\n    }\n\n    render(container) {\n      let list = $(this.viewInfo.content);\n      let context = {};\n      Object.assign(context, this.context);\n      compileButtons(list);\n      let headerEl = list.find('header:first');\n      let header = '';\n      if (headerEl.length) {\n        header = headerEl.html();\n        headerEl.remove();\n      }\n\n      let templ = Katrid.app.getTemplate(this.templateUrl, { header, content: list[0].outerHTML });\n      // compile the template with the action scope\n      templ = $(templ);\n      templ.find('list')\n      .attr('ng-row-click', 'action.listRowClick($index, record, $event)')\n      .attr('list-options', '{\"rowSelector\": true}').attr('ng-row-click', 'action.listRowClick($index, record, $event)');\n\n      templ = Katrid.Core.$compile(templ)(this.action.scope);\n      setTimeout(() => this.action.dataSource.open());\n      return templ;\n    }\n  }\n\n\n  class Card extends View2 {\n    constructor(...args) {\n      super(...args);\n      this.viewType = 'card';\n      this.templateUrl = 'view.card.jinja2';\n      this.action.view = this;\n    }\n\n    render(container) {\n      let content = $(this.viewInfo.content);\n      content.children('field').remove();\n      content.find('field').each((idx, el) => {\n        el = $(el);\n        let f = this.fields[el.attr('name')];\n        if (f)\n          el.replaceWith(f.render('card', el, { view: this }));\n        else\n          el.replaceWith(`\\$\\{ ::record.${ $(el).attr('name') } }`);\n      });\n\n      let templ = Katrid.app.getTemplate(this.templateUrl, { content: content[0].outerHTML });\n      // compile the template with the action scope\n      templ = $(templ);\n      templ = Katrid.Core.$compile(templ)(this.action.scope);\n      setTimeout(() => this.action.dataSource.open());\n      return templ;\n    }\n  }\n\n\n\n\n  Katrid.UI.uiKatrid\n\n  .directive('listView2', () => ({\n    scope: false,\n    link($scope, $el) {\n      if (!$el.find('header').find('button').length)\n        $el.find('header').remove();\n    },\n    template($el) {\n      console.log('compile template');\n      compileButtons($el);\n      let headerEl = $el.find('header').first();\n      let header = '';\n      if (headerEl.find('button').length)\n        if (headerEl.length) {\n          header = headerEl.html();\n          headerEl.remove();\n        }\n      $el.find('list').attr('list-options', '{\"rowSelector\": true}').attr('ng-row-click', 'action.listRowClick($index, record, $event)');\n      return sprintf(\n        Katrid.app.getTemplate('view.list')\n        .replace('<!-- replace-header -->', header),\n        { content: $el.html() }\n      );\n    },\n  }))\n\n  .directive('card2', () => ({\n    replace: true,\n    template($el) {\n      $el.children('field').remove();\n      $el.find('field').each((idx, el) => $(el).replaceWith(`{{ ::record.${ $(el).attr('name') } }}`));\n      return sprintf(Katrid.app.getTemplate('view.card'), { content: $el.html() });\n    }\n  }))\n  .directive('smartForm', () => ({\n    restrict: 'A',\n    link(scope, el, attrs) {\n      if ('edit' in attrs) {\n        attrs.$observe('edit', (v) => {\n          if (v === 'false')\n            $('.action-view:first').find('.toolbutton-action-edit').hide();\n          else\n            $('.action-view:first').find('.toolbutton-action-edit').show();\n        })\n      }\n    }\n  }));\n\n\n  Katrid.UI.Views = {\n    View,\n    BaseView,\n    ActionView,\n    FormView,\n    ClientView,\n    List,\n    searchModes: ['list', 'card']\n  };\n\n  Katrid.UI.Views['list'] = List;\n  Katrid.UI.Views['form'] = FormView;\n  Katrid.UI.Views['card'] = Card;\n\n})();\n\n","(function () {\n\n  class ViewInfo {\n    constructor(info) {\n      this._info = info;\n      this.fields = info.fields;\n      this.content = info.content;\n      this.toolbar = info.toolbar;\n    }\n  }\n\n  Katrid.UI.ViewInfo = ViewInfo;\n})();\n","(function () {\n\n  class Grid {\n    constructor($compile) {\n      this.restrict = 'E';\n      this.scope = {};\n      this.$compile = $compile;\n    }\n\n    async loadViews(scope, element, views, attrs) {\n\n      let res = await scope.model.loadViews();\n      // detects the relational field\n      let fld = res.views.list.fields[scope.field.field];\n      scope.dataSource.field = scope.field;\n      // hides the relational field\n      if (fld)\n        fld.visible = false;\n\n      let newViews = res.views;\n\n      for (let [k, v] of Object.entries(views))\n        newViews[k].content = v;\n\n      scope.views = newViews;\n      scope.view = newViews.list;\n      let content = $(scope.view.content);\n      if (scope.inline)\n        content.attr('ng-row-click', 'editItem($event, $index)').attr('inline-editor', scope.inline);\n      else\n        content.attr('ng-row-click', 'openItem($event, $index)');\n      content.attr('records', 'records');\n\n      content.attr('list-options', '{\"deleteRow\": true}');\n\n      // render the list component\n      let el = (this.$compile(content)(scope));\n      element.html(el);\n      element.prepend(this.$compile(Katrid.app.getTemplate('view.form.grid.toolbar.jinja2', {attrs}))(scope));\n      element.find('table').addClass('table-bordered grid');\n    }\n\n    async showDialog(scope, attrs, index) {\n\n      if (scope.views.form)\n        await this.renderDialog(scope, attrs);\n\n      if (index != null) {\n        // Show item dialog\n        scope.recordIndex = index;\n        let record = scope.records[index];\n\n        // load the target record from server\n        if (record && record.$loaded)\n          scope.record = record;\n        else if (record) {\n          let res = await scope.dataSource.get(scope.records[index].id, 0, false, index);\n          res.$loaded = true;\n\n          // load nested data\n          // let currentRecord = scope.record;\n          // if (res.id)\n          //   for (let child of dataSource.children) {\n          //     child.scope.masterChanged(res.id)\n          //     .then(res => {\n          //       _cacheChildren(child.fieldName, currentRecord, res.data);\n          //     })\n          //\n          //   }\n\n        }\n\n      }\n\n    };\n\n    async link(scope, element, attrs) {\n      if (attrs.ngDefaultValues)\n        scope.ngDefaultValues = attrs.ngDefaultValues;\n      let me = this;\n      // Load remote field model info\n\n      const field = scope.$parent.view.fields[attrs.name];\n\n      scope.totalDisplayed = 1000;\n      scope.fieldName = attrs.name;\n      scope.field = field;\n      scope.records = [];\n      scope.recordIndex = -1;\n      scope._cachedViews = {};\n      scope._ = scope.$parent._;\n      scope._changeCount = 0;\n      scope.dataSet = [];\n      scope.model = new Katrid.Services.Model(field.model);\n      scope.isList = true;\n\n      if (attrs.inlineEditor === 'tabular')\n        scope.inline = 'tabular';\n      else if (attrs.hasOwnProperty('inlineEditor'))\n        scope.inline = 'inline';\n\n      scope.getContext = function () {\n        return {}\n      };\n\n      scope.$setDirty = function () {\n        return {}\n      };\n\n      // Set parent/master data source\n      let dataSource = scope.dataSource = new Katrid.Data.DataSource(scope);\n      dataSource.readonly = !_.isUndefined(attrs.readonly);\n      let p = scope.$parent;\n      while (p) {\n        if (p.action && p.action.dataSource) {\n          scope.dataSource.masterSource = p.action.dataSource;\n          break;\n        } else if (p.dataSource) {\n          scope.dataSource.masterSource = p.dataSource;\n          break;\n        }\n        p = p.$parent;\n      }\n\n      scope.parent = dataSource.masterSource.scope;\n      scope.action = dataSource.masterSource.action;\n      dataSource.action = scope.action;\n\n      scope.dataSource.fieldName = scope.fieldName;\n      scope.gridDialog = null;\n      let gridEl = null;\n\n      // check if the grid has custom views grid:view\n      let views = {};\n      for (let child of element.children()) {\n        if (child.tagName.startsWith('GRID:')) {\n          let viewType = child.tagName.split(':')[1].toLowerCase();\n          child = $(child);\n          views[viewType] = `<${viewType}>${child.html()}</${viewType}>`;\n        }\n      }\n\n      await me.loadViews(scope, element, views, attrs);\n\n      scope.doViewAction = (viewAction, target, confirmation) => scope.action._doViewAction(scope, viewAction, target, confirmation);\n\n      let _cacheChildren = (fieldName, record, records) => {\n        record[fieldName] = records;\n      };\n\n      scope._incChanges = () => {\n        if (!scope.$parent.$fieldLog[scope.field.name])\n          scope.$parent.$fieldLog[scope.field.name] = {};\n        scope.$parent.$fieldLog[scope.field.name].count++;\n      };\n\n      scope.addItem = async () => {\n        await scope.dataSource.insert();\n        if (attrs.$attr.inlineEditor) {\n          scope.records.splice(0, 0, scope.record);\n          scope.dataSource.edit();\n          if (!scope.$parent.record[scope.fieldName])\n            scope.$parent.record[scope.fieldName] = [];\n          scope.$parent.record[scope.fieldName].push(scope.record);\n          scope.$apply();\n        } else\n          return this.showDialog(scope, attrs);\n      };\n\n      scope.addRecord = function (rec) {\n        let record = Katrid.Data.createRecord({$loaded: true}, scope.dataSource);\n        for (let [k, v] of Object.entries(rec))\n          record[k] = v;\n        scope.records.push(record);\n        if (!scope.dataSource.parent.record[scope.fieldName])\n          scope.dataSource.parent.record[scope.fieldName] = [];\n        scope.dataSource.parent.record[scope.fieldName].push(record);\n        console.log('add record', record);\n      };\n\n      scope.cancelChanges = () => scope.dataSource.setState(Katrid.Data.DataSourceState.browsing);\n\n      scope.openItem = async (evt, index) => {\n        await this.showDialog(scope, attrs, index);\n        if (scope.dataSource.masterSource.changing && !scope.dataSource.readonly) {\n          scope.dataSource.edit();\n        }\n        scope.$apply();\n      };\n\n      scope.editItem = (evt, index) => {\n        if (scope.dataSource.changing)\n          scope.save();\n        if (scope.$parent.dataSource.changing) {\n          scope.dataSource.recordIndex = index;\n          scope.dataSource.edit();\n\n          // delay focus field\n          setTimeout(() => {\n            let el = $(evt.target).closest('td').find('input.form-control').focus();\n            setTimeout(() => el.select());\n          }, 100);\n\n        }\n      };\n\n      scope.removeItem = function (idx) {\n        const rec = scope.records[idx];\n        scope.records.splice(idx, 1);\n        scope._incChanges();\n        rec.$record.$delete();\n        //scope.$parent.record.$modifiedData[scope.fieldName].$deleted.append(rec);\n        // return scope.dataSource.applyModifiedData(null, null, rec);\n      };\n\n      scope.$set = (field, value) => {\n        const control = scope.form[field];\n        control.$setViewValue(value);\n        control.$render();\n      };\n\n      scope.save = function () {\n        // const data = scope.dataSource.applyModifiedData(scope.form, scope.gridDialog, scope.record);\n        scope._incChanges();\n        if (scope.inline)\n          return;\n        // return scope.$parent.record[scope.fieldName] = scope.records;\n        if (scope.recordIndex > -1) {\n          let rec = scope.record;\n          scope.record = null;\n          scope.records.splice(scope.recordIndex, 1);\n          setTimeout(() => {\n            scope.records.splice(scope.recordIndex, 0, rec);\n            scope.$apply();\n          });\n        } else if (scope.recordIndex === -1) {\n          scope.records.push(scope.record);\n          // scope.$parent.record[scope.fieldName] = scope.records;\n        }\n        if (!scope.inline) {\n          scope.gridDialog.modal('toggle');\n        }\n      };\n\n\n      let _loadChildFromCache = (child) => {\n        if (scope.record.hasOwnProperty(child.fieldName)) {\n          child.scope.records = scope.record[child.fieldName];\n        }\n      };\n\n      function trim(str) {\n        str = str.replace(/^\\s+/, '');\n        for (let i = str.length - 1; i >= 0; i--) {\n          if (/\\S/.test(str.charAt(i))) {\n            str = str.substring(0, i + 1);\n            break;\n          }\n        }\n        return str;\n      }\n\n      scope.pasteData = async function () {\n        let cache = {};\n\n        let _queryForeignKeyField = async function (field, val) {\n          return new Promise(async (resolve, reject) => {\n\n            if (!cache[field.name])\n              cache[field.name] = {};\n            if (cache[field.name][val] === undefined) {\n              let res = await scope.model.getFieldChoices(field.name, val, {exact: true});\n              if (res.items && res.items.length)\n                cache[field.name][val] = res.items[0];\n              else\n                cache[field.name][val] = null;\n            }\n            resolve(cache[field.name][val]);\n\n          });\n        };\n\n        let fields = [];\n        for (let f of $(scope.view.content).find('field')) {\n          let field = scope.view.fields[$(f).attr('name')];\n          if (field && (_.isUndefined(field.visible) || field.visible))\n            fields.push(field);\n        }\n        let txt = await navigator.clipboard.readText();\n\n        // read lines\n        let rowNo = 0;\n        for (let row of txt.split(/\\r?\\n/)) {\n          rowNo++;\n          if (row) {\n            let i = 0;\n            let newObj = {};\n            for (let col of row.split(/\\t/)) {\n              let field = fields[i];\n              if (field instanceof Katrid.Data.Fields.ForeignKey)\n                newObj[field.name] = await _queryForeignKeyField(field, trim(col));\n              else\n                newObj[field.name] = trim(col);\n              i++;\n            }\n            scope.addRecord(newObj);\n          }\n        }\n        scope.$apply();\n      };\n\n      let masterChanged = function (evt, master, key) {\n\n        // Ajax load nested data\n        if (master === scope.dataSource.masterSource) {\n          scope.dataSet = [];\n          scope._changeCount = 0;\n          scope.records = [];\n          if (key != null) {\n            const data = {};\n            data[field.field] = key;\n            if (key) {\n              // TODO remove in future\n              scope.dataSource.pageLimit = 1000;\n              return scope.dataSource.search(data)\n              .then((data) => {\n                // setup the log information, it will be useful to watch field value changes\n                scope.$parent.$fieldLog[field.name] = {count: 0, value: data.data};\n                scope.$parent.record[field.name] = data.data;\n                scope.$apply();\n              })\n              .finally(() => scope.dataSource.state = Katrid.Data.DataSourceState.browsing);\n            }\n          } else {\n            scope.$parent.record[field.name] = [];\n          }\n        }\n\n      };\n\n      if (scope.dataSource.pendingMasterId)\n        masterChanged(null, scope.dataSource.parent, scope.dataSource.pendingMasterId);\n\n      let unhook = [\n        scope.$on('masterChanged', masterChanged),\n        scope.$on('afterCancel', function (evt, master) {\n          if (master === scope.dataSource.masterSource)\n            scope.dataSource.cancel();\n        })\n      ];\n\n\n      scope.$on('$destroy', function () {\n        unhook.map(fn => fn());\n      });\n\n\n    }\n\n    async renderDialog(scope, attrs) {\n      let el;\n      let html = scope.views.form.content;\n\n      scope.view = scope.views.form;\n      let fld = scope.views.form.fields[scope.field.field];\n      if (fld)\n        fld.visible = false;\n\n      if (attrs.inline) {\n        el = me.$compile(html)(scope);\n        gridEl.find('.inline-input-dialog').append(el);\n      } else {\n        let view = new Katrid.UI.Views.FormView({scope}, scope.views.form, {\n          dialog: true,\n          templateUrl: 'view.field.OneToManyField.Dialog.jinja2',\n          context: {\n            field: scope.field,\n          },\n        });\n        el = view.render();\n      }\n\n      // Get the first form controller\n      scope.formElement = el.find('form:first');\n      scope.form = scope.formElement.controller('form');\n      scope.gridDialog = el;\n\n      if (!attrs.inline) {\n        el.modal('show');\n        el.on('hidden.bs.modal', function () {\n          scope.record = null;\n          scope.dataSource.state = Katrid.Data.DataSourceState.browsing;\n          el.remove();\n          scope.gridDialog = null;\n          scope.recordIndex = -1;\n          _destroyChildren();\n        });\n      }\n      el.find('.modal-dialog').addClass('ng-form');\n      return new Promise(function (resolve) {\n        el.on('shown.bs.modal', () => resolve(el));\n      });\n    };\n\n  }\n\n  Katrid.UI.uiKatrid\n\n  .directive('grid', ['$compile', Grid])\n\n  .directive('list', ['$compile', $compile => ({\n    restrict: 'E',\n    scope: false,\n    compile(el, attrs) {\n      el.addClass('table-responsive');\n      let rowClick = attrs.ngRowClick;\n      let records = attrs.records || 'records';\n      let content = el.html();\n      let options = {};\n      if (attrs.listOptions)\n        options = JSON.parse(attrs.listOptions);\n      let template = Katrid.app.getTemplate('view.list.table.jinja2', {attrs, rowClick, options, records});\n\n      return function (scope, el, attrs, controller) {\n        let templ = $(template);\n        let tr = templ.find('tbody>tr:first');\n        let thead = templ.find('thead>tr:first');\n        let tfoot = templ.find('tfoot>tr:first');\n\n        let formView;\n        let ngTrClass = attrs.ngTrClass;\n        if (ngTrClass)\n          ngTrClass = ',' + ngTrClass;\n        else\n          ngTrClass = '';\n        console.log('row class', ngTrClass);\n        if (attrs.inlineEditor) {\n          templ.addClass('inline-editor');\n          formView = $(scope.views.form.content);\n          tr\n          .attr('ng-form', \"grid-row-form-{{$index}}\")\n          .attr('id', 'grid-row-form-{{$index}}');\n        } else\n          tr.attr(\n              'ng-class',\n              \"{\" +\n              \"'group-header': record.$hasChildren, \" +\n              \"'form-data-changing': (dataSource.changing && dataSource.recordIndex === $index), \" +\n              \"'form-data-readonly': !(dataSource.changing && dataSource.recordIndex === $index)\" +\n              ngTrClass +\n              \"}\"\n          );\n\n        // compile fields\n        let fields = $('<div>').append(content);\n        let totals = [];\n        let hasTotal = false;\n        let td, th;\n        for (let fld of fields.children('field')) {\n          fld = $(fld);\n          let fieldName = fld.attr('name');\n          let field = scope.view.fields[fieldName];\n          if (field) {\n\n            field.assign(fld);\n\n            let total = fld.attr('total');\n            if (total) {\n              hasTotal = true;\n              totals.push({\n                field: field,\n                name: fieldName,\n                total: total,\n              });\n            } else\n              totals.push(false);\n\n            if (!field.visible)\n              continue;\n\n            let inplaceEditor = false;\n            if (formView) {\n              inplaceEditor = formView.find(`field[name=\"${fieldName}\"]`);\n              inplaceEditor = $(inplaceEditor[0].outerHTML).attr('form-field', 'form-field').attr('inline-editor', attrs.inlineEditor)[0].outerHTML;\n            }\n            let fieldEl = $(field.render('list', fld, {view: scope.view}));\n            th = fieldEl.first();\n            td = $(th).next();\n          } else {\n            // just use the html content\n            th = '<th></th>';\n            td = `<td>${fld.html()}</td>`;\n          }\n          tr.append(td);\n          thead.append(th);\n        }\n\n        if (hasTotal)\n          for (total of totals)\n            tfoot.append(Katrid.app.getTemplate('view.list.table.total.jinja2', {field: total.field}));\n        else\n          tfoot.remove();\n\n        if (options.deleteRow) {\n          let delRow = $(Katrid.app.getTemplate('view.list.table.delete.jinja2'));\n          for (let child of delRow)\n            if (child.tagName === 'TD')\n              tr.append(child);\n            else if (child.tagName === 'TH')\n              thead.append(child);\n          if (hasTotal)\n            tfoot.append('<td class=\"list-column-delete\" ng-show=\"dataSource.parent.changing && !dataSource.readonly\"></td>');\n        }\n        el.html('');\n        el.append($compile(templ)(scope));\n      }\n    }\n  })]);\n\n\n})();\n","(function () {\n  const uiKatrid = Katrid.UI.uiKatrid;\n\n  uiKatrid.filter('numberFormat', () => {\n    return (value, maxDigits = 3) => {\n      if (value == null)\n        return '';\n      return new Intl.NumberFormat('pt-br', { maximumSignificantDigits: maxDigits }).format(value);\n    }\n  });\n\n})();\n","(function() {\n\n  let conditionsLabels = {\n    '=': Katrid.i18n.gettext('Is equal'),\n    '!=': Katrid.i18n.gettext('Is different'),\n    '>': Katrid.i18n.gettext('Greater-than'),\n    '<': Katrid.i18n.gettext('Less-than'),\n  };\n\n  let conditionSuffix = {\n    '=': '',\n    '!=': '__isnot',\n    'like': '__icontains',\n    'not like': '__not_icontains',\n    '>': '__gt',\n    '>=': '__gte',\n    '<': '__lt',\n    '<=': '__lte',\n    'in': '__in',\n    'not in': '__not_in',\n  };\n\n\n  class SearchQuery {\n    constructor(searchView) {\n      this.searchView = searchView;\n      this.items = [];\n      this.groups = [];\n    }\n\n    add(item) {\n      if (this.items.includes(item)) {\n        item.facet.addValue(item);\n        item.facet.refresh();\n      } else {\n        this.items.push(item);\n        this.searchView.renderFacets();\n      }\n      if (item instanceof SearchGroup)\n        this.groups.push(item);\n      this.searchView.change();\n    }\n\n    loadItem(item) {\n      this.items.push(item);\n      if (item instanceof SearchGroup)\n        this.groups.push(item);\n    }\n\n    remove(item) {\n      this.items.splice(this.items.indexOf(item), 1);\n      if (item instanceof SearchGroup) {\n        this.groups.splice(this.groups.indexOf(item), 1);\n      }\n      this.searchView.change();\n    }\n\n    getParams() {\n      let r = [];\n      for (let i of this.items)\n        r = r.concat(i.getParamValues());\n      return r;\n    }\n  }\n\n\n  class FacetView {\n    constructor(item) {\n      this.item = item;\n      this.values = [];\n    }\n\n    get separator() {\n      return ` <span class=\"facet-values-separator\">${Katrid.i18n.gettext('or')}</span> `;\n    }\n\n    init(item, values) {\n      this.item = item;\n      if (values)\n        this.values = values;\n      else\n        this.values = [{\n          searchString: this.item.getDisplayValue(), value: this.item.value\n        }];\n    }\n\n    addValue(value) {\n      return this.values.push(value);\n    }\n\n    get caption() {\n      return this.item.caption;\n    }\n\n    clear() {\n      this.values = [];\n    }\n\n    get templateValue() {\n      return (Array.from(this.values).map(\n        s => s instanceof SearchObject ? s.display : s)\n      ).join(this.separator);\n    }\n\n    link(searchView) {\n      const html = $(this.template());\n      this.item.facet = this;\n      this.element = html;\n      const rm = html.find('.facet-remove');\n      rm.click(evt => searchView.onRemoveItem(evt, this.item));\n      return html;\n    }\n\n    refresh() {\n      return this.element.find('.facet-value').html(this.templateValue());\n    }\n\n    load(searchView) {\n      searchView.query.loadItem(this.item);\n      this.render(searchView);\n    }\n\n    destroy() {\n      this.clear();\n    }\n\n    getParamValues() {\n      const r = [];\n      for (let v of this.values) {\n        r.push(this.item.getParamValue(v));\n      }\n      if (r.length > 1)\n        return [{'OR': r}];\n      return r;\n    }\n  }\n\n  class FacetGroup extends FacetView {\n    constructor(...args) {\n      super(...args);\n      this.grouping = true;\n    }\n\n    clear() {\n      let oldValues = this.values;\n      super.clear();\n      for (let v of oldValues)\n        if (v._ref)\n          v._ref._selected = false;\n    }\n\n    get separator() {\n      return ` <span> &gt; </span> `;\n    }\n\n    get caption() {\n      return '<span class=\"fa fa-bars\"></span>';\n    }\n  }\n\n\n\n\n  class SearchItem {\n    constructor(view, name, el) {\n      this.view = view;\n      this.name = name;\n      this.el = el;\n    }\n\n    getDisplayValue() {\n      if (this.value) {\n        return this.value[1];\n      }\n      return this.searchString;\n    }\n\n    getParamValue(name, value) {\n      const r = {};\n      if (_.isArray(value)) {\n        r[name] = value[0];\n      } else {\n        r[name + '__icontains'] = value;\n      }\n      return r;\n    }\n\n    _doChange() {\n      this.view.update();\n    }\n  }\n\n  class SearchFilter extends SearchItem {\n    constructor(view, name, caption, domain, group, el) {\n      super(view, name, el);\n      this.group = group;\n      this.caption = caption;\n      if (_.isString(domain))\n        domain = JSON.parse(domain.replace(/'/g, '\"'));\n      this.domain = domain;\n      this._selected = false;\n    }\n\n    static fromItem(view, el, group) {\n      return new SearchFilter(view, el.attr('name'), el.attr('caption') || el.attr('label'), el.attr('domain'), group, el);\n    }\n\n    toString() {\n      return this.caption;\n    }\n\n    toggle() {\n      this.selected = !this.selected;\n    }\n\n    get selected() {\n      return this._selected;\n    }\n\n    set selected(value) {\n      this._selected = value;\n      if (value)\n        this.group.addValue(this);\n      else\n        this.group.removeValue(this);\n      this._doChange();\n    }\n\n    getDisplayValue() {\n      return this.caption;\n    }\n\n    get facet() {\n      return this.group.facet;\n    }\n\n    getParamValue() {\n      return this.domain;\n    }\n\n    get value() {\n      return this.domain;\n    }\n  }\n\n  class SearchFilters extends Array {\n    constructor(view, facet) {\n      super();\n      this.view = view;\n      this._selection = [];\n      if (!facet)\n        facet = new FacetView(this);\n      this._facet = facet;\n    }\n\n    static fromItem(view, el) {\n      let group = new SearchFilters(view);\n      group.push(SearchFilter.fromItem(view, el, group));\n      return group;\n    }\n\n    static fromGroup(view, el) {\n      let group = new SearchFilters(view);\n      for (let child of el.children())\n        group.push(SearchFilter.fromItem(view, $(child), group));\n      console.log(group);\n      return group;\n    }\n\n    addValue(item) {\n      this._selection.push(item);\n      this._facet.values = this._selection.map(item => (new SearchObject(item.toString(), item.value)));\n      this._refresh();\n    }\n\n    removeValue(item) {\n      this._selection.splice(this._selection.indexOf(item), 1);\n      this._facet.values = this._selection.map(item => ({ searchString: item.getDisplayValue(), value: item.value }));\n      this._refresh();\n    }\n\n    selectAll() {\n      for (let item of this)\n        this.addValue(item);\n      this.view.update();\n    }\n\n    get caption() {\n      return '<span class=\"fa fa-filter\"></span>';\n    }\n\n    _refresh() {\n      if (this._selection.length) {\n        if (this.view.facets.indexOf(this._facet) === -1)\n          this.view.facets.push(this._facet);\n      } else if (this.view.facets.indexOf(this._facet) > -1)\n        this.view.facets.splice(this.view.facets.indexOf(this._facet), 1);\n    }\n\n    getParamValue(v) {\n      return v.value;\n    }\n\n    clear() {\n      this._selection = [];\n    }\n\n  }\n\n  class SearchGroups extends SearchFilters {\n    constructor(view, facet) {\n      if (!facet)\n        facet = new FacetGroup();\n      super(view, facet);\n    }\n\n    static fromGroup(opts) {\n      let view = opts.view;\n      let el = opts.el;\n      // get default facet\n      let facet = opts.facet || view.facetGrouping;\n      let group = new SearchGroups(view, facet);\n      if (el)\n        for (let child of el.children())\n          group.push(SearchGroup.fromItem(view, $(child), group));\n      return group;\n    }\n\n    addValue(item) {\n      this.view.groupLength++;\n      let newItem = new SearchObject(item.toString(), item.value);\n      newItem._ref = item;\n      this._facet.values.push(newItem);\n      this._refresh();\n    }\n\n    removeValue(item) {\n      this.view.groupLength--;\n      for (let i of this._facet.values)\n        if (i._ref === item) {\n          this._facet.values.splice(this._facet.values.indexOf(i), 1);\n          break;\n        }\n      this._refresh();\n    }\n\n    _refresh() {\n      if (this._facet.values.length) {\n        if (this.view.facets.indexOf(this._facet) === -1)\n          this.view.facets.push(this._facet);\n      } else if (this.view.facets.indexOf(this._facet) > -1)\n        this.view.facets.splice(this.view.facets.indexOf(this._facet), 1);\n    }\n  }\n\n  class SearchObject {\n    constructor(display, value) {\n      this.display = display;\n      this.value = value;\n    }\n  }\n\n  class SearchResult {\n    constructor(field, value) {\n      this.field = field;\n      this.value = value;\n      this.text = value[1];\n      this.indent = true;\n    }\n\n    select() {\n      this.field.selectItem(this.value);\n    }\n  }\n\n  class SearchField extends SearchItem {\n    constructor(view, name, el, field) {\n      super(view, name, el);\n      this.field = field;\n      this._expanded = false;\n      if (field.type === 'ForeignKey') {\n        this.expandable = true;\n        this.children = [];\n      } else {\n        this.expandable = false;\n      }\n    }\n\n    get expanded() {\n      return this._expanded;\n    }\n\n    set expanded(value) {\n      this._expanded = value;\n      if (value)\n        this._loadChildren();\n      else {\n        this.children = [];\n        if (this.view.$items)\n          for (let i = this.view.$items.length-1; i > 0; i--) {\n            let obj = this.view.$items[i];\n            if (obj.field === this) {\n              this.view.$items.splice(i, 1);\n\n            }\n          }\n      }\n    }\n\n    _loadChildren() {\n      this.loading = true;\n      this.view.scope.model.getFieldChoices(this.name, this.view.text)\n      .then(res => {\n        this.children = res.items;\n        // append returned items onto searchView.$items menu\n        let index = this.view.$items.indexOf(this);\n        if (index > -1) {\n          for (let obj of this.children) {\n            index++;\n            this.view.$items.splice(index, 0, new SearchResult(this, obj))\n          }\n        }\n      })\n      .finally(() => this.view.scope.$apply(() => this.loading = false));\n    }\n\n    get facet() {\n      if (!this._facet)\n        this._facet = new FacetView(this);\n      return this._facet;\n    }\n\n    getDisplayValue() {\n      return this.value;\n    }\n\n    getParamValue(value) {\n      const r = {};\n      let name = this.name;\n      if (_.isArray(value)) {\n        r[name] = value[0];\n      } else if (value instanceof SearchObject) {\n        return value.value;\n      } else {\n        r[name + '__icontains'] = value;\n      }\n      return r;\n    }\n\n    get caption() {\n      return this.field.caption;\n    }\n\n    get value() {\n      if (this._value)\n        return this._value[1];\n      return this.view.text;\n    }\n\n    select() {\n      this.facet.addValue(this.value);\n      this.view.addFacet(this.facet);\n      this.view.close();\n      this.view.update();\n    }\n\n    selectItem(item) {\n      let domain = {};\n      domain[this.field.name] = item[0];\n      this.facet.addValue(new SearchObject(item[1], domain));\n      this.view.addFacet(this.facet);\n      this.view.close();\n      this.view.update();\n    }\n\n    static fromField(view, el) {\n      let field = view.view.fields[el.attr('name')];\n      return new SearchField(view, field.name, el, field);\n    }\n\n    get template() {\n      return _.sprintf(Katrid.i18n.gettext(`Search <i>%(caption)s</i> by: <strong>%(text)s</strong>`), {\n        caption: this.field.caption,\n        text: this.view.text,\n      });\n    }\n  }\n\n  class SearchGroup extends SearchFilter {\n    constructor(view, name, caption, group, el) {\n      super(view, name, el);\n      this.group = group;\n      this.caption = caption;\n      this._selected = false;\n    }\n\n    static fromItem(view, el, group) {\n      return new SearchGroup(view, el.attr('name'), el.attr('caption'), group, el);\n    }\n\n    toString() {\n      return this.caption;\n    }\n  }\n\n  class CustomFilterItem extends SearchFilter {\n    constructor(view, field, condition, value, group) {\n      super(view, field.name, field.caption, null, group);\n      this.field = field;\n      this.condition = condition;\n      this._value = value;\n      this._selected = true;\n    }\n\n    toString() {\n      let s = this.field.format(this._value);\n      return this.field.caption + ' ' + conditionsLabels[this.condition].toLowerCase() + ' \"' + s + '\"';\n    }\n\n    get value() {\n      let r = {};\n      r[this.field.name + conditionSuffix[this.condition]] = this._value;\n      return r;\n    }\n\n  }\n\n  Katrid.UI.uiKatrid.controller('CustomFilterController', ['$scope', '$element', '$filter', function ($scope, $element, $filter) {\n    $scope.tempFilter = null;\n    $scope.customFilter = [];\n\n    $scope.fieldChange = function (field) {\n      $scope.field = field;\n      $scope.condition = field.defaultCondition;\n      $scope.conditionChange($scope.condition);\n    };\n\n    $scope.conditionChange = (condition) => {\n      $scope.controlVisible = $scope.field.isControlVisible(condition);\n    };\n\n    $scope.valueChange = (value) => {\n      $scope.searchValue = value;\n    };\n\n    $scope.addCondition = (field, condition, value) => {\n      if (!$scope.tempFilter)\n        $scope.tempFilter = new SearchFilters($scope.$parent.search);\n      $scope.tempFilter.push(new CustomFilterItem($scope.$parent.search, field, condition, value, $scope.tempFilter));\n      $scope.field = null;\n      $scope.condition = null;\n      $scope.controlVisible = false;\n      $scope.searchValue = undefined;\n    };\n\n    $scope.applyFilter = () => {\n      if ($scope.searchValue)\n        $scope.addCondition($scope.field, $scope.condition, $scope.searchValue);\n      $scope.customFilter.push($scope.tempFilter);\n      $scope.tempFilter.selectAll();\n      $scope.tempFilter = null;\n      $scope.customSearchExpanded = false;\n    };\n  }])\n\n  .directive('customFilter', () => (\n    {\n      restrict: 'A',\n      scope: {\n        action: '=',\n      },\n    }\n  ));\n\n  class SearchView {\n    constructor(scope, element, view) {\n      this.scope = scope;\n      this.element = element;\n      this.query = new SearchQuery(this);\n      this._viewMoreButtons = localStorage.getItem('katrid.search.viewMoreButtons') === 'true';\n      this.items = [];\n      this.fields = [];\n      this.filterGroups = [];\n      this.groups = [];\n      this._groupLength = this.groupLength = 0;\n      this.facets = [];\n      this.input = element.find('.search-view-input');\n      this.view = view;\n      // available dropdown items\n      this.$items = null;\n\n      // groups must have a unique facet\n      this.facetGrouping = new FacetGroup();\n\n      if (view) {\n        this.el = $(view.content);\n        this.menu = element.find('.search-dropdown-menu.search-view-menu');\n        // let menu = this.createMenu(scope, element.find('.search-dropdown-menu.search-view-menu'), element);\n\n        for (let child of this.el.children()) {\n          child = $(child);\n          let tag = child.prop('tagName');\n          let obj;\n          if (tag === 'FILTER') {\n            obj = SearchFilters.fromItem(this, child);\n            this.filterGroups.push(obj);\n          }\n          else if (tag === 'FILTER-GROUP') {\n            obj = SearchFilters.fromGroup(this, child);\n            this.filterGroups.push(obj);\n            continue;\n          }\n          else if (tag === 'GROUP') {\n            obj = SearchGroup.fromItem({ view: this, el: child });\n            this.groups.push(obj);\n            continue;\n          }\n          else if (tag === 'FIELD') {\n            obj = SearchField.fromField(this, child);\n            this.fields.push(obj);\n            continue;\n          }\n          console.log('obj', obj);\n          if (obj)\n            this.append(obj);\n        }\n\n        this.input\n        .on('input', evt => {\n          if (this.input.val().length) {\n            return this.show(evt);\n          } else {\n            return this.close(evt);\n          }\n        })\n        .on('keydown', evt => {\n          switch (evt.which) {\n            case Katrid.UI.keyCode.DOWN:\n              this.move(1);\n              evt.preventDefault();\n              break;\n            case Katrid.UI.keyCode.UP:\n              this.move(-1);\n              evt.preventDefault();\n              break;\n            case Katrid.UI.keyCode.ENTER:\n              this.scope.$apply(() => angular.element(this.menu.find('li.active a.search-menu-item')).scope().item.select(evt));\n              break;\n            case Katrid.UI.keyCode.BACKSPACE:\n              if (this.input.val() === '') {\n                this.scope.$apply(() => this.facets.splice(this.facets.length-1, 1).map(facet => facet.clear()));\n                this.update();\n                // const item = this.query.items[this.searchView.query.items.length-1];\n              }\n              break;\n          }\n        })\n        .on('blur', evt => {\n          this.input.val('');\n          return this.close();\n        });\n      }\n    }\n\n    addCustomGroup(field) {\n      if (!this.customGroups) {\n        this.customGroups = new SearchGroups(this, this.facetGrouping);\n        this.groups.push(this.customGroups);\n      }\n      let obj = new SearchGroup(this, field.name, field.caption, this.customGroups);\n      this.customGroups.push(obj);\n      obj.selected = true;\n    }\n\n    set viewMoreButtons(value) {\n      if (this._viewMoreButtons !== value) {\n        this._viewMoreButtons = value;\n        localStorage.setItem('katrid.search.viewMoreButtons', value);\n      }\n    }\n\n    get viewMoreButtons() {\n      return this._viewMoreButtons;\n    }\n\n    load(filter) {\n      Object.entries(filter).map((item, idx) => {\n        let i = this.getByName(item[0]);\n        if (i)\n          i.selected = true;\n      })\n    }\n\n    getByName(name) {\n      // try to find inside a group of filters\n      for (let item of this.filterGroups)\n        for (let subitem of item)\n          if (subitem.name === name)\n            return subitem;\n\n      for (let item of this.items)\n        if (item.name === name)\n          return item;\n    }\n\n    append(item) {\n      this.items.push(item);\n    }\n\n    addFacet(facet) {\n      if (!this.facets.includes(facet))\n        this.facets.push(facet);\n    }\n\n    first() {\n      this.menu.find('li.active a.search-menu-item').removeClass('active');\n      this.menu.find('li:first').addClass('active');\n    }\n\n    remove(index) {\n      let facet = this.facets[index];\n      facet.destroy();\n      this.facets.splice(index, 1);\n      this.update();\n    }\n\n    getParams() {\n      let r = [];\n      for (let i of this.facets)\n        if (!i.grouping)\n          r = r.concat(i.getParamValues());\n      return r;\n    }\n\n    dump() {\n      let res = [];\n      for (let i of this.facets)\n        res.push(i);\n      return res;\n    }\n\n    move(distance) {\n      const fw = distance > 0;\n      distance = Math.abs(distance);\n      while (distance !== 0) {\n        distance--;\n        let el = this.element.find('.search-view-menu li.active');\n        if (el.length) {\n          el.removeClass('active');\n          if (fw) {\n            el = el.next();\n          } else {\n            el = el.prev();\n          }\n          el.addClass('active');\n        } else {\n          if (fw) {\n            el = this.element.find('.search-view-menu > li:first');\n          } else {\n            el = this.element.find('.search-view-menu > li:last');\n          }\n          el.addClass('active');\n        }\n      }\n    }\n\n    update() {\n      if (this.groupLength !== this._groupLength) {\n        this._groupLength = this.groupLength;\n        this.scope.action.applyGroups(this.groupBy(), this.getParams());\n      }\n      else\n        // apply changes to window action\n        this.scope.action.setSearchParams(this.getParams());\n    }\n\n    groupBy() {\n      return this.facetGrouping.values.map(obj => obj._ref.name);\n    }\n\n    show() {\n      let shouldApply = false;\n      if (!this.$items) {\n        this.$items = [].concat(this.fields);\n        shouldApply = true;\n      }\n      // close expanded items\n      for (let obj of this.$items)\n        if (obj.expanded) {\n          obj.expanded = false;\n          shouldApply = true;\n        }\n      if (shouldApply)\n        this.scope.$apply();\n      this.menu.show();\n      this.first();\n    }\n\n    close() {\n      this.$items = null;\n      this.menu.hide();\n      this.reset();\n      this.input.val('');\n    }\n\n    reset() {\n      for (let i of this.fields)\n        if (i && i.children && i.children.length)\n          i.expanded = false;\n    }\n  }\n\n  class SearchViewComponent {\n    constructor() {\n      this.retrict = 'E';\n      this.templateUrl = 'view.search.jinja2';\n      this.replace = true;\n      this.scope = false;\n    }\n  }\n\n  class SearchViewArea {\n    constructor() {\n      this.restrict = 'A';\n      this.scope = false;\n    }\n\n    link(scope, el, attrs) {\n      let view = scope.action.views.search;\n      scope.action.searchView = new SearchView(scope, el, view);\n      if (scope.action.context.default_search) {\n        scope.action.searchView.load(scope.action.context.default_search);\n      }\n    }\n  }\n\n  Katrid.UI.uiKatrid.controller('SearchMenuController', ['$scope', function($scope) {\n\n  }]);\n\n  Katrid.UI.uiKatrid.directive('searchView', SearchViewComponent);\n  Katrid.UI.uiKatrid.directive('searchViewArea', SearchViewArea);\n\n  Katrid.UI.Views.SearchView = SearchView;\n  Katrid.UI.Views.SearchViewComponent = SearchViewComponent;\n\n})();\n","(function () {\n\n  let uiKatrid = Katrid.UI.uiKatrid;\n\n  let formCount = 0;\n\n  uiKatrid.directive('formField2', ['$compile', function ($compile) {\n    return {\n      restrict: 'A',\n      priority: 99,\n      replace: true,\n      // priority: -1,\n      compile(el, attrs) {\n        return function(scope, element, attrs, ctrl) {\n          let field = scope.view.fields[attrs.name];\n          if (_.isUndefined(field))\n            throw Error('Invalid field name \"' + attrs.name + '\"');\n          let templ = field.template.form;\n          field.assign(element);\n          if (!field.visible) {\n            el.remove();\n            return;\n          }\n          let fieldAttributes = field.getAttributes(attrs);\n          let sectionAttrs = {};\n\n          // conditional readonly\n          if (fieldAttributes['ng-readonly'])\n            sectionAttrs['ng-readonly'] = fieldAttributes['ng-readonly'].toString();\n\n          // conditional display\n          if (attrs.ngShow)\n            sectionAttrs['ng-show'] = attrs.ngShow;\n\n          // field help text\n          if (field.helpText) {\n            sectionAttrs['title'] = field.helpText;\n          }\n\n          let content = element.html();\n          templ = Katrid.app.getTemplate(templ, {\n            name: attrs.name, field, attrs: fieldAttributes, content, fieldAttributes: attrs, sectionAttrs,\n          });\n          templ = $compile(templ)(scope);\n          element.replaceWith(templ);\n\n          // Add input field for tracking on FormController\n          let fcontrol = templ.find('.form-field');\n          if (fcontrol.length) {\n            fcontrol = fcontrol[fcontrol.length - 1];\n            const form = templ.controller('form');\n            ctrl = angular.element(fcontrol).data().$ngModelController;\n            if (ctrl)\n              form.$addControl(ctrl);\n          }\n        }\n      },\n    };\n  }]);\n\n  uiKatrid.directive('inputField', () => ({\n    restrict: 'A',\n    scope: false,\n    link(scope, element, attrs) {\n      $(element).on('click', function() {\n        // input field select all text on click\n        $(this).select();\n      });\n    }\n  }));\n\n\n  uiKatrid.directive('view', () =>\n    ({\n      restrict: 'E',\n      template(element, attrs) {\n        formCount++;\n        return '';\n      },\n      link(scope, element, attrs) {\n        if (scope.model) {\n          element.attr('class', `view-form-${scope.model.name.replace(new RegExp('\\.', 'g'), '-')}`);\n          element.attr('id', `katrid-form-${formCount.toString()}`);\n          element.attr('model', scope.model);\n          return element.attr('name', `dataForm${formCount.toString()}`);\n        }\n      }\n    })\n  );\n\n  // uiKatrid.directive('list', ($compile, $http) =>\n  //   ({\n  //     restrict: 'E',\n  //     priority: 700,\n  //     link(scope, element, attrs) {\n  // console.log('render list');\n  //       let html = Katrid.UI.Utils.Templates.renderList(scope, element, attrs);\n  //       html = $compile(html)(scope);\n  //       return element.replaceWith(html);\n  //     }\n  //   })\n  // );\n\n  uiKatrid.directive('ngSum', () =>\n    ({\n      restrict: 'A',\n      priority: 9999,\n      require: 'ngModel',\n      link(scope, element, attrs, controller) {\n        const nm = attrs.ngSum.split('.');\n        const field = nm[0];\n        const subField = nm[1];\n        return scope.$watch(`record.$${field}`, function (newValue, oldValue) {\n          if (newValue && scope.record) {\n            let v = 0;\n            scope.record[field].map(obj => v += parseFloat(obj[subField]));\n            if (v.toString() !== controller.$modelValue) {\n              controller.$setViewValue(v);\n              controller.$render();\n            }\n          }\n        });\n      }\n    })\n  );\n\n\n  uiKatrid.directive('ngEnter', () =>\n    (scope, element, attrs) =>\n      element.bind(\"keydown keypress\", (event) => {\n        if (event.which === 13) {\n          scope.$apply(() => scope.$eval(attrs.ngEnter, {$event: event}));\n          event.preventDefault();\n        }\n      })\n  );\n\n  uiKatrid.directive('ngEsc', () =>\n    (scope, element, attrs) =>\n      element.bind(\"keydown keypress\", (event) => {\n        if (event.which === 27) {\n          scope.$apply(() => scope.$eval(attrs.ngEsc, {$event: event}));\n          event.preventDefault();\n        }\n      })\n  );\n\n\n\n  if ($.fn.modal)\n    $.fn.modal.Constructor.prototype._enforceFocus = function() {};\n\n  uiKatrid.directive('ajaxChoices', ['$location', $location =>\n    ({\n      restrict: 'A',\n      require: '?ngModel',\n      link(scope, element, attrs, controller) {\n        const {multiple} = attrs;\n        const serviceName = attrs.ajaxChoices;\n        let field = attrs.field;\n        let _timeout = null;\n        let domain;\n\n        const cfg = {\n          allowClear: true,\n          query(query) {\n\n            // make params\n            let data = {\n              args: [query.term],\n              kwargs: {\n                count: 1,\n                page: query.page,\n                name_fields: attrs.nameFields && attrs.nameFields.split(\",\") || null\n              }\n            };\n\n            if (domain)\n              data.domain = domain;\n\n            const f = () => {\n              let svc = new Katrid.Services.Model(serviceName);\n              if (field) svc = svc.getFieldChoices(field, query.term, data.kwargs);\n              else svc = new Katrid.Services.Model(attrs.modelChoices).searchName(data);\n              svc.then(res => {\n                let data = res.items;\n                const r = data.map(item => ({\n                  id: item[0],\n                  text: item[1]\n                }));\n                const more = query.page * Katrid.settings.services.choicesPageLimit < res.count;\n                return query.callback({\n                  results: r,\n                  more: more\n                })\n              });\n            };\n            if (_timeout) clearTimeout(_timeout);\n            _timeout = setTimeout(f, 400)\n\n          },\n          escapeMarkup(m) {\n            return m;\n          },\n          initSelection(element, callback) {\n            const v = controller.$modelValue;\n            if (v) {\n              if (multiple) {\n                const values = [];\n                for (let i of Array.from(v)) {\n                  values.push({id: i[0], text: i[1]});\n                }\n                return callback(values);\n              } else {\n                return callback({id: v[0], text: v[1]});\n              }\n            }\n          }\n        };\n        if (multiple)\n          cfg['multiple'] = true;\n\n        const el = element.select2(cfg);\n        let sel = el;\n        element.on('$destroy', function () {\n          $('.select2-hidden-accessible').remove();\n          $('.select2-drop').remove();\n          return $('.select2-drop-mask').remove();\n        });\n        el.on('change', function (e) {\n          const v = el.select2('data');\n          controller.$setDirty();\n          if (v)\n            controller.$viewValue = v;\n\n          return scope.$apply();\n        });\n\n        controller.$render = () => {\n          if (controller.$viewValue)\n            return element.select2('val', controller.$viewValue);\n        };\n      }\n    })]\n  );\n\n  uiKatrid.directive('inputMask', () =>\n    ({\n      restrict: 'A',\n      link(scope, el, attrs) {\n        el.inputmask();\n      }\n    })\n  );\n\n\n  class Decimal {\n    constructor($filter) {\n      this.restrict = 'A';\n      this.require = 'ngModel';\n      this.$filter = $filter;\n    }\n\n    link(scope, element, attrs, controller) {\n      let decimal = attrs.inputDecimal;\n      let opts = {\n        alias: 'numeric',\n        groupSeparator: '.',\n        unmaskAsNumber: true,\n        radixPoint: ',',\n        autoGroup: true,\n        digitsOptional: false,\n        placeholder: '0',\n      };\n      if (decimal)\n        opts.digits = parseInt(decimal);\n      element.inputmask(opts);\n\n      controller.$parsers.push(value => {\n        let v = element.inputmask('unmaskedvalue');\n        return v;\n      });\n\n      controller.$formatters.push((v) => {\n        if (_.isNumber(v))\n          v = v.toFixed(opts.digits).replace('.', ',');\n        else if (_.isString(v))\n          v = v.replace('.', ',');\n        return v;\n      });\n    }\n\n  }\n\n  uiKatrid.directive('inputDecimal', ['$filter', Decimal]);\n\n\n\n  uiKatrid.filter('moment', () =>\n    function (input, format) {\n      if (format) {\n        return moment().format(format);\n      }\n      return moment(input).fromNow();\n    }\n  );\n\n\n  uiKatrid.directive('fileReader', () =>\n    ({\n      restrict: 'A',\n      require: 'ngModel',\n      scope: {},\n      link(scope, element, attrs, controller) {\n\n        if (attrs.accept === 'image/*') {\n          element.tag === 'INPUT';\n        }\n\n        return element.bind('change', function () {\n          const reader = new FileReader();\n          reader.onload = event => controller.$setViewValue(event.target.result);\n          return reader.readAsDataURL(event.target.files[0]);\n        });\n      }\n    })\n  );\n\n\n  uiKatrid.directive('dateInput', ['$filter', ($filter) => ({\n    restrict: 'A',\n    require: '?ngModel',\n    link(scope, element, attrs, controller) {\n\n      let setNow = () => {\n        let value;\n        if (attrs.type === 'date')\n           value = (new Date()).toISOString().split('T')[0];\n        else\n          value = moment(new Date()).format('YYYY-MM-DD HH:mm').replace(' ', 'T');  // remove timezone info\n        $(element).val(value);\n        controller.$setViewValue(value);\n        _focus = false;\n      };\n\n      let _focus = true;\n\n      element\n      .focus(function() {\n        if (($(this).val() === ''))\n          _focus = true;\n      })\n      .keypress(function(evt) {\n        if (evt.key.toLowerCase() === 'h') {\n          setNow();\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n      })\n      .keydown(function(evt) {\n        if (/\\d/.test(evt.key)) {\n          if (($(this).val() === '') && (_focus))\n            setNow();\n        }\n      });\n\n      controller.$formatters.push(function(value) {\n        if (value) {\n          return new Date(value);\n        }\n      });\n\n      controller.$parsers.push(function (value) {\n        if (_.isDate(value)) {\n          let v = moment.utc(value).format('YYYY-MM-DD');\n          if (controller.$modelValue)\n            v += 'T' + controller.$modelValue.split('T', 1)[1];\n          let r = moment.utc(v).format('YYYY-MM-DDTHH:mm:ss');\n          console.log('ret', value, v, r);\n          return r;\n        }\n      });\n\n    }\n  })]);\n\n  uiKatrid.directive('timeInput', () => ({\n    restrict: 'A',\n    require: '?ngModel',\n    link(scope, el, attrs, controller) {\n      el.inputmask({ regex: '([0-1]?[0-9]|2[0-4]):([0-5][0-9])', insertMode: false });\n      // select all chars when focus\n      el.on('focus', function() {\n        setTimeout(() => $(this).select());\n      });\n\n      controller.$parsers.push(function (value) {\n        let v = controller.$modelValue.split('T', 1)[0] + 'T' + value;\n        console.log('time parser', v, value, controller.$viewValue);\n        let r = moment.utc(v).format('YYYY-MM-DDTHH:mm:ss');\n        if (r === 'Invalid date')\n          r = controller.$modelValue;\n        return r;\n      });\n\n      controller.$render = function() {\n        let v = controller.$modelValue;\n        console.log('render', v);\n        if (v)\n          return el.val(moment.utc(v).format('HH:mm'));\n      }\n\n    }\n  }));\n\n\n  uiKatrid.directive('cardDraggable', () => {\n    return {\n      restrict: 'A',\n      link(scope, element, attrs, controller) {\n        let cfg = {\n          connectWith: attrs.cardDraggable,\n          //items: '> .sortable-item',\n          cursor: 'move',\n        };\n        // Draggable write expression\n        if (!_.isUndefined(attrs.cardItem))\n          cfg['receive'] = (event, ui) => {\n          console.log('event');\n            let parent = angular.element(ui.item.parent()).scope();\n            let scope = angular.element(ui.item).scope();\n            console.log(scope);\n            console.log(parent);\n            let data = {};\n            data['id'] = scope.record.id;\n            $.extend(data, parent.group.$params[0]);\n            console.log(data);\n            parent.model.write([data])\n            .then(res => {\n              console.log('write ok', res);\n            });\n          };\n        // Group reorder\n        if (!_.isUndefined(attrs.cardGroup))\n          cfg['update'] = (event, ui) => {\n            let ids = [];\n            $.each(ui.item.parent().find('.card-group'), (idx, el) => {\n              ids.push($(el).data('id'));\n            });\n            let groupName = element.find('.card-group').first().data('group-name');\n            let modelName = scope.$parent.$parent.view.fields[groupName].model;\n            Katrid.Services.data.reorder(modelName, ids)\n            .done(res => {\n              console.log(res);\n            });\n          };\n        console.log(cfg);\n        element.sortable(cfg).disableSelection();\n        $('#sortable').sortable();\n      }\n    };\n  });\n\n  uiKatrid.directive('uiTooltip', () => ({\n    restrict: 'A',\n    link: (scope, el, attrs) => {\n      $(el).tooltip({\n        container: 'body',\n        delay: {\n          show: 200,\n          hide: 500\n        }\n      });\n    }\n  }));\n\n  uiKatrid.setFocus = (el) => {\n    let e = $(el);\n    // check if element object has select2 data\n    if (e.data('select2')) e.select2('focus');\n    else el.focus();\n  };\n\n  uiKatrid.directive('attachmentsButton', () => ({\n    restrict: 'A',\n    scope: false,\n    link: (scope, el) => {\n      let _pendingOperation;\n      scope.$parent.$watch('recordId', (key) => {\n        let attachment = new Katrid.Services.Model('ir.attachment', scope);\n        // scope.$parent.attachments = [];\n        clearTimeout(_pendingOperation);\n        _pendingOperation = setTimeout(() => {\n          attachment.search({ params: { model: scope.action.model.name, object_id: key }, count: false })\n          .then(res => {\n            let r = null;\n            if (res && res.data)\n              r = res.data;\n            scope.$apply(() => scope.attachments = r );\n          });\n        }, 1000);\n\n      });\n    }\n  }));\n\n  uiKatrid.directive('action', ['$compile', ($compile) => ({\n    restrict: 'E',\n    priority: 99,\n    link: (scope, el, attrs) => {\n      console.log('define action', attrs.ngClick);\n      let div = el.closest('div.data-form');\n      let actions = div.find('.dropdown-menu-actions');\n      let name = attrs.name;\n      let label = el.html();\n      let html = `<li><a href=\"javascript:void(0)\">${label}</a></li>`;\n      let newItem = $(html);\n      newItem.click(() => {\n        if (attrs.object) scope.model.rpc(attrs.object, [scope.$parent.record.id]);\n        //scope.$eval(attrs.ngClick);\n      });\n      actions.append(newItem);\n      el.remove();\n    }\n  })]);\n\n  class CardView {\n    constructor() {\n      this.restrict = 'E';\n      this.scope = false;\n    }\n\n    controller($scope, element, attrs) {\n      console.log('controller started');\n      $scope.dataSource.autoLoadGrouping = true;\n\n      $scope.cardShowAddGroupDlg = (event) => {\n        $scope.cardAddGroupDlg = true;\n        setTimeout(() => $(event.target).closest('.card-add-group').find('input').focus(), 10);\n      };\n\n      $scope.cardAddGroup = (event, name) => {\n        let gname = $(event.target).closest('.card-add-group').data('group-name');\n        let field = $scope.action.view.fields[gname];\n        let svc = new Katrid.Services.Model(field.model);\n        console.log('the name is', name);\n        svc.createName(name)\n        .done((res) => {\n          console.log(res);\n        });\n      };\n\n      $scope.cardAddItem = (event, name) => {\n        if (name) {\n          let ctx = {};\n          let g = $(event.target).closest('.card-group');\n          ctx['default_' + g.data('group-name')] = g.data('sequence-id');\n          scope.model.createName(name, ctx)\n          .done((res) => {\n            if (res.ok) {\n              let id = res.result[0];\n              scope.model.getById(id)\n              .done((res) => {\n                if (res.ok) {\n                  let s = angular.element(event.target).scope();\n                  let g = s.group;\n                  s.$apply(() => {\n                    g.records.push(res.result.data[0]);\n                  });\n                }\n              })\n            }\n          });\n        }\n        $scope.kanbanHideAddGroupItemDlg(event);\n      };\n\n    }\n  }\n\n})();\n","(function () {\n\n  let WIDGET_COUNT = 0;\n\n  let DEFAULT_COLS = {\n    'BooleanField': 3,\n    'DecimalField': 3,\n    'FloatField': 3,\n    'DateField': 3,\n    'DateTimeField': 3,\n    'IntegerField': 3,\n    'SmallIntegerField': 3,\n    'TimeField': 3,\n    'CharField': 3,\n    'OneToManyField': 12\n  };\n\n  class Field {\n    static get tag() {\n      return 'input';\n    }\n\n    constructor(scope, attrs, field, element) {\n      this.attrs = attrs;\n      this.scope = scope;\n      this.templAttrs = {};\n      this.wAttrs = {};\n      this.field = field;\n      this.element = element;\n      this.content = element.html();\n      // this.inline = scope.inline;\n      this.spanPrefix = '';\n\n      // Check if field depends from another\n      if ((field.depends != null) && field.depends.length)\n        scope.dataSource.addFieldWatcher(field);\n\n      if (attrs.ngShow)\n        this.templAttrs['ng-show'] = attrs.ngShow;\n\n      if (attrs.ngReadonly || field.readonly)\n        this.templAttrs['ng-readonly'] = attrs.ngReadonly || field.readonly;\n\n      if (field.attrs)\n        for (let k of field.attrs) {\n          let v = field.attrs[k];\n          if (k.startsWith('container') || ((k === 'ng-show') && !attrs.ngShow)) {\n            this.templAttrs[k] = v;\n          }\n        }\n\n      if (attrs.ngFieldChange) {\n        this.wAttrs['ng-change'] = attrs.ngFieldChange;\n      }\n\n      let cols = attrs.cols;\n\n      if (!cols) {\n        if (field.type === 'CharField')\n          if (field.max_length && (field.max_length < 30)) cols = 3;\n        if (!cols)\n          cols = DEFAULT_COLS[field.type] || 6;\n      }\n\n      this.col = cols;\n      this.classes = ['form-field'];\n\n      // track field changes\n      if (field.onchange)\n        scope.$watch();\n    }\n\n    fieldChangeEvent() {\n\n    }\n\n    get caption() {\n      return this.element.attr('label') || this.field.caption;\n    }\n\n    renderTo(templTag, inplaceEditor=false, cls='') {\n      let templAttrs = [];\n      for (let [k, v] of Object.entries(this.templAttrs))\n        templAttrs.push(k + '=' + '\"' + v + '\"');\n\n      if (inplaceEditor)\n        return `<${templTag} class=\"${cls}\" ${templAttrs.join('')}>${this.template(this.scope, this.element, this.attrs, this.field)}</${templTag}>`;\n\n      return `<${templTag} class=\"${this.field.type} section-field-${this.field.name} form-group\" ${templAttrs.join('')}>` +\n            this.template(this.scope, this.element, this.attrs, this.field) +\n            `</${templTag}>`\n    }\n\n    get ngModel() {\n      return `record.${this.field.name}`;\n    }\n\n    get id() {\n      if (!this._id)\n        this._id = ++WIDGET_COUNT;\n      return `katrid-input-${this._id.toString()}`;\n    }\n\n    widgetAttrs() {\n      let v;\n      const r = this.wAttrs;\n      if (this.field.required) {\n        r['required'] = null;\n      }\n\n      r['ng-model'] = this.ngModel;\n      if (this.field.attrs) {\n        for (let attr of Object.keys(this.field.attrs)) {\n          v = this.field.attrs[attr];\n          if (!attr.startsWith('container-') && (attr !== 'ng-show') && (attr !== 'ng-readonly')) {\n            r[attr] = v;\n          }\n        }\n      }\n\n      if (!_.isUndefined(this.attrs.$attr))\n      for (let attr of Object.keys(this.attrs.$attr)) {\n        let attrName = this.attrs.$attr[attr];\n        if (!attrName.startsWith('container-') && (attr !== 'ngShow') && (attr !== 'ngReadonly')) {\n          v = this.attrs[attr];\n          if (attrName.startsWith('field-')) {\n            attrName = attrName.substr(6, attrName.length - 6);\n          } else if (attrName === 'class')\n            this.classes.push(v);\n          r[attrName] = v;\n        }\n      }\n\n      if ((this.attrs.readonly != null) || this.field.readonly)\n        r['readonly'] = '';\n\n      if (this.classes)\n        r['class'] = this.classes.join(' ');\n\n      return r;\n    }\n\n    _getWidgetAttrs(scope, el, attrs, field) {\n      let html = '';\n      const attributes = this.widgetAttrs(scope, el, attrs, field);\n      for (let att in attributes) {\n        const v = attributes[att];\n        html += ` ${att}`;\n        if (v || (v === false)) {\n          if (_.isString(v) && (v.indexOf('\"') > -1)) {\n            html += `='${v}'`;\n          } else {\n            html += `=\"${v}\"`;\n          }\n        }\n      }\n      if (this.placeholder)\n        html += ` placeholder=\"${this.placeholder}\" `;\n\n      return html;\n    }\n\n    innerHtml() {\n      return '';\n    }\n\n    labelTemplate() {\n      const placeholder = '';\n      const label = this.caption;\n      if (this.attrs.nolabel === 'placeholder') {\n        this.placeholder = label;\n        return '';\n      } else if (!_.isUndefined(this.attrs.nolabel))\n        return '';\n      return `<label for=\"${this.id}\" class=\"form-label\">${label}</label>`;\n    }\n\n    get emptyText() {\n      if (this.inplaceEditor)\n        return '';\n      return '--';\n    }\n\n    get readOnlyClass() {\n      if (this.inplaceEditor || this.spanPrefix === '::')\n        return 'grid-field-readonly';\n      return 'form-field-readonly';\n    }\n\n    spanTemplate(scope, el, attrs, field) {\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}record.${this.field.name}.toString() || '${this.emptyText}' }}</span>`;\n    }\n\n    widgetTemplate() {\n      let html = `<${this.constructor.tag} id=\"${this.id}\" name=\"${this.field.name}\" ${this._getWidgetAttrs()}>`;\n      const inner = this.innerHtml();\n      if (inner)\n        html += inner + `</${this.constructor.tag}>`;\n      return html;\n    }\n\n    template() {\n      let label = '';\n      let span = this.spanTemplate();\n      if (!this.inplaceEditor) {\n        label = this.labelTemplate();\n        // span =\n      }\n      let widget = this.widgetTemplate();\n      if (this.inline === 'inline')\n        widget = `<div ng-if=\"dataSource.changing && dataSource.recordIndex === $index\">${widget}</div>`;\n      return `<div>${label}${span}${widget}</div>`;\n    }\n\n    link(scope, el, attrs, $compile, field) {\n      // Add watcher for field dependencies\n      if (field.depends) {\n        return (() => {\n          const result = [];\n          for (let dep of Array.from(field.depends)) {\n            if (!Array.from(scope.dataSource.fieldChangeWatchers).includes(dep)) {\n              scope.dataSource.fieldChangeWatchers.push(dep);\n              result.push(scope.$watch(`record.${dep}`, function(newValue, oldValue) {\n                // Ignore if dataSource is not in changing state\n                if ((newValue !== oldValue) && scope.dataSource.changing) {\n                  return scope.model.onFieldChange(dep, scope.record)\n                  .done(scope.dataSource.onFieldChange);\n                }\n              }));\n            }\n          }\n          return result;\n        })();\n      }\n    }\n\n    th() {\n      let cls = `${this.field.type} list-column`;\n      let lbl = this.element.attr('label') || `{{view.fields.${this.field.name}.caption}}`;\n      return `<th class=\"${cls}\" name=\"${this.field.name}\"><span>${lbl}</span></th>`;\n    }\n\n    _gridEditor(cls) {\n      return this.renderTo('section', true, cls);\n    }\n\n    _tdContent() {\n      return this.spanTemplate();\n    }\n\n    _td(cls) {\n      let content;\n      if (this.inplaceEditor)\n        content = this._gridEditor(cls);\n      else {\n        this.spanPrefix = '::';\n        content = this.spanTemplate();\n      }\n      return `<td class=\"${cls}\">${ content }</td>`;\n    }\n\n    td() {\n      if (this.content)\n        return this.content;\n      return this._td(`${this.field.type} field-${this.field.name}`);\n\n      let colHtml = this.element.html();\n      let s;\n      let fieldInfo = this.field;\n      let name = fieldInfo.name;\n      let editor = '';\n      if ((gridEditor === 'tabular') && html) editor = html;\n      if (colHtml) {\n        s = `<td><a data-id=\"{{::record.${name}[0]}}\">${colHtml}</a>${editor}</td>`;\n      } else if (fieldInfo.type === 'ForeignKey') {\n        s = `<td><a data-id=\"{{::row.${name}[0]}}\">{{row.${name}[1]}}</a>${editor}</td>`;\n      } else if  (fieldInfo._listChoices) {\n        s = `<td class=\"${cls}\">{{::view.fields.${name}._listChoices[row.${name}]}}${editor}</td>`;\n      } else if (fieldInfo.type === 'BooleanField') {\n        s = `<td class=\"bool-text ${cls}\">{{::row.${name} ? '${Katrid.i18n.gettext('yes')}' : '${Katrid.i18n.gettext('no')}'}}${editor}</td>`;\n      } else if (fieldInfo.type === 'IntegerField') {\n        s = `<td class=\"${cls}\">{{::row.${name}|number}}${editor}</td>`;\n      } else if (fieldInfo.type === 'DecimalField') {\n        let decimalPlaces = this.element.attr('decimal-places') || 2;\n        s = `<td class=\"${cls}\">{{::row.${name}|number:${ decimalPlaces } }}${editor}</td>`;\n      } else if (fieldInfo.type === 'DateField') {\n        s = `<td class=\"${cls}\">{{::row.${name}|date:'${Katrid.i18n.gettext('yyyy-mm-dd').replace(/[m]/g, 'M')}'}}${editor}</td>`;\n      } else if (fieldInfo.type === 'DateTimeField') {\n        s = `<td class=\"${cls}\">{{::row.${name}|date:'${Katrid.i18n.gettext('yyyy-mm-dd').replace(/[m]/g, 'M')}'}}${editor}</td>`;\n      } else {\n        s = `<td>{{ ::row.${name} }}</td>`;\n      }\n      return s;\n    }\n  }\n\n\n  class InputWidget extends Field {\n    static get tag() {\n      return 'input input-field';\n    }\n\n    constructor() {\n      super(...arguments);\n      this.classes.push('form-control');\n    }\n\n    get type() {\n      return 'text';\n    }\n\n    widgetTemplate1() {\n      let html;\n      if (this.constructor.tag.startsWith('input')) {\n        html = `<${this.tag} id=\"${attrs._id}\" type=\"${type}\" name=\"${attrs.name}\" ${this._getWidgetAttrs(scope, el, attrs, field)}>`;\n      } else {\n        html = `<${this.tag} id=\"${attrs._id}\" name=\"${attrs.name}\" ${this._getWidgetAttrs(scope, el, attrs, field)}>`;\n      }\n      const inner = this.innerHtml(scope, el, attrs, field);\n      if (inner) {\n        html += inner + `</${this.tag}>`;\n      }\n      return html;\n    }\n\n    widgetTemplate() {\n      let type = this.type;\n      const prependIcon = this.attrs.icon;\n      let html = `<${this.constructor.tag} id=\"${this.id}\" type=\"${this.type}\" name=\"${this.field.name}\" ${this._getWidgetAttrs()}>`;\n      if (prependIcon)\n        return `<label class=\"prepend-icon\"><i class=\"icon ${prependIcon}\"></i>${html}</label>`;\n\n      const inner = this.innerHtml();\n      if (inner)\n        html += inner + `</${this.constructor.tag}>`;\n\n      return html;\n    }\n  }\n\n\n  class StringField extends InputWidget {\n    widgetAttrs() {\n      const attributes = super.widgetAttrs();\n      if (this.field.maxLength)\n        attributes['maxlength'] = this.field.maxLength.toString();\n\n      return attributes;\n    }\n  }\n\n\n  class NumericField extends InputWidget {\n    static get tag() {\n      return 'input decimal';\n    }\n\n    get type() {\n      if (Katrid.settings.ui.isMobile)\n        return 'number';\n      return 'text';\n    }\n\n    spanTemplate() {\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}(record.${this.field.name}|number) || '${this.emptyText}' }}</span>`;\n    }\n  }\n\n\n  class IntegerField extends NumericField {\n    static get tag() {\n      return 'input decimal decimal-places=\"0\"';\n    }\n  }\n\n\n  class TimeField extends InputWidget {\n    get type() {\n      return 'time';\n    }\n  }\n\n\n  class SelectionField extends InputWidget {\n    static get tag() {\n      return 'select';\n    }\n\n    spanTemplate() {\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}view.fields.${this.field.name}.displayChoices[record.${this.field.name}] || '${this.emptyText}' }}</span>`;\n    }\n\n    innerHtml() {\n      return `<option ng-repeat=\"choice in view.fields.${this.field.name}.choices\" value=\"{{choice[0]}}\">{{choice[1]}}</option>`;\n    }\n  }\n\n\n  class ForeignKey extends Field {\n    static get tag() {\n      return 'input fk-autocomplete';\n      //return 'input foreignkey';\n    }\n\n    spanTemplate() {\n      let allowOpen = true;\n      if (((this.attrs.allowOpen != null) && (this.attrs.allowOpen === 'false')) || ((this.attrs.allowOpen == null) && this.field.attrs && (this.field.attrs['allow-open'] === false)))\n        allowOpen = false;\n\n      if (!allowOpen || this.inList)\n        return `<span class=\"${this.readOnlyClass}\"><a href=\"javascript:void(0)\">{{ ${this.spanPrefix}record.${this.field.name}[1] || '${this.emptyText}' }}</a></span>`;\n\n      return `<span class=\"${this.readOnlyClass}\"><a href=\"#/action/${ this.field.model }/view/?id={{ ${this.spanPrefix}record.${this.field.name}[0] }}\" ng-click=\"action.openObject('${ this.field.model }', record.${this.field.name}[0], $event, '${ this.field.caption }')\">{{ ${this.spanPrefix}record.${this.field.name}[1] }}</a><span ng-if=\"!record.${this.field.name}[1]\">--</span></span>`;\n    }\n\n    get type() {\n      return 'text';\n      return 'hidden';\n    }\n\n    _tdContent() {\n      return `{{record.${this.field.name}[1]}}`;\n    }\n  }\n\n\n  class TextField extends StringField {\n    static get tag() {\n      return 'textarea';\n    }\n  }\n\n  class XmlField extends TextField {\n    constructor(...args) {\n      super(...args);\n      console.log('cols', this.cols);\n    }\n  }\n\n\n  class FloatField extends NumericField {\n    static get tag() {\n      if (Katrid.settings.ui.isMobile)\n        return 'input';\n      return 'input decimal';\n    }\n\n    get type() {\n      if (Katrid.settings.ui.isMobile)\n        return 'number';\n      return 'text';\n    }\n\n    spanTemplate() {\n      let decimalPlaces = this.attrs.decimalPlaces || 2;\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}(record.${this.field.name}|number:${ decimalPlaces }) || '${this.emptyText}' }}</span>`;\n    }\n\n    _tdContent() {\n      let filter;\n      let decimalPlaces = this.element.attr('decimal-places');\n      if (decimalPlaces)\n        filter `number:${ decimalPlaces }`;\n      else\n        filter = `numberFormat:${this.element.attr('max-digits') || 6}`;\n      return `{{::record.${this.field.name}|${filter} }}`;\n    }\n  }\n\n\n  class DecimalField extends FloatField {\n    spanTemplate() {\n      let maxDigits = this.attrs.maxDigits;\n      let fmt = 'number';\n      if (maxDigits)\n        fmt = 'numberFormat';\n      else\n        maxDigits = this.attrs.decimalPlaces || 2;\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}(record.${this.field.name}|${ fmt }:${ maxDigits }) || '${this.emptyText}' }}</span>`;\n    }\n\n    _tdContent(cls) {\n      let maxDigits = this.element.attr('max-digits');\n      if (maxDigits)\n        return `<td class=\"${cls}\">{{::record.${this.field.name}|numberFormat:${ maxDigits } }}${this._gridEditor()}</td>`;\n      else {\n        maxDigits = 2;\n        return `{{::record.${this.field.name}|number:${ maxDigits } }}`;\n      }\n    }\n  }\n\n\n  class DateField extends TextField {\n    static get tag() {\n      return 'input date-input';\n    }\n\n    get type() {\n      return 'date';\n    }\n\n    spanTemplate() {\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}(record.${this.field.name}|date:'${Katrid.i18n.gettext('yyyy-mm-dd').replace(/[m]/g, 'M')}') || '${this.emptyText}' }}</span>`;\n    }\n\n    // widgetTemplate() {\n    //   return `<div class=\"input-group date\" ng-show=\"dataSource.changing\">${ super.widgetTemplate() }<div class=\"input-group-append\"><button class=\"btn btn-default\" type=\"button\"><span class=\"fa fa-calendar\"></span></button></div></div>`;\n    // }\n\n    _tdContent(cls) {\n      return `{{::record.${this.field.name}|date:'${Katrid.i18n.gettext('yyyy-MM-dd')}'}}`;\n    }\n  }\n\n\n  class DateTimeField extends TextField {\n    static get tag() {\n      return 'input date-input';\n    }\n\n    get type() {\n      return 'datetime-local';\n    }\n\n    spanTemplate() {\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}(record.${this.field.name}|date:'${Katrid.i18n.gettext('yyyy-MM-dd hh:mma')}') || '${this.emptyText}' }}</span>`;\n    }\n  }\n\n\n  class OneToManyField extends Field {\n    static get tag() {\n      return 'grid';\n    }\n\n    spanTemplate() {\n      return '';\n    }\n\n    innerHtml() {\n      return this.content;\n      let html = his.element.html();\n      if (html)\n        return html;\n      return '';\n    }\n\n  }\n\n\n  class ManyToManyField extends Field {\n    static get tag() {\n      return 'input foreignkey multiple';\n    }\n\n    spanTemplate() {\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}record.${this.field.name}|m2m }}</span>`;\n    }\n\n    get type() {\n      return 'hidden';\n    }\n  }\n\n\n  class BooleanField extends InputWidget {\n    spanTemplate() {\n      return `<span class=\"${this.readOnlyClass} bool-text\">\n  {{${this.spanPrefix}record.${this.field.name} ? '${Katrid.i18n.gettext('yes')}' : '${Katrid.i18n.gettext('no')}'}}\n  </span>`;\n    }\n\n    get type() {\n      return 'checkbox';\n    }\n\n    _td(cls) {\n      return super._td('bool-text ' + cls);\n    }\n\n    widgetTemplate() {\n      let html = super.widgetTemplate();\n      html = `<label class=\"checkbox\" ng-show=\"dataSource.changing\">${html}`;\n      if (this.field.help_text) {\n        html += this.field.help_text;\n      } else {\n        html += this.field.caption;\n      }\n      html += '<i></i></label>';\n      return html;\n    }\n\n    labelTemplate() {\n      if (this.field.help_text)\n        return super.labelTemplate();\n      return `<label for=\"${ this.id }\" class=\"form-label form-label-checkbox\"><span>${ this.caption }</span>&nbsp;</label>`;\n    }\n  }\n\n\n  class FileField extends InputWidget {\n    static get tag() {\n      return 'input file-reader';\n    }\n\n    get type() {\n      return 'file';\n    }\n  }\n\n\n  class ImageField extends FileField {\n    static get tag() {\n      return 'input file-reader accept=\"image/*\"';\n    }\n\n    spanTemplate() { return ''; }\n\n    widgetTemplate() {\n      let html = super.widgetTemplate();\n      let imgSrc = this.attrs.ngEmptyImage || (this.attrs.emptyImage && (\"'\" + this.attrs.emptyImage + \"'\")) || \"'/static/web/assets/img/no-image.png'\";\n      html = `<div class=\"image-box image-field\">\n  <img ng-src=\"{{ record.${this.field.name} || ${imgSrc} }}\" />\n    <div class=\"text-right image-box-buttons\">\n    <button class=\"btn btn-default\" type=\"button\" title=\"${Katrid.i18n.gettext('Change')}\" onclick=\"$(this).closest('.image-box').find('input').trigger('click')\"><i class=\"fa fa-pencil\"></i></button>\n    <button class=\"btn btn-default\" type=\"button\" title=\"${Katrid.i18n.gettext('Clear')}\" ng-click=\"record[this.field.name] = null\"><i class=\"fa fa-trash\"></i></button>\n    </div>\n      ${html}</div>`;\n      return html;\n    }\n  }\n\n\n  class PasswordField extends InputWidget {\n\n    get type() {\n      return 'password';\n    }\n\n    spanTemplate() {\n      return `<span class=\"form-field-readonly\">*******************</span>`;\n    }\n  }\n\n\n  class SortableField extends Field {\n    constructor(...args) {\n      super(...args);\n      this.col = null;\n    }\n    static get tag() {\n      return 'sortable-field';\n    }\n\n\n    get type() {\n      return 'hidden';\n    }\n\n    _td(cls) {\n      return `<td onclick=\"event.preventDefault();event.stopPropagation();\" class=\"list-column-sortable\">${ this.spanTemplate() }</td>`;\n    }\n\n    th() {\n      return `<th class=\"list-column-sortable\" name=\"${this.field.name}\"></th>`;\n    }\n\n    spanTemplate() {\n      return `<sortable-field id=\"${this.id}\" name=\"${this.field.name}\" ng-model=\"record.${this.field.name}\"/>`;\n    }\n  }\n\n  Object.assign(this.Katrid.UI.Widgets,\n    {\n      Field,\n      InputWidget,\n      StringField,\n      IntegerField,\n      SelectionField,\n      ForeignKey,\n      TextField,\n      DecimalField,\n      FloatField,\n      DateField,\n      DateTimeField,\n      TimeField,\n      BooleanField,\n      OneToManyField,\n      ManyToManyField,\n      FileField,\n      PasswordField,\n      ImageField,\n      SortableField,\n      XmlField,\n      input: InputWidget,\n      string: StringField,\n      integer: IntegerField,\n      selection: SelectionField,\n      text: TextField,\n      decimal: DecimalField,\n      float: FloatField,\n      file: FileField,\n      boolean: BooleanField,\n      password: PasswordField,\n      image: ImageField,\n      sortable: SortableField,\n    }\n  );\n})();\n","(function() {\n\n  let uiKatrid = Katrid.UI.uiKatrid;\n\n  uiKatrid.controller('TabsetController', [\n    '$scope',\n    function ($scope) {\n      const ctrl = this;\n      const tabs = (ctrl.tabs = ($scope.tabs = []));\n\n      ctrl.select = function (selectedTab) {\n        angular.forEach(tabs, function (tab) {\n          if (tab.active && (tab !== selectedTab)) {\n            tab.active = false;\n            tab.onDeselect();\n          }\n        });\n        selectedTab.active = true;\n        selectedTab.onSelect();\n      };\n\n      ctrl.addTab = function (tab) {\n        tabs.push(tab);\n        // we can't run the select function on the first tab\n        // since that would select it twice\n        if (tabs.length === 1) {\n          tab.active = true;\n        } else if (tab.active) {\n          ctrl.select(tab);\n        }\n      };\n\n      ctrl.removeTab = function (tab) {\n        const index = tabs.indexOf(tab);\n        //Select a new tab if the tab to be removed is selected and not destroyed\n        if (tab.active && (tabs.length > 1) && !destroyed) {\n          //If this is the last tab, select the previous tab. else, the next tab.\n          const newActiveIndex = index === (tabs.length - 1) ? index - 1 : index + 1;\n          ctrl.select(tabs[newActiveIndex]);\n        }\n        tabs.splice(index, 1);\n      };\n\n      var destroyed = undefined;\n      $scope.$on('$destroy', function () {\n        destroyed = true;\n      });\n    }\n  ]);\n\n  uiKatrid.directive('tabset', () =>\n    ({\n      restrict: 'EA',\n      transclude: true,\n      replace: true,\n      scope: {\n        type: '@'\n      },\n      controller: 'TabsetController',\n      template: `<div class=\"tabset\"><div class=\\\"clearfix\\\"></div>\\n` +\n      \"  <div class=\\\"nav nav-{{type || 'tabs'}}\\\" ng-class=\\\"{'nav-stacked': vertical, 'nav-justified': justified}\\\" ng-transclude></div>\\n\" +\n      \"  <div class=\\\"tab-content\\\">\\n\" +\n      \"    <div class=\\\"tab-pane\\\" \\n\" +\n      \"         ng-repeat=\\\"tab in tabs\\\" \\n\" +\n      `         ng-class=\"{active: tab.active}\">` +\n      `<div class=\"col-12\"><div class=\"row\" tab-content-transclude=\"tab\"></div></div>` +\n      \"    </div>\\n\" +\n      \"  </div>\\n\" +\n      \"</div>\\n\",\n      link(scope, element, attrs) {\n        scope.vertical = angular.isDefined(attrs.vertical) ? scope.$parent.$eval(attrs.vertical) : false;\n        return scope.justified = angular.isDefined(attrs.justified) ? scope.$parent.$eval(attrs.justified) : false;\n      }\n    })\n  );\n\n\n  uiKatrid.directive('tab', [\n    '$parse',\n    $parse =>\n      ({\n        require: '^tabset',\n        restrict: 'EA',\n        replace: true,\n        template: `<a class=\"nav-item nav-link\" href ng-click=\"select()\" tab-heading-transclude ng-class=\"{active: active, disabled: disabled}\">{{heading}}</a>`,\n        transclude: true,\n        scope: {\n          active: '=?',\n          heading: '@',\n          onSelect: '&select',\n          onDeselect: '&deselect'\n        },\n        controller() {\n          //Empty controller so other directives can require being 'under' a tab\n        },\n        compile(elm, attrs, transclude) {\n          return function (scope, elm, attrs, tabsetCtrl) {\n            scope.$watch('active', function (active) {\n              if (active) {\n                tabsetCtrl.select(scope);\n              }\n            });\n            scope.disabled = false;\n            if (attrs.disabled) {\n              scope.$parent.$watch($parse(attrs.disabled), function (value) {\n                scope.disabled = !!value;\n              });\n            }\n\n            scope.select = function () {\n              if (!scope.disabled) {\n                scope.active = true;\n              }\n            };\n\n            tabsetCtrl.addTab(scope);\n            scope.$on('$destroy', function () {\n              tabsetCtrl.removeTab(scope);\n            });\n            //We need to transclude later, once the content container is ready.\n            //when this link happens, we're inside a tab heading.\n            scope.$transcludeFn = transclude;\n          };\n        }\n\n      })\n\n  ]);\n\n  uiKatrid.directive('tabHeadingTransclude', [() =>\n    ({\n      restrict: 'A',\n      require: '^tab',\n      link(scope, elm, attrs, tabCtrl) {\n        scope.$watch('headingElement', function (heading) {\n          if (heading) {\n            elm.html('');\n            elm.append(heading);\n          }\n        });\n      }\n    })\n\n  ]);\n\n\n  uiKatrid.directive('tabContentTransclude', function () {\n\n    const isTabHeading = node => node.tagName && (node.hasAttribute('tab-heading') || node.hasAttribute('data-tab-heading') || (node.tagName.toLowerCase() === 'tab-heading') || (node.tagName.toLowerCase() === 'data-tab-heading'));\n\n    return {\n      restrict: 'A',\n      require: '^tabset',\n      link(scope, elm, attrs) {\n        const tab = scope.$eval(attrs.tabContentTransclude);\n        //Now our tab is ready to be transcluded: both the tab heading area\n        //and the tab content area are loaded.  Transclude 'em both.\n        tab.$transcludeFn(tab.$parent, function (contents) {\n          angular.forEach(contents, function (node) {\n            if (isTabHeading(node)) {\n              //Let tabHeadingTransclude know.\n              tab.headingElement = node;\n            } else {\n              elm.append(node);\n            }\n          });\n        });\n      }\n\n    };\n  });\n\n}).call(this);\n","(function () {\n  let uiKatrid = Katrid.UI.uiKatrid;\n\n  uiKatrid.directive('datePicker', ['$filter', $filter => ({\n    restrict: 'A',\n    require: '?ngModel',\n    link(scope, el, attrs, controller) {\n      // TODO localize the date format\n      let mask = '99/99/9999';\n      let format = attrs.datePicker || 'L';\n      if (format === 'L LT')\n        mask = '99/99/9999 99:99';\n      el.inputmask({\n        mask,\n        insertMode: false,\n      });\n      let calendar = $(el.parent()).datetimepicker({\n        useCurrent: false,\n        format,\n        icons: {\n          time: 'fa fa-clock',\n        },\n      })\n      .on('dp.change', function (evt) {\n        calendar.datetimepicker('hide');\n      })\n      .on('dp.hide', function (evt) {\n        controller.$setDirty();\n        controller.$setViewValue(el.val());\n      });\n      el.on('focus', () => el.select());\n\n      controller.$render = function () {\n        if (controller.$modelValue) {\n          calendar.datetimepicker('date', moment.utc(controller.$modelValue));\n        } else\n          el.val('');\n      };\n\n      el.on('blur', () => {\n        let v = moment(el.val(), format);\n        if (v.isValid())\n          controller.$modelValue = v.format('YYYY-MM-DD');\n        else\n          controller.$modelValue = null;\n      });\n\n      controller.$parsers.push(value => {\n        let v = moment(el.val(), format);\n        if (v.isValid()) {\n          if (format === 'L')\n            return v.format('YYYY-MM-DD');\n          else if (format === 'L LT')\n            return v.format('YYYY-MM-DD HH:mm');\n        }\n        return null;\n      });\n\n      // el.on('click', () => setTimeout(() => $(el).select()));\n      // controller.$formatters.push(function (value) {\n      //   if (value) {\n      //     const dt = new Date(value);\n      //     // calendar.datepicker('setDate', dt);\n      //     return $filter('date')(value, dateFmt);\n      //   }\n      //   return value;\n      // });\n\n      // controller.$render = function () {\n      //   if (_.isDate(controller.$viewValue)) {\n      //     const v = $filter('date')(controller.$viewValue, dateFmt);\n      //     return el.val(v);\n      //   } else {\n      //     return el.val(controller.$viewValue);\n      //   }\n      // };\n\n    }\n  })]);\n\n  uiKatrid.directive('timePicker', ['$filter', $filter => ({\n    restrict: 'A',\n    require: '?ngModel',\n    link(scope, el, attrs, controller) {\n      // TODO localize the time format\n      let mask = '99:99';\n      el.inputmask({\n        mask,\n        insertMode: false,\n      });\n      el.on('focus', () => el.select());\n\n    }\n  })]);\n\n})();\n","(function () {\n\n  class Comments {\n    constructor(scope) {\n      this.scope = scope;\n      this.model = this.scope.$parent.model;\n\n      this.scope.$parent.$watch('recordId', key => {\n        this.items = null;\n        this.scope.loading = Katrid.i18n.gettext('Loading...');\n        clearTimeout(this._pendingOperation);\n        this._pendingOperation = setTimeout(() => {\n          this._pendingOperation = null;\n          this.masterChanged(key);\n          return this.scope.$apply(() => {\n            return this.scope.loading = null;\n          });\n        }\n        , 1000);\n      });\n\n      this.items = [];\n    }\n\n    async masterChanged(key) {\n      if (key) {\n        const svc = new Katrid.Services.Model('mail.message');\n        if (this.scope.$parent.record)\n        return svc.post('get_messages', { args: [this.scope.$parent.record.messages] })\n        .then(res => {\n          this.items = res;\n          this.scope.$apply();\n        });\n      }\n    }\n\n    async _sendMesage(msg, attachments) {\n      if (attachments)\n        attachments = attachments.map((obj) => obj.id);\n      let msgs = await this.model.post('post_message', { args: [[this.scope.$parent.recordId]], kwargs: { content: msg, content_subtype: 'html', format: true, attachments: attachments } });\n      this.scope.message = '';\n      this.items = msgs.concat(this.items);\n      this.scope.$apply();\n      this.scope.files = null;\n      this.scope.hideEditor();\n    }\n\n    postMessage(msg) {\n      if (this.scope.files.length) {\n        let files = [];\n        for (let f of this.scope.files) files.push(f.file);\n        var me = this;\n        Katrid.Services.Attachments.upload({files: files}, this.scope.$parent)\n        .done((res) => {\n          me._sendMesage(msg, res);\n        });\n      } else\n        this._sendMesage(msg);\n    }\n  }\n\n\n  Katrid.UI.uiKatrid.directive('comments', () =>\n    ({\n      restrict: 'E',\n      scope: {},\n      replace: true,\n      template: '<div class=\"content\"><div class=\"comments\"><mail-comments/></div></div>',\n      link(scope, element, attrs) {\n        if (element.closest('.modal-dialog').length)\n          element.remove();\n        else\n          $(element).closest('.form-view[ng-form=form]').children('.content:first').append(element);\n      }\n    })\n  );\n\n  Katrid.UI.uiKatrid.directive('mailComments', () =>\n    ({\n      restrict: 'E',\n      controller: ['$scope', ($scope) => {\n        $scope.comments = new Comments($scope);\n        $scope.files = [];\n\n        $scope.showEditor = () => {\n          $($scope.el).find('#mail-editor').show();\n          $($scope.el).find('#mail-msgEditor').focus();\n        };\n\n        $scope.hideEditor = () => {\n          $($scope.el).find('#mail-editor').hide();\n        };\n\n        $scope.attachFile = (file) => {\n          for (let f of file.files)\n            $scope.files.push({\n              name: f.name,\n              type: f.type,\n              file: f\n            });\n          $scope.$apply();\n        };\n\n        $scope.deleteFile = (idx) => {\n          $scope.files.splice(idx, 1);\n        }\n      }],\n      replace: true,\n      link(scope, element, attrs) {\n        scope.el = element;\n      },\n\n      template() {\n        return `\n  <div class=\"container\">\n          <h3>${Katrid.i18n.gettext('Comments')}</h3>\n          <div class=\"form-group\">\n          <button class=\"btn btn-outline-secondary\" ng-click=\"showEditor();\">${Katrid.i18n.gettext('New message')}</button>\n          <button class=\"btn btn-outline-secondary\">${Katrid.i18n.gettext('Log an internal note')}</button>\n          </div>\n          <div id=\"mail-editor\" style=\"display: none;\">\n            <div class=\"form-group\">\n              <textarea id=\"mail-msgEditor\" class=\"form-control\" ng-model=\"message\"></textarea>\n            </div>\n            <div class=\"form-group\">\n              <button class=\"btn btn-default\" type=\"button\" onclick=\"$(this).next().click()\"><i class=\"fa fa-paperclip\"></i></button>\n              <input class=\"input-file-hidden\" type=\"file\" multiple onchange=\"angular.element(this).scope().attachFile(this)\">\n            </div>\n            <div class=\"form-group\" ng-show=\"files.length\">\n              <ul class=\"list-inline attachments-area\">\n                <li ng-repeat=\"file in files\" ng-click=\"deleteFile($index)\" title=\"${ Katrid.i18n.gettext('Delete this attachment') }\">{{ file.name }}</li>\n              </ul>\n            </div>\n            <div class=\"from-group\">\n              <button class=\"btn btn-primary\" ng-click=\"comments.postMessage(message)\">${Katrid.i18n.gettext('Send')}</button>\n            </div>\n          </div>\n  \n          <hr>\n  \n          <div ng-show=\"loading\">{{ loading }}</div>\n          <div class=\"comment media col-sm-12\" ng-repeat=\"comment in comments.items\">\n            <div class=\"media-left\">\n              <img src=\"/static/web/assets/img/avatar.png\" class=\"avatar rounded\">\n            </div>\n            <div class=\"media-body\">\n              <strong>{{ ::comment.author_name }}</strong> - <span class=\"timestamp text-muted\" title=\"$\\{ ::comment.date_time|moment:'LLLL'}\"> {{::comment.date_time|moment}}</span>\n              <div class=\"clearfix\"></div>\n              <div class=\"form-group\">\n                {{::comment.content}}\n              </div>\n              <div class=\"form-group\" ng-if=\"comment.attachments\">\n                <ul class=\"list-inline\">\n                  <li ng-repeat=\"file in comment.attachments\">\n                    {{file.mimetype}}\n                    <div class=\"comment-preview-image\" ng-if=\"file.mimetype.startsWith('image')\" style=\"width: 16%;height:100px;background-image:url('/web/content/$\\{ ::file.id }')\"></div>\n                    <a href=\"/web/content/$\\{ ::file.id }/?download\">{{ ::file.name }}</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n    </div>`;\n      }\n    })\n  );\n\n\n  class MailFollowers {}\n\n\n  class MailComments extends Katrid.UI.Widgets.Widget {\n    static initClass() {\n      this.prototype.tag = 'mail-comments';\n    }\n\n    spanTemplate(scope, el, attrs, field) {\n      return '';\n    }\n  }\n  MailComments.initClass();\n\n\n  Katrid.UI.Widgets.MailComments = MailComments;\n\n})();\n","(function () {\n  class BaseTemplate {\n\n    getSettingsDropdown(viewType) {\n      if (viewType === 'form') {\n        return `<ul class=\"dropdown-menu pull-right\">\n    <li>\n      <a href=\"javascript:void(0);\" ng-click=\"action.showDefaultValueDialog()\">${ Katrid.i18n.gettext('Set Default') }</a>\n    </li>\n  </ul>`;\n      }\n    }\n\n\n    getSetDefaultValueDialog() {\n      return `\\\n  <div class=\"modal fade\" id=\"set-default-value-dialog\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"${ Katrid.i18n.gettext('Close') }\"><span aria-hidden=\"true\">&times;</span></button>\n          <h4 class=\"modal-title\">${ Katrid.i18n.gettext('Set Default') }</h4>\n        </div>\n        <div class=\"modal-body\">\n          <select class=\"form-control\" id=\"id-set-default-value\">\n            <option ng-repeat=\"field in view.fields\">{{ field.caption }} = {{ record[field.name] }}</option>\n          </select>\n          <div class=\"radio\">\n            <label><input type=\"radio\" name=\"public\">${ Katrid.i18n.gettext('Only me') }</label>\n          </div>\n          <div class=\"radio\">\n            <label><input type=\"radio\" name=\"public\">${ Katrid.i18n.gettext('All users') }</label>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\">${ Katrid.i18n.gettext('Save') }</button>\n          <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">${ Katrid.i18n.gettext('Cancel') }</button>\n        </div>\n      </div>\n    </div>\n  </div>\\\n  `;\n    }\n\n    static get cssListClass() {\n      return 'table table-striped table-bordered table-condensed table-hover display responsive nowrap dataTable no-footer dtr-column';\n    }\n\n    renderList(scope, element, attrs, rowClick, parentDataSource, showSelector=true) {\n      let ths = '<th ng-show=\"dataSource.groups.length\"></th>';\n      let tfoot = false;\n      let totals = [];\n      let cols = `<td ng-show=\"dataSource.groups.length\" class=\"group-header\">\n  <div ng-show=\"record._group\">\n  <span class=\"fa fa-fw fa-caret-right\"\n    ng-class=\"{'fa-caret-down': record._group.expanded, 'fa-caret-right': record._group.collapsed}\"></span>\n    {{::record._group.__str__}} ({{::record._group.count }})</div></td>`;\n      if (showSelector) {\n        ths += `<th class=\"list-record-selector\"><input type=\"checkbox\" ng-click=\"action.selectToggle($event.currentTarget)\" onclick=\"$(this).closest('table').find('td.list-record-selector input').prop('checked', $(this).prop('checked'))\"></th>`;\n        cols += `<td class=\"list-record-selector\" onclick=\"event.stopPropagation();\"><input title=\"teste\" type=\"checkbox\" ng-click=\"action.selectToggle($event.currentTarget)\" onclick=\"if (!$(this).prop('checked')) $(this).closest('table').find('th.list-record-selector input').prop('checked', false)\"></td>`;\n      }\n\n      for (let col of Array.from(element.children())) {\n        let colHtml = col.outerHTML;\n        col = $(col);\n        let name = col.attr('name');\n        if (!name) {\n          cols += `<td>${col.html()}</td>`;\n          ths += \"<th><span>${col.attr('label')}</span></th>\";\n          continue;\n        }\n\n        let total = col.attr('total');\n        if (total) {\n          totals.push([name, total]);\n          tfoot = true;\n        } else totals.push(total);\n\n        name = col.attr('name');\n        const fieldInfo = scope.view.fields[name];\n\n        if ((col.attr('visible') === 'False') || (fieldInfo.visible === false))\n          continue;\n\n        // if (fieldInfo.choices) {\n        //   fieldInfo._listChoices = {};\n        //   for (let choice of Array.from(fieldInfo.choices)) {\n        //     fieldInfo._listChoices[choice[0]] = choice[1];\n        //   }\n        // }\n\n        let _widget = fieldInfo.createWidget(col.attr('widget'), scope, col, col);\n        _widget.inList = true;\n        _widget.inplaceEditor = Boolean(scope.inline);\n        ths += _widget.th(col.attr('label'));\n\n        cols += _widget.td(scope.inline, colHtml, col);\n      }\n      if (parentDataSource) {\n        ths += '<th class=\"list-column-delete\" ng-show=\"parent.dataSource.changing && !dataSource.readonly\">';\n        cols += '<td class=\"list-column-delete\" ng-show=\"parent.dataSource.changing && !dataSource.readonly\" ng-click=\"removeItem($index);$event.stopPropagation();\"><i class=\"fa fa-trash-o\"></i></td>';\n      }\n      if ((rowClick == null)) {\n        rowClick = 'action.listRowClick($index, row, $event)';\n      }\n\n      if (tfoot)\n        tfoot = `<tfoot><tr>${ totals.map(t => (t ? `<td class=\"text-right\"><strong><ng-total field=\"${ t[0] }\" type=\"${ t[1] }\"></ng-total></ strong></td>` : '<td class=\"borderless\"></td>')).join('') }</tr></tfoot>`;\n      else\n        tfoot = '';\n      let gridClass = ' grid';\n      if (scope.inline)\n        gridClass += ' inline-editor';\n      return `<table class=\"${this.constructor.cssListClass}${gridClass}\">\n  <thead><tr>${ths}</tr></thead>\n  <tbody>\n  <tr ng-repeat=\"record in records | limitTo:totalDisplayed\" ng-click=\"${rowClick}\" ng-class=\"{'group-header': record._hasGroup, 'form-data-changing': (dataSource.changing && dataSource.recordIndex === $index), 'form-data-readonly': !(dataSource.changing && dataSource.recordIndex === $index)}\" ng-form=\"grid-row-form-{{$index}}\" id=\"grid-row-form-{{$index}}\">${cols}</tr>\n  </tbody>\n  ${ tfoot }\n  </table>\n  <a href=\"javascript:void(0)\" ng-show=\"records.length > totalDisplayed\" ng-click=\"totalDisplayed = totalDisplayed + 1000\">${ Katrid.i18n.gettext('View more...') }</a>\n  `;\n    }\n\n    renderGrid(scope, element, attrs, rowClick) {\n      const tbl = this.renderList(scope, element, attrs, rowClick, true, false);\n      let buttons;\n      if (attrs.inline == 'inline')\n        buttons = `\n<button class=\"btn btn-xs btn-info\" ng-click=\"addItem()\" ng-show=\"parent.dataSource.changing && !dataSource.changing\" type=\"button\">${Katrid.i18n.gettext('Add')}</button>\n<button class=\"btn btn-xs btn-info\" ng-click=\"addItem()\" ng-show=\"dataSource.changing\" type=\"button\">${Katrid.i18n.gettext('Save')}</button>\n<button class=\"btn btn-xs btn-info\" ng-click=\"cancelChanges()\" ng-show=\"dataSource.changing\" type=\"button\">${Katrid.i18n.gettext('Cancel')}</button>\n`;\n      else\n        buttons = `\n<button class=\"btn btn-xs btn-info\" ng-click=\"addItem()\" ng-show=\"parent.dataSource.changing\" type=\"button\">${Katrid.i18n.gettext('Add')}</button>\n<button class=\"btn btn-xs btn-outline-secondary float-right\" ng-click=\"pasteData()\" ng-show=\"parent.dataSource.changing\" type=\"button\" title=\"${Katrid.i18n.gettext('Paste')}\">\n<i class=\"fa fa-clipboard\"></i>\n</button>\n`;\n      return `<div style=\"overflow-x: auto;\"><div ng-show=\"!dataSource.readonly\">\n  ${buttons}\n  </div><div class=\"row inline-input-dialog\" ng-show=\"dataSource.changing\"/>${tbl}</div>`;\n    }\n\n    windowDialog(scope) {\n      console.log('window dialog', scope);\n      return `\\\n  <div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n          <h4 class=\"modal-title\" id=\"myModalLabel\">\n          {{dialogTitle}}\n          {{action.info.display_name}}</h4>\n        </div>\n        <div class=\"modal-body\">\n    <div class=\"modal-dialog-body\" ng-class=\"{'form-data-changing': dataSource.changing}\"></div>\n  <div class=\"clearfix\"></div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" type=\"button\" ng-click=\"dataSource.saveAndClose()\" ng-show=\"dataSource.changing\">${Katrid.i18n.gettext('Save')}</button>\n          <button type=\"button\" class=\"btn btn-default\" type=\"button\" data-dismiss=\"modal\" ng-show=\"dataSource.changing\">${Katrid.i18n.gettext('Cancel')}</button>\n          <button type=\"button\" class=\"btn btn-default\" type=\"button\" data-dismiss=\"modal\" ng-show=\"!dataSource.changing\">${Katrid.i18n.gettext('Close')}</button>\n        </div>\n      </div>\n    </div>\n  </div>\\\n  `;\n    }\n\n    renderReportDialog(scope) {\n      return `<div ng-controller=\"ReportController\">\n  <form id=\"report-form\" method=\"get\" action=\"/web/reports/report/\">\n    <div class=\"data-heading panel panel-default\">\n      <div class=\"panel-body\">\n      <h2>{{ report.name }}</h3>\n      <div class=\"toolbar\">\n        <button class=\"btn btn-primary\" type=\"button\" ng-click=\"report.preview()\"><span class=\"fa fa-print fa-fw\"></span> ${ Katrid.i18n.gettext('Preview') }</button>\n  \n        <div class=\"btn-group\">\n          <button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                  aria-expanded=\"false\">${ Katrid.i18n.gettext('Export')  } <span class=\"caret\"></span></button>\n          <ul class=\"dropdown-menu\">\n            <li><a ng-click=\"Katrid.Reports.Reports.preview()\">PDF</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('docx')\">Word</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('xlsx')\">Excel</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('pptx')\">PowerPoint</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('csv')\">CSV</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('txt')\">${ Katrid.i18n.gettext('Text File') }</a></li>\n          </ul>\n        </div>\n  \n        <div class=\"btn-group\">\n          <button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                  aria-expanded=\"false\">${ Katrid.i18n.gettext('My reports')  } <span class=\"caret\"></span></button>\n          <ul class=\"dropdown-menu\">\n            <li><a ng-click=\"Katrid.Reports.Reports.preview()\">PDF</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('docx')\">Word</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('xlsx')\">Excel</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('pptx')\">PowerPoint</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('csv')\">CSV</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('txt')\">${ Katrid.i18n.gettext('Text File') }</a></li>\n          </ul>\n        </div>\n  \n      <div class=\"pull-right btn-group\">\n        <button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                aria-expanded=\"false\"><i class=\"fa fa-gear fa-fw\"></i></button>\n        <ul class=\"dropdown-menu\">\n          <li><a href=\"javascript:void(0)\" ng-click=\"report.saveDialog()\">${ Katrid.i18n.gettext('Save') }</a></li>\n          <li><a href=\"#\">${ Katrid.i18n.gettext('Load') }</a></li>\n        </ul>\n      </div>\n  \n      </div>\n    </div>\n    </div>\n    <div class=\"col-sm-12\">\n      <table class=\"col-sm-12\" style=\"margin-top: 20px; display:none;\">\n        <tr>\n          <td colspan=\"2\" style=\"padding-top: 8px;\">\n            <label>${ Katrid.i18n.gettext('My reports') }</label>\n  \n            <select class=\"form-control\" ng-change=\"action.userReportChanged(action.userReport.id)\" ng-model=\"action.userReport.id\">\n                <option value=\"\"></option>\n                <option ng-repeat=\"rep in userReports\" value=\"{{ rep.id }}\">{{ rep.name }}</option>\n            </select>\n          </td>\n        </tr>\n      </table>\n    </div>\n  <div id=\"report-params\">\n  <div id=\"params-fields\" class=\"col-sm-12 form-group\">\n    <div class=\"checkbox\"><label><input type=\"checkbox\" ng-model=\"paramsAdvancedOptions\"> ${ Katrid.i18n.gettext('Advanced options') }</label></div>\n    <div ng-show=\"paramsAdvancedOptions\">\n      <div class=\"form-group\">\n        <label>${ Katrid.i18n.gettext('Printable Fields') }</label>\n        <input type=\"hidden\" id=\"report-id-fields\"/>\n      </div>\n      <div class=\"form-group\">\n        <label>${ Katrid.i18n.gettext('Totalizing Fields') }</label>\n        <input type=\"hidden\" id=\"report-id-totals\"/>\n      </div>\n    </div>\n  </div>\n  \n  <div id=\"params-sorting\" class=\"col-sm-12 form-group\">\n    <label class=\"control-label\">${ Katrid.i18n.gettext('Sorting') }</label>\n    <select multiple id=\"report-id-sorting\"></select>\n  </div>\n  \n  <div id=\"params-grouping\" class=\"col-sm-12 form-group\">\n    <label class=\"control-label\">${ Katrid.i18n.gettext('Grouping') }</label>\n    <select multiple id=\"report-id-grouping\"></select>\n  </div>\n  \n  <div class=\"clearfix\"></div>\n  \n  </div>\n    <hr>\n      <table class=\"col-sm-12\">\n        <tr>\n          <td class=\"col-sm-4\">\n            <select class=\"form-control\" ng-model=\"newParam\">\n              <option value=\"\">--- ${ Katrid.i18n.gettext('FILTERS') } ---</option>\n              <option ng-repeat=\"field in report.fields\" value=\"{{ field.name }}\">{{ field.label }}</option>\n            </select>\n          </td>\n          <td class=\"col-sm-8\">\n            <button\n                class=\"btn btn-default\" type=\"button\"\n                ng-click=\"report.addParam(newParam)\">\n              <i class=\"fa fa-plus fa-fw\"></i> ${ Katrid.i18n.gettext('Add Parameter') }\n            </button>\n          </td>\n        </tr>\n      </table>\n  <div class=\"clearfix\"></div>\n  <hr>\n  <div id=\"params-params\">\n    <div ng-repeat=\"param in report.params\" ng-controller=\"ReportParamController\" class=\"row form-group\">\n      <div class=\"col-sm-12\">\n      <div class=\"col-sm-4\">\n        <label class=\"control-label\">{{param.label}}</label>\n        <select ng-model=\"param.operation\" class=\"form-control\" ng-change=\"param.setOperation(param.operation)\">\n          <option ng-repeat=\"op in param.operations\" value=\"{{op.id}}\">{{op.text}}</option>\n        </select>\n      </div>\n      <div class=\"col-sm-8\" id=\"param-widget\"></div>\n      </div>\n    </div>\n  </div>\n  </form>\n  </div>\\\n  `;\n    }\n\n  }\n\n\n  Katrid.UI.utils = {\n    BaseTemplate,\n    Templates: new BaseTemplate()\n  };\n\n})();\n","(function() {\n\n  class NumPad {\n    constructor($compile) {\n      this.restrict = 'A';\n      this.require = 'ngModel';\n      this.scope = {};\n      this.$compile = $compile;\n    }\n    link(scope, el, attrs, ngModel) {\n\n      el.bind('click', () => {\n        console.log('numpad click');\n        let templ = this.$compile(Katrid.app.getTemplate('ui.numpad.pug'))(scope);\n        scope.val = parseFloat(ngModel.$modelValue || 0);\n        scope.$apply();\n        let modal = $(templ).modal();\n        modal.on('hidden.bs.modal', function() {\n          $(this).remove();\n        });\n\n        let comma = false;\n        let frac = '';\n\n        scope.done = () => {\n          scope.$parent.record[ngModel.$name] = scope.val.toString();\n          if (attrs.ngChange)\n            scope.$parent.$eval(attrs.ngChange);\n          ngModel.$setDirty();\n          modal.modal('hide');\n        };\n\n        scope.cancel = () => {\n          modal.modal('hide');\n        };\n\n        scope.buttonClick = (num) => {\n          let s = scope.val.toFixed(2).toString().replace('.', '');\n          if (num === 'bs') {\n            s = s.substr(0, s.length-1);\n            if (s)\n              scope.val = parseFloat(s) / 100;\n            else\n              scope.val = 0;\n          }\n          else if (num === '0')\n            scope.val *= 10;\n          else\n            scope.val = parseFloat(s + num) / 100;\n        }\n      });\n\n\n    }\n  }\n\n  Katrid.UI.uiKatrid.directive('numpadInput', ['$compile', NumPad]);\n\n})();\n","(function() {\n\n  Katrid.UI.uiKatrid\n  .directive('codeEditor', [function () {\n    return {\n      restrict: 'EA',\n      require: 'ngModel',\n      link: function (scope, elm, attrs, ngModel) {\n\n        let editor;\n\n        require.config({\n          paths: {\n            vs: '/static/web/monaco/min/vs',\n          }\n        });\n\n\n        console.log('set language', attrs.language);\n        require(['vs/editor/editor.main'], function () {\n          editor = monaco.editor.create(elm[0], {\n            value: '',\n            language: attrs.language || 'xml',\n            minimap: {\n              enabled: false,\n            },\n            automaticLayout: true,\n          });\n\n          editor.getModel().onDidChangeContent(evt => {\n            ngModel.$setViewValue(editor.getValue());\n          });\n\n          ngModel.$render = function () {\n            setTimeout(() => {\n              editor.setValue(ngModel.$viewValue);\n            }, 300);\n          };\n\n        });\n\n      }\n    };\n  }]);\n\n})();\n","(function () {\n\n  class Alerts {\n    static success(msg) {\n      return toastr['success'](msg);\n    }\n\n    static warn(msg) {\n      return toastr['warning'](msg);\n    }\n\n    static info(msg) {\n      return toastr['info'](msg);\n    }\n\n    static error(msg) {\n      return toastr['error'](msg);\n    }\n  }\n\n  class WaitDialog {\n    static show() {\n      $('#loading-msg').show();\n    }\n\n    static hide() {\n      $('#loading-msg').hide();\n    }\n  }\n\n  class Dialog extends Katrid.UI.Views.BaseView {\n    constructor(scope, options) {\n      super(scope);\n      this.templateUrl = 'dialog.base';\n      this.scope.isDialog = true;\n    }\n\n    render() {\n      return $(Katrid.app.getTemplate(this.templateUrl).replace('<!-- replace-content -->', this.content));\n    }\n\n    show() {\n      if (!this.el) {\n        this.el = $(this.render());\n        this.root = this.el.find('.modal-dialog-body');\n        this.el.find('form').first().addClass('row');\n        this.$compile(this.el)(this.scope);\n      }\n      this.el.modal('show')\n      .on('shown.bs.modal', () => Katrid.UI.uiKatrid.setFocus(this.el.find('.form-field').first()));\n      return this.el;\n    }\n}\n\n  class Window extends Dialog {\n    constructor(options) {\n      super(options.scope, options);\n      this.scope._ = this.scope.$parent._;\n      this.scope.parentAction = this.scope.action;\n      this.scope.views = {\n        form: options.view\n      };\n      this.dialogTitle = (options && options.title) || Katrid.i18n.gettext('Create: ');\n      this.scope.view = this.view = options.view;\n      this.scope.model = options.model;\n      this.options = options;\n    }\n\n    async createNew(config) {\n      let field = this.options.field;\n\n      this.scope.$setDirty = (field) => {\n        const control = this.scope.form[field];\n        if (control) {\n          control.$setDirty();\n        }\n      };\n\n      let view = this.scope.view;\n      let elScope = this.scope;\n      elScope.views = { form: view };\n      elScope.isDialog = true;\n      let caption = this.dialogTitle;\n\n      this.action = this.scope.action = {\n        scope: this.scope,\n        context: {},\n      };\n      let dataSource = this.action.dataSource = this.scope.dataSource = new Katrid.Data.DataSource(this.scope, this.action);\n\n      let formView = new Katrid.UI.Views.FormView(\n        this.action, this.view, { dialog: true, templateUrl: 'view.form.dialog.modal.jinja2' }\n      );\n      let el = formView.render();\n      let form = el.find('form:first');\n      elScope.root = form;\n      this.action.$element = form;\n\n      form.addClass('row');\n      el.modal('show').on('shown.bs.modal', () => Katrid.UI.uiKatrid.setFocus(el.find('.form-field').first()))\n      .on('hidden.bs.modal', function() {\n        $(this).modal('dispose').remove();\n      });\n\n      this.scope.form = form.controller('form');\n      this.scope.formElement = form;\n      if (field) {\n        let evt = this.scope.$on('saveAndClose', async (event, targetScope, data) => {\n          if (this.scope === targetScope) {\n            if (_.isArray(data) && data.length) {\n              data = await this.scope.$parent.model.getFieldChoices(field.name, null, {ids: data});\n              let vals = {};\n              let res = data.items[0];\n              vals[field.name] = res;\n              this.scope.$parent.action.dataSource.setValues(vals);\n              if (this.options.sel)\n                this.options.sel.select2('data', { id: res[0], text: res[1] });\n            }\n            // unhook event\n            evt();\n          }\n        });\n      }\n\n      return new Promise(async (resolve, reject) => {\n        setTimeout(async () => {\n          // check if there's a creation name\n          let kwargs, defaultValues;\n          if (config) {\n            if (config.creationName)\n              kwargs = { creation_name: name };\n            if (config.defaultValues)\n              defaultValues = config.defaultValues;\n          }\n          await dataSource.insert(true, defaultValues, kwargs);\n          this.scope.$apply();\n          resolve(el);\n        });\n\n      });\n\n    };\n  }\n\n  Katrid.UI.Dialogs = {\n    Alerts,\n    WaitDialog,\n    Dialog,\n    Window\n  };\n\n})();\n","(function () {\n\n\n  class Component {\n    constructor(el, config) {\n      this.config = config;\n      this.create();\n      this.render();\n      this.$el = $(el);\n    }\n\n    create() {\n\n    }\n\n    render() {\n\n    }\n  }\n\n\n  Katrid.UI.uiKatrid.directive(\"fkAutocomplete\", ['$controller', ($controller) => ({\n    restrict: \"A\",\n    require: \"ngModel\",\n    link(scope, el, attrs, controller) {\n      const field = scope.view.fields[attrs.name];\n\n      $(el).autocomplete({\n        source: (req, res) => {\n          // evaluate domain attribute\n          let domain = field.domain;\n          if (domain && _.isString(domain))\n            domain = scope.$eval(domain);\n\n          let data = {\n            args: [req.term],\n            kwargs: {\n              domain: domain,\n              name_fields: attrs.nameFields && attrs.nameFields.split(\",\") || null\n            }\n          };\n          let svc;\n          if (scope.model)\n            svc = scope.model.getFieldChoices(field.name, req.term, data.kwargs);\n          else\n            svc = new Katrid.Services.Model(field.model).searchName(data);\n          svc.then(r => {\n            let items = [];\n            for (let obj of r.items)\n              items.push({ value: obj[0], label: obj[1] });\n            res(items);\n          });\n\n        },\n        minLength: 1,\n        select: (event, ui) => {\n          el.val(ui.item.label);\n          scope.$apply(() => {\n            el.data('value', [ui.item.value, ui.item.label]);\n            controller.$setDirty();\n            return false;\n          });\n          return false;\n      }\n      });\n\n      controller.$parsers.push(value => {\n        value = el.data('value');\n        return value;\n      });\n\n      controller.$formatters.push(value => {\n        console.log('formatter', value);\n        if (_.isArray(value))\n          return value[1];\n        return value;\n      });\n\n    }\n  })]);\n\n\n  Katrid.UI.uiKatrid.directive(\"foreignkey\", ['$compile', '$controller', ($compile, $controller) => ({\n    restrict: \"A\",\n    require: \"ngModel\",\n    link(scope, el, attrs, controller) {\n      let serviceName;\n      let sel = el;\n      let _shown = false;\n      const field = scope.view.fields[attrs.name];\n      el.addClass(\"form-field\");\n      if (attrs.serviceName) serviceName = attrs;\n      else if (scope.action && scope.action.model) serviceName = scope.action.model.name;\n      else serviceName = attrs.foreignkey;\n      const newItem = function () {\n      };\n      const newEditItem = function () {\n      };\n      let _timeout = null;\n\n      let config = {\n        allowClear: true,\n        query(query) {\n          // evaluate domain attribute\n          let domain = field.domain;\n          if (domain && _.isString(domain))\n            domain = scope.$eval(domain);\n\n          // make params\n          let data = {\n            args: [query.term],\n            kwargs: {\n              count: 1,\n              page: query.page,\n              domain: domain,\n              name_fields: attrs.nameFields && attrs.nameFields.split(\",\") || null\n            }\n          };\n          const f = () => {\n            let svc;\n            if (scope.model) svc = scope.model.getFieldChoices(field.name, query.term, data.kwargs);\n            else svc = new Katrid.Services.Model(field.model).searchName(data);\n            svc.then(res => {\n              let data = res.items;\n              const r = data.map(item => ({\n                id: item[0],\n                text: item[1]\n              }));\n              const more = query.page * Katrid.settings.services.choicesPageLimit < res.count;\n              if (!multiple && !more) {\n                let msg;\n                const v = sel.data(\"select2\").search.val();\n                if ((attrs.allowCreate && attrs.allowCreate !== \"false\" || attrs.allowCreate == null) && v) {\n                  msg = Katrid.i18n.gettext('Create <i>\"%s\"</i>...');\n                  r.push({\n                    id: newItem,\n                    text: msg\n                  })\n                }\n              }\n              return query.callback({\n                results: r,\n                more: more\n              })\n            })\n          };\n          if (_timeout) clearTimeout(_timeout);\n          _timeout = setTimeout(f, 400)\n        },\n        ajax: {\n          url: `/api/rpc/${serviceName}/get_field_choices/`,\n          contentType: \"application/json\",\n          dataType: \"json\",\n          type: \"POST\"\n        },\n        formatSelection(val) {\n          if (val.id === newItem || val.id === newEditItem) return Katrid.i18n.gettext(\"Creating...\");\n          return val.text\n        },\n        formatResult(state) {\n          const s = sel.data(\"select2\").search.val();\n          if (state.id === newItem) {\n            state.str = s;\n            return `<strong>${sprintf(state.text, s)}</strong>`\n          } else if (state.id === newEditItem) {\n            state.str = s;\n            return `<strong>${sprintf(state.text, s)}</strong>`\n          }\n          return state.text\n        },\n        initSelection(el, cb) {\n          let v = controller.$modelValue;\n          if (multiple) {\n            v = v.map(obj => ({\n              id: obj[0],\n              text: obj[1]\n            }));\n            return cb(v)\n          } else if (_.isArray(v)) {\n            return cb({\n              id: v[0],\n              text: v[1]\n            })\n          }\n        }\n      };\n\n      let allowCreateEdit = attrs.noCreateEdit;\n      allowCreateEdit = _.isUndefined(allowCreateEdit) || !Boolean(allowCreateEdit);\n\n      let {\n        multiple: multiple\n      } = attrs;\n      if (multiple) {\n        config[\"multiple\"] = true\n      }\n      sel = sel.select2(config);\n\n      let createNew = () => {\n        sel.select2('close');\n        let service = new Katrid.Services.Model(field.model);\n        return service.getViewInfo({\n          view_type: \"form\"\n        }).then(function (res) {\n          let title = _.sprintf(Katrid.i18n.gettext('Create: %(title)s'), {title: field.caption});\n          let options = {\n            scope: scope.$new(true),\n            $controller: $controller,\n            sel: sel, field: field,\n            title: title,\n            view: res,\n            model: service,\n            action: scope.action,\n          };\n          let wnd = new Katrid.UI.Dialogs.Window(options);\n          wnd.createNew();\n        })\n      };\n\n      if (allowCreateEdit)\n        sel.parent().find('div.select2-container>div.select2-drop')\n        .append(`<div style=\"padding: 4px;\"><button type=\"button\" class=\"btn btn-link btn-sm\">${Katrid.i18n.gettext('Create New...')}</button></div>`)\n        .find('button').click(createNew);\n\n\n      sel.on(\"change\", async e => {\n        console.log('on change', e.val);\n        let v = e.added;\n        if (v && v.id === newItem) {\n          let service = new Katrid.Services.Model(field.model);\n          try {\n            let res = await service.createName(v.str);\n            let vals = {};\n            vals[field.name] = res;\n            scope.dataSource.setValues(vals);\n            sel.select2('data', {id: res[0], text: res[1]});\n          } catch (err) {\n            let res = await service.getViewInfo({\n              view_type: \"form\"\n            });\n            let title = _.sprintf(Katrid.i18n.gettext('Create: %(title)s'), {title: field.caption});\n            let options = {\n              scope: scope.$new(true),\n              $controller: $controller,\n              sel: sel, field: field,\n              title: title,\n              view: res,\n              model: service,\n              action: scope.action,\n            };\n            let wnd = new Katrid.UI.Dialogs.Window(options);\n            wnd.createNew({creationName: v.str});\n            sel.select2('data', null);\n          }\n        } else if (v && v.id === newEditItem) {\n        } else if (multiple && e.val.length) {\n          return controller.$setViewValue(e.val)\n        } else {\n          controller.$setDirty();\n          if (v) {\n            return controller.$setViewValue([v.id, v.text])\n          } else {\n            return controller.$setViewValue(null)\n          }\n        }\n      }).on(\"select2-open\", () => {\n        if (!_shown) {\n          _shown = true;\n          let parentModal = el.closest(\"div.modal\");\n          if (parentModal.length) parentModal.on(\"hide.bs.modal\", () => sel.select2(\"destroy\"))\n        }\n      });\n      controller.$parsers.push(value => {\n        if (value) {\n          if (_.isArray(value)) return value;\n          else if (_.isObject(value)) return [value.id, value.text];\n          else return value\n        }\n        return null\n      });\n      if (!multiple) scope.$watch(attrs.ngModel, (newValue, oldValue) => sel.select2(\"val\", newValue));\n      return controller.$render = function () {\n        if (multiple) {\n          if (controller.$modelValue) {\n            const v = Array.from(controller.$modelValue).map(obj => obj[0]);\n            sel.select2(\"val\", controller.$modelValue);\n          }\n        } else if (controller.$viewValue) {\n          return sel.select2(\"val\", controller.$viewValue[0])\n        } else {\n          return sel.select2(\"val\", null)\n        }\n      }\n    }\n  })]);\n\n\n  Katrid.UI.uiKatrid.filter('m2m', () =>\n    function (input) {\n      if (_.isArray(input))\n        return input.map((obj) => obj ? obj[1] : null).join(', ');\n    }\n  );\n\n\n})();\n","(function() {\n\n  Katrid.UI.uiKatrid.directive('statusField', ['$compile', ($compile) =>\n    ({\n      restrict: 'A',\n      priority: 1,\n      replace: true,\n      link(scope, element, attrs, controller) {\n        const field = scope.view.fields[attrs.name];\n        scope.choices = field.choices;\n        if (!attrs.readonly) {\n          scope.itemClick = () => console.log('status field item click');\n        }\n        element.closest('header').prepend(element);\n      },\n      template(element, attrs) {\n        return sprintf(Katrid.app.$templateCache.get('view.field.StatusField'), { fieldName: attrs.name });\n      }\n    })\n\n  ]);\n\n})();\n","(function() {\n\n  Katrid.UI.uiKatrid.directive('sortableField', ['$compile', '$timeout', ($compile, $timeout) =>\n    ({\n      restrict: 'E',\n      require: 'ngModel',\n      replace: true,\n      scope: {},\n      link: {\n        post: function (scope, el, attrs) {\n          let tbl = el.closest('tbody');\n          let fixHelperModified = function (e, tr) {\n              let $originals = tr.children();\n              let $helper = tr.clone();\n              $helper.children().each(function (index) {\n                $(this).width($originals.eq(index).width())\n              });\n              return $helper;\n            },\n            updateIndex = function (e, ui) {\n              $('td.list-column-sortable', ui.item.parent()).each(function (i) {\n                // $(this).html(i + 1);\n              });\n            };\n\n          tbl.sortable({\n            helper: fixHelperModified,\n            stop: updateIndex\n          }).disableSelection();\n        }\n      },\n      template(element, attrs) {\n        return sprintf(Katrid.$templateCache.get('view.field.SortableField'), { fieldName: attrs.name });\n      }\n    })\n\n  ]);\n\n})();\n","/**\n * jQuery number plug-in 2.1.3\n * Copyright 2012, Digital Fusion\n * Licensed under the MIT license.\n * http://opensource.teamdf.com/license/\n *\n * A jQuery plugin which implements a permutation of phpjs.org's number_format to provide\n * simple number formatting, insertion, and as-you-type masking of a number.\n *\n * @author\tSam Sehnert\n * @docs\thttp://www.teamdf.com/web/jquery-number-format-redux/196/\n */\n(function($){\n\n\t\"use strict\";\n\n\t/**\n\t * Method for selecting a range of characters in an input/textarea.\n\t *\n\t * @param int rangeStart\t\t\t: Where we want the selection to start.\n\t * @param int rangeEnd\t\t\t\t: Where we want the selection to end.\n\t *\n\t * @return void;\n\t */\n\tfunction setSelectionRange( rangeStart, rangeEnd )\n\t{\n\t\t// Check which way we need to define the text range.\n\t\tif( this.createTextRange )\n\t\t{\n\t\t\tvar range = this.createTextRange();\n\t\t\t\trange.collapse( true );\n\t\t\t\trange.moveStart( 'character',\trangeStart );\n\t\t\t\trange.moveEnd( 'character',\t\trangeEnd-rangeStart );\n\t\t\t\trange.select();\n\t\t}\n\n\t\t// Alternate setSelectionRange method for supporting browsers.\n\t\telse if( this.setSelectionRange )\n\t\t{\n\t\t\tthis.focus();\n\t\t\tthis.setSelectionRange( rangeStart, rangeEnd );\n\t\t}\n\t}\n\n\t/**\n\t * Get the selection position for the given part.\n\t *\n\t * @param string part\t\t\t: Options, 'Start' or 'End'. The selection position to get.\n\t *\n\t * @return int : The index position of the selection part.\n\t */\n\tfunction getSelection( part )\n\t{\n\t\tvar pos\t= this.value.length;\n\n\t\t// Work out the selection part.\n\t\tpart = ( part.toLowerCase() == 'start' ? 'Start' : 'End' );\n\n\t\tif( document.selection ){\n\t\t\t// The current selection\n\t\t\tvar range = document.selection.createRange(), stored_range, selectionStart, selectionEnd;\n\t\t\t// We'll use this as a 'dummy'\n\t\t\tstored_range = range.duplicate();\n\t\t\t// Select all text\n\t\t\t//stored_range.moveToElementText( this );\n\t\t\tstored_range.expand('textedit');\n\t\t\t// Now move 'dummy' end point to end point of original range\n\t\t\tstored_range.setEndPoint( 'EndToEnd', range );\n\t\t\t// Now we can calculate start and end points\n\t\t\tselectionStart = stored_range.text.length - range.text.length;\n\t\t\tselectionEnd = selectionStart + range.text.length;\n\t\t\treturn part == 'Start' ? selectionStart : selectionEnd;\n\t\t}\n\n\t\telse if(typeof(this['selection'+part])!=\"undefined\")\n\t\t{\n\t\t \tpos = this['selection'+part];\n\t\t}\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Substitutions for keydown keycodes.\n\t * Allows conversion from e.which to ascii characters.\n\t */\n\tvar _keydown = {\n\t\tcodes : {\n\t\t\t188 : 44,\n      110 : 44,\n      108 : 44,\n\t\t\t109 : 45,\n\t\t\t190 : 46,\n\t\t\t191 : 47,\n\t\t\t192 : 96,\n\t\t\t220 : 92,\n\t\t\t222 : 39,\n\t\t\t221 : 93,\n\t\t\t219 : 91,\n\t\t\t173 : 45,\n\t\t\t187 : 61, //IE Key codes\n\t\t\t186 : 59, //IE Key codes\n\t\t\t189 : 45, //IE Key codes\n        },\n        shifts : {\n\t\t\t96 : \"~\",\n\t\t\t49 : \"!\",\n\t\t\t50 : \"@\",\n\t\t\t51 : \"#\",\n\t\t\t52 : \"$\",\n\t\t\t53 : \"%\",\n\t\t\t54 : \"^\",\n\t\t\t55 : \"&\",\n\t\t\t56 : \"*\",\n\t\t\t57 : \"(\",\n\t\t\t48 : \")\",\n\t\t\t45 : \"_\",\n\t\t\t61 : \"+\",\n\t\t\t91 : \"{\",\n\t\t\t93 : \"}\",\n\t\t\t92 : \"|\",\n\t\t\t59 : \":\",\n\t\t\t39 : \"\\\"\",\n\t\t\t44 : \"<\",\n\t\t\t46 : \">\",\n\t\t\t47 : \"?\"\n        }\n    };\n\n\t/**\n\t * jQuery number formatter plugin. This will allow you to format numbers on an element.\n\t *\n\t * @params proxied for format_number method.\n\t *\n\t * @return : The jQuery collection the method was called with.\n\t */\n\t$.fn.number = function( number, decimals, dec_point, thousands_sep ){\n\n\t    // Enter the default thousands separator, and the decimal placeholder.\n\t    thousands_sep\t= (typeof thousands_sep === 'undefined') ? ',' : thousands_sep;\n\t    dec_point\t\t= (typeof dec_point === 'undefined') ? '.' : dec_point;\n\t    decimals\t\t= (typeof decimals === 'undefined' ) ? 0 : decimals;\n\n\t    // Work out the unicode character for the decimal placeholder.\n\t    var u_dec\t\t\t= ('\\\\u'+('0000'+(dec_point.charCodeAt(0).toString(16))).slice(-4)),\n\t    \tregex_dec_num\t= new RegExp('[^-'+u_dec+'0-9]','g'),\n\t    \tregex_dec\t\t= new RegExp(u_dec,'g');\n\n\t    // If we've specified to take the number from the target element,\n\t    // we loop over the collection, and get the number.\n\t    if( number === true )\n\t    {\n\t    \t// If this element is a number, then we add a keyup\n\t    \tif( this.is('input:text') )\n\t    \t{\n\t    \t\t// Return the jquery collection.\n\t    \t\treturn this.on({\n\n\t    \t\t\t/**\n\t    \t\t\t * Handles keyup events, re-formatting numbers.\n\t    \t\t\t *\n\t    \t\t\t * @param object e\t\t\t: the keyup event object.s\n\t    \t\t\t *\n\t    \t\t\t * @return void;\n\t    \t\t\t */\n\t    \t\t\t'keydown.format' : function(e){\n\n\n\t    \t\t\t\t// Define variables used in the code below.\n\t    \t\t\t\tvar $this\t= $(this),\n\t    \t\t\t\t\tdata\t= $this.data('numFormat'),\n\t    \t\t\t\t\tcode\t= (e.keyCode ? e.keyCode : e.which),\n\t\t\t\t\t\t\tchara\t= '', //unescape(e.originalEvent.keyIdentifier.replace('U+','%u')),\n\t    \t\t\t\t\tstart\t= getSelection.apply(this,['start']),\n\t    \t\t\t\t\tend\t\t= getSelection.apply(this,['end']),\n\t    \t\t\t\t\tval\t\t= '',\n\t    \t\t\t\t\tsetPos\t= false;\n\n              if (e.key === '-') {\n              \tif ($this.val() === 0)\n              \t\tdata.negative = true;\n              \telse {\n              \t  data.negative = false;\n                  if (this.value.includes('-'))\n                    this.value = this.value.substr(1, this.value.length - 1);\n                  else\n                    this.value = '-' + this.value;\n                }\n                $this.val(this.value);\n                e.preventDefault();\n                return;\n              }\n\n\t    \t\t\t\t// Webkit (Chrome & Safari) on windows screws up the keyIdentifier detection\n\t    \t\t\t\t// for numpad characters. I've disabled this for now, because while keyCode munging\n\t    \t\t\t\t// below is hackish and ugly, it actually works cross browser & platform.\n\n//\t    \t\t\t\tif( typeof e.originalEvent.keyIdentifier !== 'undefined' )\n//\t    \t\t\t\t{\n//\t    \t\t\t\t\tchara = unescape(e.originalEvent.keyIdentifier.replace('U+','%u'));\n//\t    \t\t\t\t}\n//\t    \t\t\t\telse\n//\t    \t\t\t\t{\n\t    \t\t\t\t\tif (_keydown.codes.hasOwnProperty(code)) {\n\t\t\t\t\t            code = _keydown.codes[code];\n\t\t\t\t\t        }\n\t\t\t\t\t        if (!e.shiftKey && (code >= 65 && code <= 90)){\n\t\t\t\t\t        \tcode += 32;\n\t\t\t\t\t        } else if (!e.shiftKey && (code >= 69 && code <= 105)){\n\t\t\t\t\t        \tcode -= 48;\n\t\t\t\t\t        } else if (e.shiftKey && _keydown.shifts.hasOwnProperty(code)){\n\t\t\t\t\t            //get shifted keyCode value\n\t\t\t\t\t            chara = _keydown.shifts[code];\n\t\t\t\t\t        }\n\n\t\t\t\t\t        if( chara == '' ) chara = String.fromCharCode(code);\n//\t    \t\t\t\t}\n\n\n\n\t    \t\t\t\t// Stop executing if the user didn't type a number key, a decimal character, or backspace.\n\t    \t\t\t\tif( code !== 8 && chara != dec_point && !chara.match(/[0-9]/) )\n\t    \t\t\t\t{\n\t    \t\t\t\t\t// We need the original keycode now...\n\t    \t\t\t\t\tvar key = (e.keyCode ? e.keyCode : e.which);\n\t    \t\t\t\t\tif( // Allow control keys to go through... (delete, etc)\n\t    \t\t\t\t\t\tkey == 46 || key == 8 || key == 9 || key == 27 || key == 13 ||\n\t    \t\t\t\t\t\t// Allow: Ctrl+A, Ctrl+R\n\t    \t\t\t\t\t\t( (key == 65 || key == 82 ) && ( e.ctrlKey || e.metaKey ) === true ) ||\n\t    \t\t\t\t\t\t// Allow: Ctrl+V, Ctrl+C\n\t    \t\t\t\t\t\t( (key == 86 || key == 67 ) && ( e.ctrlKey || e.metaKey ) === true ) ||\n\t    \t\t\t\t\t\t// Allow: home, end, left, right\n\t    \t\t\t\t\t\t( (key >= 35 && key <= 39) )\n\t\t\t\t\t\t\t){\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// But prevent all other keys.\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\treturn false;\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// The whole lot has been selected, or if the field is empty...\n\t    \t\t\t\tif( start == 0 && end == this.value.length || $this.val() == 0 )\n\t    \t\t\t\t{\n\t    \t\t\t\t\tif( code === 8 )\n\t    \t\t\t\t\t{\n\t\t    \t\t\t\t\t// Blank out the field, but only if the data object has already been instanciated.\n\t    \t\t\t\t\t\tstart = end = 1;\n\t    \t\t\t\t\t\tthis.value = '';\n\n\t    \t\t\t\t\t\t// Reset the cursor position.\n\t\t    \t\t\t\t\tdata.init = (decimals>0?-1:0);\n\t\t    \t\t\t\t\tdata.c = (decimals>0?-(decimals+1):0);\n\t\t    \t\t\t\t\tsetSelectionRange.apply(this, [0,0]);\n\t\t    \t\t\t\t}\n\t\t    \t\t\t\telse if( chara === dec_point )\n\t\t    \t\t\t\t{\n\t\t    \t\t\t\t\tstart = end = 1;\n\t\t    \t\t\t\t\tthis.value = '0'+ dec_point + (new Array(decimals+1).join('0'));\n\n\t\t    \t\t\t\t\t// Reset the cursor position.\n\t\t    \t\t\t\t\tdata.init = (decimals>0?1:0);\n\t\t    \t\t\t\t\tdata.c = (decimals>0?-(decimals+1):0);\n\t\t    \t\t\t\t}\n\t\t    \t\t\t\telse if( this.value.length === 0 )\n\t\t    \t\t\t\t{\n\t\t    \t\t\t\t\t// Reset the cursor position.\n\t\t    \t\t\t\t\tdata.init = (decimals>0?-1:0);\n\t\t    \t\t\t\t\tdata.c = (decimals>0?-(decimals):0);\n\t\t    \t\t\t\t}\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// Otherwise, we need to reset the caret position\n\t    \t\t\t\t// based on the users selection.\n\t    \t\t\t\telse\n\t    \t\t\t\t{\n\t    \t\t\t\t\tdata.c = end-this.value.length;\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// If the start position is before the decimal point,\n\t    \t\t\t\t// and the user has typed a decimal point, we need to move the caret\n\t    \t\t\t\t// past the decimal place.\n\t    \t\t\t\tif( decimals > 0 && chara == dec_point && start == this.value.length-decimals-1 )\n\t    \t\t\t\t{\n\t    \t\t\t\t\tdata.c++;\n\t    \t\t\t\t\tdata.init = Math.max(0,data.init);\n\t    \t\t\t\t\te.preventDefault();\n\n\t    \t\t\t\t\t// Set the selection position.\n\t    \t\t\t\t\tsetPos = this.value.length+data.c;\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// If the user is just typing the decimal place,\n\t    \t\t\t\t// we simply ignore it.\n\t    \t\t\t\telse if( chara == dec_point )\n\t    \t\t\t\t{\n\t    \t\t\t\t\tdata.init = Math.max(0,data.init);\n\t    \t\t\t\t\te.preventDefault();\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// If hitting the delete key, and the cursor is behind a decimal place,\n\t    \t\t\t\t// we simply move the cursor to the other side of the decimal place.\n\t    \t\t\t\telse if( decimals > 0 && code == 8 && start == this.value.length-decimals )\n\t    \t\t\t\t{\n\t    \t\t\t\t\te.preventDefault();\n\t    \t\t\t\t\tdata.c--;\n\n\t    \t\t\t\t\t// Set the selection position.\n\t    \t\t\t\t\tsetPos = this.value.length+data.c;\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// If hitting the delete key, and the cursor is to the right of the decimal\n\t    \t\t\t\t// (but not directly to the right) we replace the character preceeding the\n\t    \t\t\t\t// caret with a 0.\n\t    \t\t\t\telse if( decimals > 0 && code == 8 && start > this.value.length-decimals )\n\t    \t\t\t\t{\n\t    \t\t\t\t\tif( this.value === '' ) return;\n\n\t    \t\t\t\t\t// If the character preceeding is not already a 0,\n\t    \t\t\t\t\t// replace it with one.\n\t    \t\t\t\t\tif( this.value.slice(start-1, start) != '0' )\n\t    \t\t\t\t\t{\n\t    \t\t\t\t\t\tval = this.value.slice(0, start-1) + '0' + this.value.slice(start);\n\t    \t\t\t\t\t\t$this.val(val.replace(regex_dec_num,'').replace(regex_dec,dec_point));\n\t    \t\t\t\t\t}\n\n\t    \t\t\t\t\te.preventDefault();\n\t    \t\t\t\t\tdata.c--;\n\n\t    \t\t\t\t\t// Set the selection position.\n\t    \t\t\t\t\tsetPos = this.value.length+data.c;\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// If the delete key was pressed, and the character immediately\n\t    \t\t\t\t// before the caret is a thousands_separator character, simply\n\t    \t\t\t\t// step over it.\n\t    \t\t\t\telse if( code == 8 && this.value.slice(start-1, start) == thousands_sep )\n\t    \t\t\t\t{\n\t    \t\t\t\t\te.preventDefault();\n\t    \t\t\t\t\tdata.c--;\n\n\t    \t\t\t\t\t// Set the selection position.\n\t    \t\t\t\t\tsetPos = this.value.length+data.c;\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// If the caret is to the right of the decimal place, and the user is entering a\n\t    \t\t\t\t// number, remove the following character before putting in the new one.\n\t    \t\t\t\telse if(\n\t    \t\t\t\t\tdecimals > 0 &&\n\t    \t\t\t\t\tstart == end &&\n\t    \t\t\t\t\tthis.value.length > decimals+1 &&\n\t    \t\t\t\t\tstart > this.value.length-decimals-1 && isFinite(+chara) &&\n\t\t    \t\t\t\t!e.metaKey && !e.ctrlKey && !e.altKey && chara.length === 1\n\t    \t\t\t\t)\n\t    \t\t\t\t{\n\t    \t\t\t\t\t// If the character preceeding is not already a 0,\n\t    \t\t\t\t\t// replace it with one.\n\t    \t\t\t\t\tif( end === this.value.length )\n\t    \t\t\t\t\t{\n\t    \t\t\t\t\t\tval = this.value.slice(0, start-1);\n\t    \t\t\t\t\t}\n\t    \t\t\t\t\telse\n\t    \t\t\t\t\t{\n\t    \t\t\t\t\t\tval = this.value.slice(0, start)+this.value.slice(start+1);\n\t    \t\t\t\t\t}\n\n\t    \t\t\t\t\t// Reset the position.\n\t    \t\t\t\t\tthis.value = val;\n\t    \t\t\t\t\tsetPos = start;\n\t    \t\t\t\t}\n\n\t    \t\t\t\tif (setPos === false && code === 44 && chara === dec_point)\n\t    \t\t\t\t\tsetPos = this.value.indexOf(dec_point) + 1;\n\n\t    \t\t\t\t// If we need to re-position the characters.\n\t    \t\t\t\tif( setPos !== false )\n\t    \t\t\t\t{\n\t    \t\t\t\t\tsetSelectionRange.apply(this, [setPos, setPos]);\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// Store the data on the element.\n\t    \t\t\t\t$this.data('numFormat', data);\n\n\t    \t\t\t},\n\n\t    \t\t\t/**\n\t    \t\t\t * Handles keyup events, re-formatting numbers.\n\t    \t\t\t *\n\t    \t\t\t * @param object e\t\t\t: the keyup event object.s\n\t    \t\t\t *\n\t    \t\t\t * @return void;\n\t    \t\t\t */\n\t    \t\t\t'keyup.format' : function(e){\n\n\t    \t\t\t\t// Store these variables for use below.\n\t    \t\t\t\tvar $this\t= $(this),\n\t    \t\t\t\t\tdata\t= $this.data('numFormat'),\n\t    \t\t\t\t\tcode\t= (e.keyCode ? e.keyCode : e.which),\n\t    \t\t\t\t\tstart\t= getSelection.apply(this,['start']),\n\t    \t\t\t\t\tsetPos;\n\n\t    \t\t\t\t// Stop executing if the user didn't type a number key, a decimal, or a comma.\n\t    \t\t\t\tif( this.value === '' || (code < 48 || code > 57) && (code < 96 || code > 105 ) && code !== 8 )\n\t    \t\t\t\t  return;\n\n\t    \t\t\t\t// Re-format the textarea.\n\t    \t\t\t\t$this.val($this.val());\n\n\t    \t\t\t\tif( decimals > 0 )\n\t    \t\t\t\t{\n\t\t    \t\t\t\t// If we haven't marked this item as 'initialised'\n\t\t    \t\t\t\t// then do so now. It means we should place the caret just\n\t\t    \t\t\t\t// before the decimal. This will never be un-initialised before\n\t\t    \t\t\t\t// the decimal character itself is entered.\n\t\t    \t\t\t\tif( data.init < 1 )\n\t\t    \t\t\t\t{\n\t\t    \t\t\t\t\tstart\t\t= this.value.length-decimals-( data.init < 0 ? 1 : 0 );\n\t\t    \t\t\t\t\tdata.c\t\t= start-this.value.length;\n\t\t    \t\t\t\t\tdata.init\t= 1;\n\n\t\t    \t\t\t\t\t$this.data('numFormat', data);\n\t\t    \t\t\t\t}\n\n\t\t    \t\t\t\t// Increase the cursor position if the caret is to the right\n\t\t    \t\t\t\t// of the decimal place, and the character pressed isn't the delete key.\n\t\t    \t\t\t\telse if( start > this.value.length-decimals && code != 8 )\n\t\t    \t\t\t\t{\n\t\t    \t\t\t\t\tdata.c++;\n\n\t\t    \t\t\t\t\t// Store the data, now that it's changed.\n\t\t    \t\t\t\t\t$this.data('numFormat', data);\n\t\t    \t\t\t\t}\n\t    \t\t\t\t}\n\n\t    \t\t\t\t//console.log( 'Setting pos: ', start, decimals, this.value.length + data.c, this.value.length, data.c );\n\n\t    \t\t\t\t// Set the selection position.\n\t    \t\t\t\tsetPos = this.value.length+data.c;\n\t    \t\t\t\tif (((this.value.length - setPos) === data.decimals) && (String.fromCharCode(code) !== data.dec_point)) {\n                setPos -= 1;\n                console.log('set pos', data.dec_point, code, String.fromCharCode(code));\n              }\n\t    \t\t\t\tsetSelectionRange.apply(this, [setPos, setPos]);\n\t    \t\t\t},\n\n\t    \t\t\t/**\n\t    \t\t\t * Reformat when pasting into the field.\n\t    \t\t\t *\n\t    \t\t\t * @param object e \t\t: jQuery event object.\n\t    \t\t\t *\n\t    \t\t\t * @return false : prevent default action.\n\t    \t\t\t */\n\t    \t\t\t'paste.format' : function(e){\n\n\t    \t\t\t\t// Defint $this. It's used twice!.\n\t    \t\t\t\tvar $this\t\t= $(this),\n\t    \t\t\t\t\toriginal\t= e.originalEvent,\n\t    \t\t\t\t\tval\t\t= null;\n\n\t\t\t\t\t\t// Get the text content stream.\n\t\t\t\t\t\tif (window.clipboardData && window.clipboardData.getData) { // IE\n\t\t\t\t\t\t\tval = window.clipboardData.getData('Text');\n\t\t\t\t\t\t} else if (original.clipboardData && original.clipboardData.getData) {\n\t\t\t\t\t\t\tval = original.clipboardData.getData('text/plain');\n\t\t\t\t\t\t}\n\n\t    \t\t\t\t// Do the reformat operation.\n\t    \t\t\t\t$this.val(val);\n\n\t    \t\t\t\t// Stop the actual content from being pasted.\n\t    \t\t\t\te.preventDefault();\n\t    \t\t\t\treturn false;\n\t    \t\t\t}\n\n\t    \t\t})\n\n\t    \t\t// Loop each element (which isn't blank) and do the format.\n    \t\t\t.each(function(){\n\n    \t\t\t\tvar $this = $(this).data('numFormat',{\n    \t\t\t\t\tc\t\t\t\t: -(decimals+1),\n    \t\t\t\t\tdecimals\t\t: decimals,\n    \t\t\t\t\tthousands_sep\t: thousands_sep,\n    \t\t\t\t\tdec_point\t\t: dec_point,\n    \t\t\t\t\tregex_dec_num\t: regex_dec_num,\n    \t\t\t\t\tregex_dec\t\t: regex_dec,\n    \t\t\t\t\tinit\t\t\t: false\n    \t\t\t\t});\n\n    \t\t\t\t// Return if the element is empty.\n    \t\t\t\tif( this.value === '' ) return;\n\n    \t\t\t\t// Otherwise... format!!\n    \t\t\t\t$this.val($this.val());\n    \t\t\t});\n\t    \t}\n\t    \telse\n\t    \t{\n\t\t    \t// return the collection.\n\t\t    \treturn this.each(function(){\n\t\t    \t\tvar $this = $(this), num = +$this.text().replace(regex_dec_num,'').replace(regex_dec,'.');\n\t\t    \t\t$this.number( !isFinite(num) ? 0 : +num, decimals, dec_point, thousands_sep );\n\t\t    \t});\n\t    \t}\n\t    }\n\n\t    // Add this number to the element as text.\n\t    return this.text( $.number.apply(window,arguments) );\n\t};\n\n\t//\n\t// Create .val() hooks to get and set formatted numbers in inputs.\n\t//\n\n\t// We check if any hooks already exist, and cache\n\t// them in case we need to re-use them later on.\n\tvar origHookGet = null, origHookSet = null;\n\n\t// Check if a text valHook already exists.\n\tif( $.isPlainObject( $.valHooks.text ) )\n\t{\n\t    // Preserve the original valhook function\n\t    // we'll call this for values we're not\n\t    // explicitly handling.\n\t    if( $.isFunction( $.valHooks.text.get ) ) origHookGet = $.valHooks.text.get;\n\t    if( $.isFunction( $.valHooks.text.set ) ) origHookSet = $.valHooks.text.set;\n\t}\n\telse\n\t{\n\t    // Define an object for the new valhook.\n\t    $.valHooks.text = {};\n\t}\n\n\t/**\n\t * Define the valHook to return normalised field data against an input\n\t * which has been tagged by the number formatter.\n\t *\n\t * @param object el\t\t\t: The raw DOM element that we're getting the value from.\n\t *\n\t * @return mixed : Returns the value that was written to the element as a\n\t *\t\t\t\t   javascript number, or undefined to let jQuery handle it normally.\n\t */\n\t$.valHooks.text.get = function( el ){\n\n\t\t// Get the element, and its data.\n\t\tvar $this\t= $(el), num,\n\t\t\tdata\t= $this.data('numFormat');\n\n        // Does this element have our data field?\n        if( !data )\n        {\n            // Check if the valhook function already existed\n            if( $.isFunction( origHookGet ) )\n            {\n                // There was, so go ahead and call it\n                return origHookGet(el);\n            }\n            else\n            {\n                // No previous function, return undefined to have jQuery\n                // take care of retrieving the value\n                return undefined;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Remove formatting, and return as number.\n\t\t\tif( el.value === '' ) return '';\n\n\t\t\t// Convert to a number.\n\t\t\tnum = +(el.value\n\t\t\t\t.replace( data.regex_dec_num, '' )\n\t\t\t\t.replace( data.regex_dec, '.' ));\n\n\t\t\t// If we've got a finite number, return it.\n\t\t\t// Otherwise, simply return 0.\n\t\t\t// Return as a string... thats what we're\n\t\t\t// used to with .val()\n\t\t\treturn ''+( isFinite( num ) ? num : 0 );\n\t\t}\n\t};\n\n\t/**\n\t * A valhook which formats a number when run against an input\n\t * which has been tagged by the number formatter.\n\t *\n\t * @param object el\t\t: The raw DOM element (input element).\n\t * @param float\t\t\t: The number to set into the value field.\n\t *\n\t * @return mixed : Returns the value that was written to the element,\n\t *\t\t\t\t   or undefined to let jQuery handle it normally.\n\t */\n\t$.valHooks.text.set = function( el, val )\n\t{\n\t\t// Get the element, and its data.\n\t\tvar $this\t= $(el),\n\t\t\tdata\t= $this.data('numFormat');\n\n\t\t// Does this element have our data field?\n\t\tif( !data )\n\t\t{\n\n\t\t    // Check if the valhook function already exists\n\t\t    if( $.isFunction( origHookSet ) )\n\t\t    {\n\t\t        // There was, so go ahead and call it\n\t\t        return origHookSet(el,val);\n\t\t    }\n\t\t    else\n\t\t    {\n\t\t        // No previous function, return undefined to have jQuery\n\t\t        // take care of retrieving the value\n\t\t        return undefined;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Otherwise, don't worry about other valhooks, just run ours.\n\t\t\treturn el.value = $.number( val, data.decimals, data.dec_point, data.thousands_sep );\n\t\t}\n\t};\n\n\t/**\n\t * The (modified) excellent number formatting method from PHPJS.org.\n\t * http://phpjs.org/functions/number_format/\n\t *\n\t * @modified by Sam Sehnert (teamdf.com)\n\t *\t- don't redefine dec_point, thousands_sep... just overwrite with defaults.\n\t *\t- don't redefine decimals, just overwrite as numeric.\n\t *\t- Generate regex for normalizing pre-formatted numbers.\n\t *\n\t * @param float number\t\t\t: The number you wish to format, or TRUE to use the text contents\n\t *\t\t\t\t\t\t\t\t  of the element as the number. Please note that this won't work for\n\t *\t\t\t\t\t\t\t\t  elements which have child nodes with text content.\n\t * @param int decimals\t\t\t: The number of decimal places that should be displayed. Defaults to 0.\n\t * @param string dec_point\t\t: The character to use as a decimal point. Defaults to '.'.\n\t * @param string thousands_sep\t: The character to use as a thousands separator. Defaults to ','.\n\t *\n\t * @return string : The formatted number as a string.\n\t */\n\t$.number = function( number, decimals, dec_point, thousands_sep ){\n\t\t// Set the default values here, instead so we can use them in the replace below.\n\t\tthousands_sep\t= (typeof thousands_sep === 'undefined') ? ',' : thousands_sep;\n\t\tdec_point\t\t= (typeof dec_point === 'undefined') ? '.' : dec_point;\n\t\tdecimals\t\t= !isFinite(+decimals) ? 0 : Math.abs(decimals);\n\n\t\t// Work out the unicode representation for the decimal place and thousand sep.\n\t\tvar u_dec = ('\\\\u'+('0000'+(dec_point.charCodeAt(0).toString(16))).slice(-4));\n\t\tvar u_sep = ('\\\\u'+('0000'+(thousands_sep.charCodeAt(0).toString(16))).slice(-4));\n\n\t\t// Fix the number, so that it's an actual number.\n\t\tnumber = (number + '')\n\t\t\t.replace('\\.', dec_point) // because the number if passed in as a float (having . as decimal point per definition) we need to replace this with the passed in decimal point character\n\t\t\t.replace(new RegExp(u_sep,'g'),'')\n\t\t\t.replace(new RegExp(u_dec,'g'),'.')\n\t\t\t.replace(new RegExp('[^0-9+\\-Ee.]','g'),'');\n\n\t\tvar n = !isFinite(+number) ? 0 : +number,\n\t\t    s = '',\n\t\t    toFixedFix = function (n, decimals) {\n\t\t        var k = Math.pow(10, decimals);\n\t\t        return '' + Math.round(n * k) / k;\n\t\t    };\n\n\t\t// Fix for IE parseFloat(0.55).toFixed(0) = 0;\n\t\ts = (decimals ? toFixedFix(n, decimals) : '' + Math.round(n)).split('.');\n\t\tif (s[0].length > 3) {\n\t\t    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, thousands_sep);\n\t\t}\n\t\tif ((s[1] || '').length < decimals) {\n\t\t    s[1] = s[1] || '';\n\t\t    s[1] += new Array(decimals - s[1].length + 1).join('0');\n\t\t}\n\t\treturn s.join(dec_point);\n\t}\n\n})(jQuery);\n","(function() {\n\n  class Total {\n    constructor($filter) {\n      this.restrict = 'E';\n      this.scope = false;\n      this.replace = true;\n      this.$filter = $filter;\n    }\n\n    template(el, attrs) {\n      if (attrs.expr[0] === \"'\")\n        return `<span>${ attrs.expr.substring(1, attrs.expr.length - 1) }</span>`;\n      else\n        return `<span ng-bind=\"total$${attrs.field}|number:2\"></span>`;\n    }\n\n    link(scope, element, attrs, controller) {\n      if (attrs.expr[0] !== \"'\")\n        scope.$watch(`records`, (newValue) => {\n          let total = 0;\n          newValue.map((r) => total += parseFloat(r[attrs.field]));\n          scope['total$' + attrs.field] = total;\n          scope.parent['total$' + scope.fieldName + '$' + attrs.field] = total;\n        });\n    }\n  }\n\n  Katrid.UI.uiKatrid.directive('ngTotal', ['$filter', Total]);\n\n})();\n","(function () {\n\n  class Dashboard extends Katrid.UI.Views.ClientView {\n    async render() {\n      // get the linked view for the client action\n      let model = new Katrid.Services.Model('ir.action.client');\n      let res = await model.rpc('get_view', [this.action.info.id]);\n      if (res.content) {\n        return Katrid.Core.$compile(res.content)(this.action.scope);\n      }\n    }\n  }\n\n  class DashboardComponent extends Katrid.UI.Widgets.Component {\n    constructor($compile) {\n      super();\n      this.$compile = $compile;\n      this.restrict = 'E';\n      this.scope = false;\n    }\n\n    async link(scope, el, attrs, controller) {\n      let dashboardId = attrs.dashboardId;\n    }\n  }\n\n\n  let dataGroup = function (data, groups, total) {\n    let res = [];\n    let row = data[0];\n    let x = [];\n    let grps = {};\n    let c = 0;\n\n    for (let group of groups) {\n      let g = [];\n\n      if (c === 0)\n        g.push(groups[0]);\n\n      for (let row of data) {\n        let v = row[group];\n        if ((c > 0) && !(v in grps)) {\n          g = [v];\n          grps[v] = g;\n          for (let z of x)\n            g.push(0);\n        } else if (c > 0)\n          g = grps[v];\n        if (c > 0)\n          g[x.indexOf(row[groups[0]])] = row[total || 'total'] || 0;\n        else if (!g.includes(v))\n          g.push(v);\n      }\n      if (c === 0) {\n        x = g;\n        grps[groups[0]] = g;\n      } else {\n\n      }\n      c++;\n    }\n    res = Object.values(grps);\n    console.log(res);\n    return res;\n  };\n\n\n  class ChartComponent extends Katrid.UI.Widgets.Component {\n    constructor() {\n      super();\n    }\n\n    async link(scope, el, attrs) {\n      let res, chart, sql;\n\n      // find by a query child element\n      let q = el.find('query');\n      if (q.length) {\n        q.remove();\n        sql = q.text();\n      }\n\n      console.log('init chart');\n\n      let groups;\n      if (attrs.groups)\n        groups = attrs.groups.split(',');\n\n      let observe = async (url) => {\n\n        if (sql)\n          res = await Katrid.Services.Query.executeSql(sql);\n        else if (attrs.source)\n          res = scope[attrs.source];\n        else {\n          res = await fetch(url).then(res => res.json());\n        }\n\n        let data = res.data;\n        console.log(attrs);\n\n        let cfg = {\n          bindto: el[0],\n          data: {},\n          color: {\n            pattern: Katrid.UI.Dashboard.colorPatterns,\n          },\n        };\n\n        let hasData = false;\n\n        let type = el.attr('type');\n\n        if (type)\n          cfg.data.type = type;\n\n        if (groups) {\n          data = dataGroup(data, groups);\n          let vals = [];\n          for (let i = 1; i < data.length; i++)\n            vals.push(data[i][0]);\n          hasData = true;\n        }\n        else if (_.isArray(data) && data.length) {\n          let cols = Object.keys(data[0]);\n          cfg.data.columns = data.map(obj => [obj[cols[0]], obj[cols[1]]]);\n          hasData = true;\n        }\n\n        if (hasData)\n          chart = c3.generate(cfg);\n      };\n\n      if (attrs.urlParams) {\n        let urlParams = attrs.urlParams;\n        // TODO add list support\n        scope.$watch(attrs.urlParams, observe);\n      } else if (attrs.source) {\n        scope.$watch(attrs.source + '.data', observe);\n      } else\n        observe();\n      attrs.$observe('url', observe);\n    }\n  }\n\n  class Query extends Katrid.UI.Widgets.Component {\n    constructor() {\n      super();\n      this.priority = 200;\n      this.scope = false;\n    }\n\n    link(scope, el, attrs) {\n      let ds = new DataSource(el, scope);\n      el.remove();\n      return;\n      if (!attrs.name)\n        throw Error('Query name attribute is required!');\n      let instance = scope[attrs.name] = {loading: false, data: null};\n      // find query by url\n      let url = el.data('url');\n      if (url) {\n        console.log('find query by url', url);\n        $.get(url)\n        .then(res => {\n          instance.loading = false;\n          let data = res.data.map((row) => (_.object(res.fields, row)));\n          scope.$apply(() => instance.data = data);\n        });\n        return;\n      }\n\n      let r;\n      let sqlQuery = el.html();\n      let inMemory = 'inMemory' in attrs;\n      if (inMemory) {\n        let dataBind = el.data('bind');\n        let dataBindField = el.data('bind-field');\n        if (dataBind) {\n          scope.$parent.$watch(dataBind, function (newValue, oldValue) {\n            if (_.isArray(newValue) && newValue.length && _.isObject(newValue[0]))\n              console.log(alasql(sqlQuery, [newValue]));\n          });\n        } else if (dataBindField) {\n          // add watcher for the bind fields\n          let fnBind = function (newValue, oldValue) {\n            let fieldLog = scope.dataSource.$fieldLog[dataBindField];\n            if (fieldLog) {\n              let data = fieldLog.value;\n\n              if (_.isArray(data) && data.length && _.isObject(data[0])) {\n                instance = alasql(sqlQuery, [data]);\n              }\n            }\n          };\n          if (_.isString(dataBindField))\n            dataBindField = [dataBindField];\n          for (let field of dataBindField)\n            scope.$parent.$watch('$fieldLog.' + field + '.count', fnBind);\n        }\n      } else {\n        instance.loading = true;\n        if (_.isUndefined(attrs.url))\n          r = Katrid.Services.Query.read(attrs.queryId);\n        else\n          r = $.get(attrs.url);\n        r.then(res => {\n          instance.loading = false;\n          let data = res.data.map((row) => (_.object(res.fields, row)));\n          scope.$apply(() => instance.data = data);\n        });\n      }\n      el.remove();\n    }\n  }\n\n\n  Katrid.Actions.ClientAction.register('dashboard', Dashboard);\n\n  Katrid.UI.uiKatrid.directive('dashboard', ['$compile', DashboardComponent]);\n  Katrid.UI.uiKatrid.directive('chart', ChartComponent);\n  Katrid.UI.uiKatrid.directive('query', Query);\n\n\n  class Field {\n    constructor(el) {\n      this.el = el;\n    }\n\n    th() {\n      let caption = this.el.attr('caption') || this.el.attr('name');\n      let cls = this.el.attr('class');\n      let title = this.el.attr('header-title');\n      let attrs = '';\n      if (!title)\n        title = '';\n      let headerClick = this.el.attr('on-header-click');\n      if (cls)\n        attrs += 'class =\"' + cls + '\"';\n      if (headerClick)\n        attrs += ' ng-click=\"' + headerClick + '\"';\n      return `<th title=\"${title}\" ${attrs}>${caption}</th>`;\n    }\n\n    td() {\n      let format = this.el.attr('format');\n      if (format) {\n        format = '|' + format;\n        console.log('format', format);\n      } else\n        format = '';\n      let title = this.el.attr('title');\n      if (!title)\n        title = '';\n      let ngClass = this.el.attr('ng-class');\n      let cls = this.el[0].className;\n      let content = this.el.html();\n      if (!content)\n        content = `\\${ record.${this.name}${format} }`;\n      return `<td title='${title}' class=\"${cls}\">${content}</td>`;\n    }\n\n    tfoot() {\n      let total = this.total;\n      if (total)\n        total = '${grid.total(\"' + this.name + '\")}';\n      else if (this.footer)\n        total = this.footer;\n      else\n        total = '';\n      let cls = this.el[0].className;\n      return `<td class=\"${cls}\">${total}</td>`;\n    }\n\n    get name() {\n      return this.el.attr('name');\n    }\n\n    get footer() {\n      return this.el.attr('footer');\n    }\n\n    get total() {\n      return this.el.attr('total');\n    }\n  }\n\n\n  Katrid.UI.uiKatrid.directive('tableView', () => ({\n    restrict: 'E',\n    scope: false,\n    template(el, attrs) {\n      let fields = [];\n      for (let fld of el.find('field'))\n        fields.push(new Field($(fld)));\n      return Katrid.app.getTemplate('dashboard.table.jinja2', {fields, el, attrs});\n    }\n  }));\n\n\n  class DataSource {\n    constructor(el, scope) {\n      this.$el = el;\n      this.controls = [];\n      this.$counter = 0;\n      this.$scope = scope;\n      this.params = this.$el.data('params');\n      this.name = el.attr('name');\n      if (this.name)\n        scope[this.name] = this;\n      this.sql = this.$el.html();\n      this.url = el.data('url');\n      setTimeout(() => this.execute(), 100);\n    }\n\n    async execute() {\n      this.$loading = true;\n      try {\n        let res;\n        if (this.url) {\n          res = await fetch(this.url)\n          .then(res => res.json());\n        } else if (this.sql) {\n          let params = this.params;\n          console.log(params);\n          if (!params)\n            params = this.$scope;\n          else {\n            let dataParams = params;\n            params = {};\n            for (let k of dataParams) {\n              let v = this.$scope[k];\n              console.log(k, v);\n              if (_.isDate(v))\n                console.log('param is date', v);\n              params[k] = v;\n            }\n          }\n          let sql = _.sprintf(this.sql, params);\n          res = await Katrid.Services.Query.executeSql(sql);\n        }\n        this.$counter++;\n        this.data = res.data;\n        this.$scope.$apply();\n        this.onChange();\n      } finally {\n        this.$loading = false;\n      }\n    }\n\n    onChange() {\n      for (let control of this.controls)\n        control.$render(this.data);\n    }\n\n  }\n\n\n  class DashboardWidget {\n    constructor(opts) {\n      if (_.isString(opts.el))\n        this.$el = $(opts.el);\n      else\n        this.$el = opts.el;\n      this.$scope = opts.scope;\n      this.$sourceScope = opts.sourceScope || opts.scope;\n      this.$loading = false;\n      this.create(opts);\n\n      if (_.isString(this.dataSource)) {\n        let ds = this.$sourceScope[this.dataSource];\n        if (ds) {\n          ds.controls.push(this);\n          if (ds.$counter)\n            this.$render(ds.data);\n        }\n      }\n\n    }\n\n    create(opts) {\n      this.dataSource = opts.dataSource || this.$el.data('source');\n      this.caption = opts.caption || this.$el.attr('caption');\n    }\n\n    $render(data) {\n\n    }\n  }\n\n\n  class Chart extends DashboardWidget {\n    constructor(opts) {\n      super(opts);\n      this.backButton = $(`<button style=\"position: absolute; left: 0; top: 0;\" class=\"btn btn-outline-secondary btn-sm back-button\">${_.gettext('Back')}</button>`);\n      this.backButton.hide();\n      this.$el.prepend(this.backButton);\n    }\n\n    groupBy(data, group, totals) {\n      if (data.length === 0)\n        return [];\n      let res = [];\n      let firstRow = data[0];\n      let sql = 'select ';\n      let groups = group;\n      if (_.isArray(groups))\n        groups = groups.join(',');\n      else if (_.isNumber(group))\n        groups = Object.keys(firstRow)[group];\n      sql += groups;\n      if (_.isArray(totals))\n        for (let total of totals)\n          sql += ',' + 'sum(' + total + ') as ' + total;\n      else if (_.isString((totals)))\n        sql += `,sum(${totals}) as ${totals}`;\n      else if (_.isNumber(totals)) {\n        totals = Object.keys(firstRow)[totals];\n        sql += ',sum(' + totals + ') as ' + totals;\n      }\n      sql += ' from ? group by ';\n      sql += groups;\n      console.log(sql);\n      res = alasql(sql, [data]);\n      return res;\n    }\n\n    create(opts) {\n      super.create(opts);\n      this.x = opts.x;\n      this.y = opts.y;\n      this.keys = opts.keys;\n      this.type = opts.type;\n      this.axis = opts.axis;\n      this.legend = opts.legend;\n      this.onclick = opts.onclick;\n      this.columns = opts.columns;\n      this.grid = opts.grid;\n      this.labels = opts.labels;\n      this.pie = opts.pie;\n\n      if (!this.columns && !this.keys && _.isUndefined(this.x) && _.isUndefined(this.y)) {\n        this.x = 0;\n        this.y = 1;\n      }\n    }\n\n    $render(data) {\n      this.$data = data;\n      if (this.columns)\n        this.$columns = this.columns;\n      else\n        this.$columns = this.groupBy(data, this.x, this.y).map(obj => Object.values(obj));\n\n      let size = {\n        width: this.$el.parent().width(),\n      };\n\n      this.$chart = c3.generate({\n        bindto: this.$el[0],\n        data: {\n          columns: this.$columns,\n          type: this.type,\n          onclick: this.onclick,\n          labels: this.labels,\n        },\n        color: {\n          pattern: ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5']\n        },\n        pie: this.pie,\n        size,\n        grid: this.grid,\n        legend: this.legend,\n        axis: this.axis,\n      });\n\n      this.$chart.$chart = this;\n    }\n\n    query(sql, params) {\n      return alasql(sql, params);\n    }\n  }\n\n\n  class GridView extends DashboardWidget {\n    constructor(opts) {\n      super(opts);\n      this._groupBy = [];\n      let groupBy = this.$el.attr('group-by');\n      if (groupBy)\n        this._groupBy = groupBy.split(',');\n      this.totals = [];\n\n\n      this.fields = [];\n      for (let fld of this.$el.find('field')) {\n        let field = new Field($(fld));\n        this.fields.push(field);\n        if (field.total)\n          this.totals.push(field.name);\n      }\n\n      this.$scope.grid = this;\n\n      let templ = Katrid.app.getTemplate('dashboard.grid.jinja2', {\n        self: this,\n        fields: this.fields,\n      });\n      templ = Katrid.Core.$compile(templ)(this.$scope);\n      this.$el.html(templ);\n    }\n\n    get groupBy() {\n      return this._groupBy;\n    }\n\n    set groupBy(groupBy) {\n      this._groupBy = groupBy;\n      if (this._lastData)\n        this.$render(this._lastData);\n    }\n\n    total(attr) {\n      console.log('calc attr', attr);\n      let r = 0;\n      if (this._lastData)\n        for (let row of this._lastData)\n          r += row[attr];\n      return r;\n    }\n\n    $render(data) {\n      // render loaded data\n      this._lastData = data;\n      if (!data)\n        data = [];\n      if (this.groupBy.length) {\n        data = groupBy(data, this.groupBy, this.totals, this.fields[0].name);\n      }\n      this.$scope.records = this._renderGroup(data);\n    }\n\n    _renderGroup(data) {\n      let r = [];\n      for (let row of data) {\n        r.push(row);\n        if (row.$group)\n          r = r.concat(this._renderGroup(row.$children));\n      }\n      return r;\n    }\n  }\n\n  function groupBy(data, member, totals, to) {\n    let r = {};\n    for (let row of data) {\n      let v = row[member];\n      let group = r[v];\n      if (!group) {\n        group = r[v] = {$children: []};\n        for (let total of totals)\n          group[total] = 0;\n      }\n      group.$children.push(row);\n      group.$group = true;\n      group[to] = v;\n      for (let total of totals)\n        group[total] += row[total];\n    }\n    return Object.values(r);\n  }\n\n  class GridRow {\n    constructor(grid, row, el) {\n      this.row = row;\n    }\n\n  }\n\n  class GroupRow extends GridRow {\n\n  }\n\n\n  Katrid.UI.uiKatrid.directive('gridView', () => ({\n    restrict: 'E',\n    scope: {},\n    // template(el, attrs) {\n    //   let fields = [];\n    //   for (let fld of el.find('field'))\n    //     fields.push(new Field($(fld)));\n    //   let query = el.find('query');\n    //   if (query.length)\n    //     query = query[0].outerHTML;\n    //   else\n    //     query = '';\n    //   return Katrid.app.getTemplate('dashboard.grid.jinja2', {fields, el, attrs, query});\n    // },\n\n    async link(scope, el, attrs) {\n      let grid = new GridView({el, attrs, scope, sourceScope: scope.$parent});\n      return;\n      scope.loading = false;\n      let res, sql;\n      let query = el.find('query');\n      if (attrs.source) {\n        console.log('data source is', attrs.source);\n      } else if (query.length) {\n        sql = query.text();\n        query.remove();\n\n        if (sql) {\n          scope.loading = true;\n          scope.$apply();\n          res = await Katrid.Services.Query.executeSql(sql);\n          scope.loading = false;\n        }\n\n        if (res) {\n          scope.records = res.data;\n          scope.$apply();\n        }\n      }\n    }\n  }));\n\n\n  Katrid.UI.uiKatrid.filter('duration', () => {\n    return (input, unit, format) => {\n      if (!format)\n        format = 'HH:mm:ss';\n      if (input) {\n        if ((unit === 'seconds') && (_.isString(input)))\n          input = parseInt(input);\n        let fmt = moment.duration(input, unit).format(format);\n        if (fmt.length === 5)\n          fmt = '00:' + fmt;\n        return fmt;\n      }\n      return input;\n    }\n  });\n\n\n  Katrid.UI.Dashboard = {\n    Chart,\n    colorPatterns: [\n      '#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5',\n      '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'\n    ],\n  };\n\n\n})();\n","(function() {\n\n  class Telegram {\n    static async export(report, format) {\n      console.log('export telegram');\n      let templ = Katrid.app.$templateCache.get('reportbot.dialog.contacts');\n      let modal = $(templ);\n      $('body').append(modal);\n\n      let sel = modal.find('#id-reportbot-select-contacts');\n      let partners = new Katrid.Services.Model('res.partner');\n      let res = await partners.post('get_telegram_contacts');\n      if (res) {\n        if (res)\n          res.map(c => sel.append(`<option value=\"${ c[0] }\">${ c[1] }</option>`));\n        sel.select2();\n      }\n      modal.find('#id-btn-ok').click(async () => {\n\n        let svc = new Katrid.Services.Model('telegram.pending');\n        format = 'pdf';\n        const params = report.getUserParams();\n        let res = svc.post('export_report', { args: [report.info.id], kwargs: { contacts: sel.val(), format, params } });\n        if (res.ok) console.log('ok');\n      });\n      modal.modal();\n      return true;\n\n    }\n  }\n\n  Katrid.Reports.Telegram = Telegram;\n})();\n","(function () {\n\n  class QueryManager {\n    constructor(app) {\n      this.app = app;\n      this.$scope = app.$scope.$new();\n      this.$scope.queryChange = (query) => this.queryChange(query);\n      this.$scope.search = {};\n      let me = this;\n      this.action = this.$scope.action = {\n        context: {},\n        views: {},\n        async saveSearch(search) {\n          let svc = new Katrid.Services.Model('ui.filter');\n          let data = {};\n          Object.assign(data, search);\n          data.query = me.$scope.query.id;\n          if (search.name === null) {\n            search.name = prompt('Query name', 'current query namne');\n            search.is_default = false;\n            search.is_shared = true;\n          }\n          if (search.name)\n            await svc.write([data])\n        },\n        setSearchParams(params) {\n          me.$scope.search.params = params;\n          me.refresh(me.query);\n        },\n        switchView(viewType) {\n          console.log('set view type', viewType);\n        },\n        orderBy(field) {\n          if (me.$scope.ordering === field)\n            me.$scope.reverse = !me.$scope.reverse;\n          else {\n            me.$scope.ordering = field;\n            me.$scope.reverse = false;\n          }\n        }\n      };\n    }\n\n    getFilter(field) {\n      if (field.type === 'DateField')\n        return \"|date:'shortDate'\";\n      else if (field.type === 'DateTimeField')\n        return \"|date:'short'\";\n      else if (field.type === 'IntegerField')\n        return \"|number:0\";\n      return \"\";\n    }\n\n    getSearchView(query) {\n      let s;\n      if (query.params)\n        s = query.params;\n      else {\n        s = `<search>`;\n        for (let f of query.fields)\n          s += `<field name=\"${f.name}\"/>`;\n        s += '</search>';\n      }\n      // prepare fields to view\n      let fields = {};\n      for (let f of query.fields)\n        fields[f.name] = Katrid.Data.Fields.Field.fromInfo(f);\n      this.fields = fields;\n      return {content: s, fields};\n    }\n\n    async queryChange(query) {\n      this.$scope.search = {\n        viewMoreButtons: true,\n      };\n      this.query = query;\n      let res = await this.refresh(query);\n      // render the result on table\n      // transform result to list of objects\n      query.fields = res.fields;\n      this.action.search = this.getSearchView(query);\n      this.action.fieldList = Object.values(this.fields);\n      this.$scope.action.views.search = this.$scope.action.search;\n      this.renderSearch();\n      this.renderTable(res);\n      this.$scope.$apply();\n    }\n\n    async refresh(query) {\n      let res = await Katrid.Services.Query.read({ id: query.id, details: true, params: this.$scope.search.params });\n      for (let f of res.fields)\n        f.filter = this.getFilter(f);\n      let _toObject = (fields, values) => {\n        let r = {}, i = 0;\n        for (let f of fields) {\n          r[f.name] = values[i];\n          i++;\n        }\n        return r;\n      };\n      this.$scope.records = res.data.map(row => _toObject(res.fields, row));\n      this.$scope.$apply();\n      return res;\n    }\n\n    renderSearch() {\n      let el = this.app.getTemplate('query.manager.search.jinja2');\n      el = Katrid.Core.$compile(el)(this.$scope);\n      this.$element.find('#query-search-view').html(el);\n    }\n\n    async render() {\n      let templ = this.app.getTemplate('query.manager.jinja2');\n      templ = Katrid.Core.$compile(templ)(this.$scope);\n      this.$element = templ;\n      let queries = await Katrid.Services.Query.all();\n      this.$scope.queries = queries.data;\n      this.app.$element.html(templ);\n      this.$scope.$apply();\n    }\n\n    renderTable(data) {\n      let templ = this.app.getTemplate('query.manager.table.jinja2', {\n        self: this, query: this.$scope.query, records: this.records, fields: Object.values(this.fields),\n      });\n      templ = Katrid.Core.$compile(templ)(this.$scope);\n      initColumn(templ);\n      this.$element.find('#query-manager-result').html(templ);\n    }\n  }\n\n  // register the plugin\n  Katrid.Core.plugins.register((app) => {\n    // register event listener\n    $(app).on('hashchange', (event, hash) => {\n      if (hash.startsWith('#/app/query.manager/')) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        app.$scope.$parent.currentMenu = { name: 'Query Manager' };\n\n        let q = new QueryManager(app);\n        q.render();\n      }\n    });\n  });\n\n\n  function initColumn(table) {\n    // $('.checkbox-menu').sortable();\n  }\n\n  function reorder(index1, index2) {\n    $('table tr').each(function () {\n      var tr = $(this);\n      var td1 = tr.find(`td:eq(${index1})`);\n      var td2 = tr.find(`td:eq(${index2})`);\n      td1.detach().insertAfter(td2);\n    });\n  }\n\n\n})();\n","(function () {\n\n  class FileManager {\n    constructor(opts) {\n      this.$element = opts.el;\n      this.$scope = opts.scope;\n      this.service = this.$element.attr('service');\n\n      $.get(this.service)\n      .then(res => {\n        this.$scope.dirs = res.content.filter(obj => obj.type === 'dir');\n        this.$scope.files = res.content.filter(obj => obj.type === 'file');\n        this.$scope.items = res.content;\n        this.$scope.levels[this.$scope.level] = this.$scope.items;\n        this.$scope.$apply();\n      });\n    }\n\n    getPath(item) {\n      let url = item.name;\n      let parent = item.parent;\n      while (parent) {\n        url = parent.name + '/' + url;\n        parent = parent.parent;\n      }\n      return url;\n    }\n\n    expand(item) {\n      let url = this.getPath(item);\n      url = this.service + '?path=' + url;\n      $.get(url)\n        .then(res => {\n          this.$scope.items = res.content;\n          this.$scope.dirs = res.content.filter(obj => obj.type === 'dir');\n          this.$scope.files = res.content.filter(obj => obj.type === 'file');\n          res.content.map(obj => obj.parent = item);\n          this.$scope.levels[this.$scope.level] = this.$scope.items;\n          this.$scope.$apply();\n        });\n    }\n  }\n\n  Katrid.UI.uiKatrid.directive('fileManager', () => ({\n    restrict: 'E',\n    scope: {},\n    templateUrl: 'file-manager.jinja2',\n    link(scope, el) {\n      scope.level = 0;\n      scope.levels = {};\n      let fm = new FileManager({ el, scope });\n      scope.expand = item => {\n        scope.level++;\n        scope.currentItem = item;\n        fm.expand(item);\n        scope.currentPath = fm.getPath(item);\n      };\n\n      scope.backTo = level => {\n        scope.level = level;\n        console.log('back to', level);\n        scope.items = scope.levels[scope.level];\n        scope.dirs = scope.items.filter(obj => obj.type === 'dir');\n        scope.files = scope.items.filter(obj => obj.type === 'file');\n        scope.currentPath = fm.getPath(scope.items[0]);\n      };\n\n      scope.uploadFile = file => {\n        console.log('current path', scope.currentPath);\n        Katrid.Services.Upload.uploadTo('/pwapec/file-manager/upload/?path=' + (scope.currentPath || ''), file)\n          .then(() => {\n            fm.expand(scope.currentItem);\n          });\n      };\n    }\n  }));\n\n})();\n"]}