{"version":3,"sources":["../../../../../../js/src/core/index.js","../../../../../../js/src/designer/index.js","../../../../../../js/src/core/katrid.js","../../../../../../js/src/core/app.js","../../../../../../js/src/utils/index.js","../../../../../../js/src/utils/i18n.js","../../../../../../js/src/io/services.js","../../../../../../js/src/data/index.js","../../../../../../js/src/data/record.js","../../../../../../js/src/data/datasource.js","../../../../../../js/src/data/fields.js","../../../../../../js/src/ui/index.js","../../../../../../js/src/ui/actions.js","../../../../../../js/src/ui/actions.client.js","../../../../../../js/src/ui/actions.window.js","../../../../../../js/src/ui/templates.js","../../../../../../js/src/ui/actions.report.js","../../../../../../js/src/ui/reports.js","../../../../../../js/src/ui/widgets.js","../../../../../../js/src/ui/views.js","../../../../../../js/src/ui/views.info.js","../../../../../../js/src/ui/grid.js","../../../../../../js/src/ui/filters.js","../../../../../../js/src/ui/search.js","../../../../../../js/src/ui/components.js","../../../../../../js/src/ui/fields.js","../../../../../../js/src/ui/tabs.js","../../../../../../js/src/ui/fields.date.js","../../../../../../js/src/ui/mail.js","../../../../../../js/src/ui/ui.templ.js","../../../../../../js/src/ui/numpad.js","../../../../../../js/src/ui/code-editor.js","../../../../../../js/src/ui/dialogs.js","../../../../../../js/src/ui/fields.foreignkey.js","../../../../../../js/src/ui/fields.status.js","../../../../../../js/src/ui/fields.sortable.js","../../../../../../js/src/ui/jquery.number.js","../../../../../../js/src/ui/grid.totals.js","../../../../../../js/src/ui/dashboard.js","../../../../../../js/src/ui/telegram.js","../../../../../../js/src/plugins/query.manager.js","../../../../../../js/src/plugins/file-manager.js"],"names":["Katrid","Core","_","emptyText","LocalSettings","[object Object]","localSettings","searchMenuVisible","parseInt","localStorage","value","_isMobile","check","a","navigator","userAgent","vendor","window","opera","test","substr","settings","additionalModules","server","servicesProtocol","io","connect","ui","isMobile","dateInputMask","defaultView","goToDefaultViewAfterCancelInsert","goToDefaultViewAfterCancelEdit","horizontalForms","services","choicesPageLimit","speech","enabled","plugins","callbacks","app","cb","this","callback","push","socketio","document","domain","location","port","Menu","$","on","event","preventDefault","target","actionClick","attr","parent","hide","children","removeAttr","hash","loadPage","WebApplication","opts","menu","actionManager","Actions","ActionManager","title","self","loadingTimeout","overlayTimeout","loadingMsg","overlay","setTimeout","show","clearTimeout","ajaxStart","ajaxStop","item","data","clear","each","idx","el","params","menu_id","action","param","trigger","addEventListener","fetch","templates","then","res","text","ngApp","angular","module","run","$templateCache","UI","Templates","config","$locationProvider","$interpolateProvider","hashPrefix","startSymbol","endSymbol","controller","$scope","$compile","$location","$element","init","element","bootstrap","reset","evt","Event","isPropagationStopped","currentMenu","startsWith","split","URLSearchParams","k","v","entries","$parent","id","name","onHashChange","tpl","context","get","endsWith","ctx","Object","assign","env","render","Application","Error","login","async","username","password","multidb","db","Services","post","redirect","error","messages","type","message","$apply","href","$hashId","mixin","obj","iterable","member","r","row","isNumber","Number","isNaN","avg","sum","length","call","globals","i18n","languageCode","formats","catalog","initialize","plural","pluralidx","n","boolean","count","gettext","ngettext","gettext_noop","pgettext","npgettext","interpolate","get_format","sprintf","initialized","merge","Array","from","map","key","s","singular","indexOf","fmt","named","replace","match","String","slice","shift","formatType","requestManager","requestId","requests","reqId","def","Deferred","console","log","isString","JSON","parse","resolve","Service","url","scope","URL","searchParams","append","response","$fetch","method","credentials","body","stringify","headers","content-type","json","Settings","emit","channel","service","args","methName","rpcName","constructor","jsonrpc","Math","floor","random","request","req-id","req-method","Promise","reject","Accept","Content-Type","result","Dialogs","Alerts","success","forEach","msg","catch","Model","kwargs","isArray","ids","fields","Data","Fields","Field","fromArray","fieldList","values","views","keys","ViewInfo","_prepareFields","field","term","status","responseText","alert","grouping","meth","open","isObject","join","Query","super","details","with_desc","as_dict","rpc","sql","model","offset","View","Attachments","destroy","file","FormData","recordId","f","files","ajax","processData","contentType","done","attachments","Auth","$post","Upload","form","record","dataSource","refresh","Record","state","raw","pending","modified","submitted","$record","pk","RecordState","destroyed","setModified","splice","rec","created","$setDirty","_pendingChanges","fieldName","addChild","child","oldValue","newValue","propKey","fieldByName","toJSON","compare","onChange","$encode","_info","dispatchEvent","jQuery","extend","toObject","initClass","createRecord","Proxy","receiver","OneToManyField","ManyToManyField","set","Reflect","SubRecords","recs","DataSourceState","inserting","browsing","editing","loading","inactive","DEFAULT_REQUEST_INTERVAL","DataSource","readonly","$modifiedRecords","_recordIndex","recordCount","loadingRecord","_masterSource","_pageIndex","pageLimit","offsetLimit","requestInterval","pendingRequest","modifiedData","uploading","_state","fieldWatchers","$fieldLog","pageIndex","page","search","_params","_fields","view","loadingAction","_loadingAction","changing","$emit","save","closest","modal","copy","setValues","records","findById","_page","invalidate","elForm","errorMsgs","elfield","errorType","$error","$name","_validateForm","find","addClass","caption","raiseError","$invalid","errors","formElement","uiKatrid","setFocus","timeout","masterSource","_clearTimeout","info","limit","req","groups","finally","group","groupings","_loadGroup","index","rows","$params","concat","groupBy","groupName","paramValue","__str__","$expanded","$group","$level","$hasChildren","recordIndex","newIndex","_canceled","master","getModifiedData","_id","ds","ret","deleted","$deleted","undefined","$modified","$modifiedData","_getModified","getNestedData","autoRefresh","$form","validate","beforeSubmit","$eval","write","viewType","$setPristine","$setUntouched","fld","msgs","subField","focus","warn","vals","$created","_getNested","apply","_get","getById","defaultValues","loadDefaults","oldRecs","getDefaults","display_name","defaults","default","ngDefaultValues","default_values","isFunction","isUndefined","fromJSON","Date","_modifiedFields","includes","$broadcast","moveBy","p","$children","_chain","collapse","_applyResponse","control","setDirty","cols","visible","cssClass","helpText","help_text","required","onchange","nolabel","displayChoices","object","choices","template","list","StringField","fromInfo","$el","attrs","attributes","camelCase","trim","toLowerCase","b","c","toUpperCase","ngReadonly","ngShow","ngIf","ngClass","html","getTemplate","invisible","validAttributes","ngFieldChange","hasChoices","maxLength","max_length","paramTemplate","toString","val","widget","Widgets","defaultCondition","condition","arguments","DateField","moment","format","getAttributes","DateTimeField","NumericField","parseFloat","ForeignKey","TextField","PasswordField","IntegerField","FloatField","DecimalField","decimalPlaces","decimal_places","TimeField","childByName","addRecord","XmlField","JsonField","PythonCodeField","BooleanField","ImageField","noImageUrl","ngSrc","ngEmptyImage","emptyImage","keyCode","BACKSPACE","COMMA","DELETE","DOWN","END","ENTER","ESCAPE","HOME","LEFT","PAGE_DOWN","PAGE_UP","PERIOD","RIGHT","SPACE","TAB","UP","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","Action","actionType","_context","$container","addAction","removeAction","$destroy","remove","empty","act","action_type","dispatchAction","stopPropagation","ctrlKey","breadcrumb","back","isDialog","execute","ViewAction","svc","content","UrlAction","currentAction","mainAction","$attach","refreshBreadcrumb","i","path","oldAction","actionId","actionInfo","createScope","load","$new","_breadcrumb","bc","isLeaf","ClientAction","registry","tag","prototype","Views","ActionView","renderTo","btn","templateUrl","ClientView","WindowAction","viewMode","view_mode","viewModes","$on","onDataStateChange","afterCancel","history","allowedParams","view_type","oldParams","getContext","sel","selection","active_id","active_ids","_currentPath","$$path","_currentParams","$state","go","getCurrentTitle","$$search","switchView","confirm","configId","getViewInfo","Window","compile","createNew","searchModes","filter","makeUrl","lastViewType","h","templ","detach","appendTo","loadViews","toolbar","lastUrl","insert","_viewType","q","parseJSON","arg","expandGroup","collapseGroup","viewAction","confirmation","prompt","_doViewAction","promptValue","doViewAction","action_name","download","createElement","click","currentTarget","ReportAction","dispatchBindingAction","groupHeaderClick","autoReport","ok","Utils","getSetDefaultValueDialog","core","_selection","selectionLength","att","Loader","templateCache","$cache","src","noCache","nunjucks","Environment","autoescape","oldGet","prepare","loadTemplates","PRE_LOADED_TEMPLATES","put","tagName","innerHTML","base","op","templateLst","readTemplates","preProcess","getAttribute","root","DOMParser","parseFromString","firstChild","registerTemplate","tmpl","katridReportViewer","userReport","report","user_report","Reports","renderDialog","_counter","currentReport","currentUserReport","repName","Report","Params","Labels","exact","in","contains","startswith","endswith","gt","lt","between","isnull","filters","groupables","sortables","totals","Telegram","export","container","operation","value1","value2","sorting","xml","dataTypeDict","date","datetime","customizableReport","advancedOptions","label","groupable","sortable","total","autoCreate","modelChoices","getUserParams","dataType","addParam","paramName","Param","flds","aggs","result1","select2","tags","result2","result3","elParams","loaded","userParams","static","containment","start","update","renderFields","renderSorting","renderGrouping","renderParams","Operations","DefaultOperations","CharField","ModelChoices","SelectionField","TypeOperations","secondField","serviceName","multiple","defaultValue","defaultOperation","operations","getOperations","exclude","createControls","operationTemplate","xmlReport","loadFromXml","loadParams","setOperation","Widget","Component","compileButtons","sendFileCounter","sendFile","idSendFile","directive","restrict","transclude","BaseView","getTemplateContext","setContent","btns","buttons","View2","viewInfo","fieldEl","FormView","dialog","headerEl","header","parents","replaceWith","renderField","outerHTML","first","List","$observe","newViews","inline","prepend","$loaded","totalDisplayed","_cachedViews","_changeCount","dataSet","isList","inlineEditor","hasOwnProperty","gridDialog","str","charAt","substring","_incChanges","addItem","$attr","showDialog","edit","cancelChanges","setState","openItem","editItem","select","removeItem","$delete","$set","$setViewValue","$render","pasteData","cache","_queryForeignKeyField","getFieldChoices","items","txt","clipboard","readText","newObj","col","unkook","cancel","fn","me","gridEl","_destroyChildren","rowClick","ngRowClick","options","listOptions","formView","tr","thead","tfoot","ngTrClass","td","th","hasTotal","inplaceEditor","next","deleteRow","delRow","maxDigits","Intl","NumberFormat","maximumSignificantDigits","conditionsLabels","=","!=",">","<","conditionSuffix","like","not like",">=","<=","not in","SearchQuery","searchView","facet","addValue","renderFacets","SearchGroup","change","getParamValues","FacetView","separator","searchString","getDisplayValue","templateValue","SearchObject","display","onRemoveItem","query","loadItem","getParamValue","OR","FacetGroup","oldValues","_ref","_selected","SearchItem","SearchFilter","selected","removeValue","_doChange","SearchFilters","_facet","fromItem","_refresh","facets","SearchGroups","facetGrouping","groupLength","newItem","SearchResult","indent","selectItem","SearchField","_expanded","expandable","expanded","_loadChildren","$items","_value","addFacet","close","$filter","tempFilter","customFilter","fieldChange","conditionChange","controlVisible","isControlVisible","valueChange","searchValue","addCondition","applyFilter","selectAll","customSearchExpanded","SearchView","_viewMoreButtons","getItem","filterGroups","_groupLength","input","prop","fromGroup","fromField","which","move","customGroups","viewMoreButtons","setItem","getByName","subitem","removeClass","distance","fw","abs","prev","applyGroups","getParams","setSearchParams","shouldApply","SearchViewComponent","retrict","default_search","formCount","priority","ctrl","fieldAttributes","sectionAttrs","fcontrol","$ngModelController","$addControl","RegExp","require","nm","ngSum","$watch","$modelValue","bind","ngEnter","$event","ngEsc","Constructor","_enforceFocus","ajaxChoices","_timeout","cfg","allowClear","name_fields","nameFields","searchName","more","results","escapeMarkup","m","e","$viewValue","inputmask","decimal","inputDecimal","alias","groupSeparator","unmaskAsNumber","radixPoint","autoGroup","digitsOptional","placeholder","digits","$parsers","$formatters","toFixed","fromNow","link","accept","reader","FileReader","onload","readAsDataURL","setNow","toISOString","_focus","keypress","keydown","isDate","utc","regex","insertMode","connectWith","cardDraggable","cardItem","_domain","cardGroup","modelName","reorder","disableSelection","tooltip","delay","_pendingOperation","attachment","object_id","ngClick","actions","WIDGET_COUNT","DEFAULT_COLS","SmallIntegerField","templAttrs","wAttrs","spanPrefix","depends","addFieldWatcher","classes","templTag","cls","ngModel","attrName","widgetAttrs","readOnlyClass","_getWidgetAttrs","inner","innerHtml","span","spanTemplate","labelTemplate","widgetTemplate","dep","fieldChangeWatchers","onFieldChange","lbl","_gridEditor","_td","InputWidget","prependIcon","icon","FileField","imgSrc","SortableField","allowOpen","inList","string","integer","float","image","tabs","selectedTab","tab","active","onDeselect","onSelect","addTab","removeTab","newActiveIndex","vertical","isDefined","justified","$parse","heading","elm","tabsetCtrl","disabled","$transcludeFn","tabCtrl","tabContentTransclude","contents","node","hasAttribute","isTabHeading","headingElement","mask","datePicker","calendar","datetimepicker","useCurrent","icons","time","isValid","comments","masterChanged","content_subtype","hideEditor","upload","_sendMesage","showEditor","attachFile","deleteFile","MailComments","BaseTemplate","cssListClass","parentDataSource","showSelector","ths","colHtml","fieldInfo","_widget","createWidget","Boolean","t","gridClass","tbl","renderList","utils","ngChange","buttonClick","num","editor","paths","vs","language","monaco","create","minimap","automaticLayout","getModel","onDidChangeContent","getValue","setValue","Dialog","toastr","WaitDialog","parentAction","dialogTitle","elScope","targetScope","creationName","creation_name","$controller","_shown","foreignkey","newEditItem","allowCreate","formatSelection","allowCreateEdit","noCreateEdit","added","createName","err","parentModal","itemClick","$timeout","helper","$originals","$helper","clone","width","eq","stop","setSelectionRange","rangeStart","rangeEnd","createTextRange","range","moveStart","moveEnd","getSelection","part","pos","stored_range","selectionStart","selectionEnd","createRange","duplicate","expand","setEndPoint","_keydown","codes","188","110","108","109","190","191","192","220","222","221","219","173","187","186","189","shifts","96","49","50","51","52","53","54","55","56","57","48","45","61","91","93","92","59","39","44","46","47","number","decimals","dec_point","thousands_sep","u_dec","charCodeAt","regex_dec_num","regex_dec","is","keydown.format","$this","code","chara","end","setPos","negative","shiftKey","fromCharCode","metaKey","max","isFinite","altKey","keyup.format","paste.format","original","originalEvent","clipboardData","getData","origHookGet","origHookSet","isPlainObject","valHooks","u_sep","pow","round","toFixedFix","expr","dataGroup","x","grps","g","z","register","dashboardId","chart","observe","executeSql","bindto","color","pattern","Dashboard","colorPatterns","hasData","columns","c3","generate","urlParams","headerClick","className","footer","controls","$counter","$loading","DashboardWidget","$sourceScope","sourceScope","_groupBy","grid","_lastData","to","_renderGroup","unit","duration","Chart","backButton","firstRow","alasql","y","axis","legend","onclick","labels","pie","$data","$columns","size","$chart","partners","contacts","Designer","BaseDesigner","handles","startMove","moveSelection","stopMove","refreshSelection","deleteSelection","destroyHandles","top","left","_moveSelection","right","bottom","height","addGrabHandles","updateSelection","onSelectionChange","GrabHandleObject","createHandles","designer","dragging","dragObject","DragObject","surface","rect","getBoundingClientRect","handle","bottomLeft","css","middleLeft","topLeft","topRight","middleRight","bottomRight","topCenter","bottomCenter","_y","_x","screenY","screenX","setPointerCapture","pointerId","position","outerHeight","w","outerWidth","setPosition","releasePointerCapture","off","pageY","pageX","createHandle","_setGrabHandle","_dragging","mousedown","dragStart","mouseup","dragEnd","mousemove","drag","button","removeEventListener","queryChange","is_default","is_shared","ordering","reverse","getSearchView","renderSearch","renderTable","read","getFilter","_toObject","queries","all","level","levels","fm","dirs","getPath","currentItem","currentPath","backTo","uploadFile","uploadTo"],"mappings":"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","file":"katrid.full.min.js","sourcesContent":["\n// initialize the katrid namespace\nvar Katrid = {};\n","var Katrid;\n(function (Katrid) {\n    var UI;\n    (function (UI) {\n        var Designer;\n        (function (Designer) {\n            class BaseDesigner {\n                constructor(container) {\n                    this._selection = [];\n                    this.handles = [];\n                    container.addEventListener('keydown', (evt) => {\n                        switch (evt.key) {\n                            case 'ArrowUp':\n                            case 'ArrowRight':\n                            case 'ArrowDown':\n                            case 'ArrowLeft':\n                                this.startMove(evt);\n                                this.moveSelection(evt);\n                                break;\n                        }\n                    });\n                    container.addEventListener('keyup', (evt) => {\n                        switch (evt.key) {\n                            case 'ArrowUp':\n                            case 'ArrowRight':\n                            case 'ArrowDown':\n                            case 'ArrowLeft':\n                                this.stopMove(evt);\n                                this.refreshSelection(evt);\n                                break;\n                        }\n                    });\n                    container.addEventListener('keypress', (evt) => {\n                        if (evt.key === 'Delete') {\n                            evt.stopPropagation();\n                            this.deleteSelection();\n                        }\n                    });\n                }\n                deleteSelection() {\n                    for (let child of this.selection)\n                        child.$delete();\n                    this.destroyHandles();\n                }\n                moveSelection(evt) {\n                    let top = 0, right = 0, bottom = 0, left = 0;\n                    switch (evt.key) {\n                        case 'ArrowUp':\n                            top = -1;\n                            break;\n                        case 'ArrowRight':\n                            left = 1;\n                            break;\n                        case 'ArrowDown':\n                            top = 1;\n                            break;\n                        case 'ArrowLeft':\n                            left = -1;\n                            break;\n                    }\n                    this._moveSelection(top, right, bottom, left);\n                }\n                _moveSelection(top, right, bottom, left) {\n                    for (let sel of this.selection) {\n                        if (top)\n                            sel.top += top;\n                        if (right)\n                            sel.width += right;\n                        if (bottom)\n                            sel.height += bottom;\n                        if (left)\n                            sel.left += left;\n                    }\n                }\n                clearSelection() {\n                    this.destroyHandles();\n                    this.selection = [];\n                }\n                refreshSelection(evt) {\n                    this.selection = this._selection;\n                }\n                updateSelection() {\n                    this.destroyHandles();\n                    for (let sel of this.selection)\n                        this.addGrabHandles(sel);\n                }\n                get selection() {\n                    return this._selection;\n                }\n                set selection(value) {\n                    this._selection = value;\n                    this.updateSelection();\n                    this.onSelectionChange(value);\n                }\n                destroyHandles() {\n                    for (let h of this.handles)\n                        h.destroy();\n                    this.handles = [];\n                }\n                startMove(evt) {\n                    // start keyboard move\n                    this.destroyHandles();\n                }\n                stopMove(evt) {\n                    // stop keyboard move\n                    this.updateSelection();\n                }\n                onSelectionChange(value) {\n                    // on selection change event\n                }\n                addGrabHandles(obj) {\n                    // show grab handles to an object\n                    let handle = new GrabHandleObject(obj.el, this);\n                    handle.createHandles();\n                }\n            }\n            Designer.BaseDesigner = BaseDesigner;\n            class GrabHandleObject {\n                constructor(el, designer) {\n                    this.handles = [];\n                    this.dragging = false;\n                    this.el = el;\n                    this.designer = designer;\n                    // init object drag\n                    this.dragObject = new DragObject(el, designer.surface[0]);\n                }\n                createHandle() {\n                    let h = $('<label class=\"target-handle\"></label>');\n                    this.handles.push(h);\n                    return h;\n                }\n                setPosition() {\n                    let rect = this.el.getBoundingClientRect();\n                    let handle = this.bottomLeft;\n                    handle.css('left', rect.left - 3);\n                    handle.css('top', rect.bottom - 5);\n                    handle = this.middleLeft;\n                    handle.css('left', rect.left - 3);\n                    handle.css('top', rect.bottom - rect.height / 2 - 4);\n                    handle = this.topLeft;\n                    handle.css('left', rect.left - 3);\n                    handle.css('top', rect.top - 3);\n                    handle = this.topRight;\n                    handle.css('left', rect.right - 4);\n                    handle.css('top', rect.top - 3);\n                    handle = this.middleRight;\n                    handle.css('left', rect.right - 4);\n                    handle.css('top', rect.bottom - rect.height / 2 - 4);\n                    handle = this.bottomRight;\n                    handle.css('left', rect.right - 4);\n                    handle.css('top', rect.bottom - 5);\n                    handle = this.topCenter;\n                    handle.css('left', rect.right - rect.width / 2 - 4);\n                    handle.css('top', rect.top - 3);\n                    handle = this.bottomCenter;\n                    handle.css('left', rect.right - rect.width / 2 - 4);\n                    handle.css('top', rect.bottom - 5);\n                }\n                _setGrabHandle() {\n                    let handle = this.topLeft;\n                    let _y, _x;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let pos = el.position();\n                                el.css('left', (pos.left - x).toString() + 'px');\n                                el.css('top', pos.top - y);\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('height', h + y);\n                                el.css('width', (w + x).toString() + 'px');\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.topRight;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let parent = el.parent();\n                                let pos = el.position();\n                                el.css('top', pos.top - y);\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('height', h + y);\n                                el.css('width', w - x);\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].setPointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.bottomRight;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.pageY;\n                        _x = evt.pageX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = _y - evt.pageY;\n                                let x = _x - evt.pageX;\n                                let el = $(this.el);\n                                let parent = el.parent();\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('height', h - y);\n                                el.css('width', w - x);\n                                _y = evt.pageY;\n                                _x = evt.pageX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.middleLeft;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let pos = el.position();\n                                el.css('left', pos.left - x);\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('width', w + x);\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.middleRight;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let pos = el.position();\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('width', w - x);\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.bottomCenter;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let parent = el.parent();\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('height', h - y);\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.topCenter;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let parent = el.parent();\n                                let pos = el.position();\n                                el.css('top', pos.top - y);\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('height', h + y);\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.bottomLeft;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let pos = el.position();\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('height', h - y);\n                                el.css('left', pos.left - x);\n                                el.css('width', w + x);\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                }\n                createHandles() {\n                    let handle;\n                    // bottom-left\n                    this.bottomLeft = handle = this.createHandle();\n                    handle.addClass('bottom-left');\n                    this.designer.surface.append(handle);\n                    // middle-left\n                    this.middleLeft = handle = this.createHandle();\n                    handle.addClass('middle-left');\n                    this.designer.surface.append(handle);\n                    // top-left\n                    this.topLeft = handle = this.createHandle();\n                    handle.addClass('top-left');\n                    this.designer.surface.append(handle);\n                    // top-right\n                    this.topRight = handle = this.createHandle();\n                    handle.addClass('top-right');\n                    this.designer.surface.append(handle);\n                    // middle-right\n                    this.middleRight = handle = this.createHandle();\n                    handle.addClass('middle-right');\n                    this.designer.surface.append(handle);\n                    // bottom-right\n                    this.bottomRight = handle = this.createHandle();\n                    handle.addClass('bottom-right');\n                    this.designer.surface.append(handle);\n                    // top-center\n                    this.topCenter = handle = this.createHandle();\n                    handle.addClass('top-center');\n                    this.designer.surface.append(handle);\n                    // bottom-center\n                    this.bottomCenter = handle = this.createHandle();\n                    handle.addClass('bottom-center');\n                    this.designer.surface.append(handle);\n                    this.designer.handles.push(this);\n                    this.setPosition();\n                    this._setGrabHandle();\n                }\n                destroy() {\n                    for (let h of this.handles)\n                        h.remove();\n                    this.handles = [];\n                    this.dragObject.destroy();\n                }\n            }\n            Designer.GrabHandleObject = GrabHandleObject;\n            class DragObject {\n                constructor(el, container) {\n                    this.el = el;\n                    this.container = container;\n                    this._dragging = false;\n                    this.el = el;\n                    this.mousedown = (evt) => this.dragStart(evt);\n                    this.mouseup = (evt) => this.dragEnd(evt);\n                    this.mousemove = (evt) => this.drag(evt);\n                    container.addEventListener('mousedown', this.mousedown);\n                    container.addEventListener('mouseup', this.mouseup);\n                    container.addEventListener('mousemove', this.mousemove);\n                }\n                dragStart(evt) {\n                    if ((evt.button === 0) && (evt.target === this.el)) {\n                        this._y = evt.screenY;\n                        this._x = evt.screenX;\n                        this.dragging = true;\n                    }\n                }\n                dragEnd(evt) {\n                    if (this.dragging) {\n                        this.dragging = false;\n                        this.el.dispatchEvent(new Event('designerdragend'));\n                    }\n                }\n                drag(evt) {\n                    if (this.dragging) {\n                        evt.preventDefault();\n                        evt.stopPropagation();\n                        let el = $(this.el);\n                        if (this.dragging) {\n                            let y = evt.screenY;\n                            let x = evt.screenX;\n                            y = this._y - y;\n                            x = this._x - x;\n                            let el = $(this.el);\n                            let pos = el.position();\n                            el.css('left', (pos.left - x).toString() + 'px');\n                            el.css('top', (pos.top - y).toString() + 'px');\n                            this._y = evt.screenY;\n                            this._x = evt.screenX;\n                        }\n                        this.el.dispatchEvent(new Event('designerdrag'));\n                    }\n                }\n                destroy() {\n                    this.container.removeEventListener('mousedown', this.mousedown);\n                    this.container.removeEventListener('mouseup', this.mouseup);\n                    this.container.removeEventListener('mousemove', this.mousemove);\n                }\n                get dragging() {\n                    return this._dragging;\n                }\n                set dragging(value) {\n                    if (value)\n                        this.el.dispatchEvent(new Event('designerdragstart'));\n                    this._dragging = value;\n                }\n            }\n            Designer.DragObject = DragObject;\n        })(Designer = UI.Designer || (UI.Designer = {}));\n    })(UI = Katrid.UI || (Katrid.UI = {}));\n})(Katrid || (Katrid = {}));\n","Katrid.Core = {};\n\n\n(function () {\n\n  _.emptyText = '--';\n\n  class LocalSettings {\n    static init() {\n      Katrid.localSettings = new LocalSettings();\n    }\n\n    constructor() {\n    }\n\n    get searchMenuVisible() {\n      return parseInt(localStorage.searchMenuVisible) === 1;\n    }\n\n    set searchMenuVisible(value) {\n      localStorage.searchMenuVisible = value ? 1 : 0;\n    }\n  }\n\n\n  const _isMobile = function isMobile() {\n    var check = false;\n    (function (a) {\n      if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true;\n    })(navigator.userAgent || navigator.vendor || window.opera);\n    return check;\n  }();\n\n  Katrid.settings = {\n    additionalModules: [],\n    server: '',\n    servicesProtocol: (typeof io !== 'undefined' && io !== null) && io.connect ? 'io' : 'http',\n\n    // Katrid Framework UI Settings\n    ui: {\n      isMobile: _isMobile,\n      dateInputMask: true,\n      defaultView: 'list',\n      goToDefaultViewAfterCancelInsert: true,\n      goToDefaultViewAfterCancelEdit: false,\n      horizontalForms: true\n    },\n\n    services: {\n      choicesPageLimit: 10\n    },\n\n    speech: {\n      enabled: false\n    }\n  };\n\n  Katrid.Core.LocalSettings = LocalSettings;\n\n  Katrid.Core.plugins = {\n    callbacks: [],\n    init(app) {\n      for (let cb of this.callbacks)\n        cb(app);\n    },\n    register(callback) {\n      this.callbacks.push(callback);\n    }\n  };\n\n  if (Katrid.settings.servicesProtocol === 'io') {\n    Katrid.socketio = io.connect(`//${document.domain}:${location.port}/rpc`);\n  }\n\n})();\n","(function() {\n\n  class Application {\n    constructor() {\n      throw Error('erro');\n    }\n  }\n\n  class Menu {\n    constructor(app) {\n      this.app = app;\n\n      $('.menu-item-action')\n      .on('click', event => {\n        event.preventDefault();\n        let target = $(event.target);\n        this.actionClick(target.attr('href'));\n        target.parent('.dropdown-menu').hide();\n      });\n      $('li.nav-item.dropdown').on('mouseenter', function() {\n        $(this).children('.dropdown-menu').removeAttr('style');\n      });\n    }\n\n    actionClick(hash) {\n      this.app.loadPage(hash, true);\n    }\n  }\n\n  class WebApplication {\n\n    constructor(opts) {\n      Katrid.app = this;\n      this.menu = new Menu(this);\n      this.actionManager = new Katrid.Actions.ActionManager();\n      this.title = opts.title;\n      this.plugins = [\n        'ui.katrid',\n        'ngSanitize',\n      ];\n\n      let self = this;\n      $(Katrid).on('app.ready', () => {\n\n        let loadingTimeout, overlayTimeout;\n        let loadingMsg = $('#loading-msg').hide();\n        let overlay = $('#overlay').hide();\n        $(Katrid).on('fetch.before', () => {\n          loadingTimeout = setTimeout(() => loadingMsg.show(), 400);\n          overlayTimeout = setTimeout(() => {\n            loadingMsg.hide();\n            overlay.show();\n          }, 2500);\n        })\n        .on('fetch.always', () => {\n          clearTimeout(loadingTimeout);\n          clearTimeout(overlayTimeout);\n          loadingMsg.hide();\n          overlay.hide();\n        });\n\n        // TODO replace jquery ajax by fetch api\n        $(document).ajaxStart(function() {\n          loadingTimeout = setTimeout(() => loadingMsg.show(), 400);\n          overlayTimeout = setTimeout(() => {\n            loadingMsg.hide();\n            overlay.show()\n          }, 2500);\n        })\n        .ajaxStop(function() {\n          clearTimeout(loadingTimeout);\n          clearTimeout(overlayTimeout);\n          loadingMsg.hide();\n          overlay.hide();\n        });\n\n        $('a.module-selector')\n        .on('click', function(event) {\n          event.preventDefault();\n          let item = $(this);\n          let params = {};\n          params.menu_id = item.data('menu-id');\n\n          // clear history\n          Katrid.app.actionManager.clear();\n          self.loadPage(item.attr('href'));\n        })\n        .each(function(idx, el) {\n          el = $(el);\n          let params = {};\n          params.menu_id = el.data('menu-id');\n          params.action = $(`.menu-item-action[data-parent-id=\"${params.menu_id}\"]:first`).data('action-id');\n          el.attr('href', '#/app/?' + $.param(params));\n        });\n\n        if (location.hash === '')\n          $('a.module-selector:first').trigger('click');\n        else\n          this.loadPage(location.hash);\n      });\n\n      window.addEventListener('hashchange', (event) => {\n        this.loadPage(location.hash);\n      });\n\n      // initialize sync resources\n      fetch(opts.templates || '/web/client/templates/')\n      .then(res => res.text())\n      .then((templates) => {\n        if (templates)\n          templates = '<templates>' + templates + '</templates>';\n\n        // initialize angular app (katrid module)\n        this.ngApp = angular.module('katridApp', this.plugins)\n        .run(['$templateCache', ($templateCache) => {\n          this.$templateCache = $templateCache;\n          Katrid.UI.templates = new Katrid.UI.Templates(this, templates);\n        }])\n        // config hash\n        .config(['$locationProvider', '$interpolateProvider', function ($locationProvider, $interpolateProvider) {\n          $locationProvider.hashPrefix('');\n          $interpolateProvider.startSymbol('${');\n          $interpolateProvider.endSymbol('}');\n        }]);\n\n        this.ngApp.controller('AppController', ['$scope', '$compile', '$location', function($scope, $compile, $location) {\n          Katrid.Core.$compile = $compile;\n          Katrid.app.$scope = $scope;\n          Katrid.app.$location = $location;\n          $scope._ = _;\n          Katrid.app.$element = $('#katrid-action-view');\n          $(Katrid).trigger('app.ready', [Katrid.app]);\n        }]);\n\n        this.ngApp.controller('ActionController', ['$scope', function($scope) {\n        }]);\n\n        Katrid.Core.plugins.init(this);\n        $(Katrid).trigger('loaded', [Katrid.app]);\n\n      });\n    }\n\n    static bootstrap(opts) {\n      let app = new WebApplication(opts);\n      $(Katrid).on('loaded', function() {\n        angular.element(function () {\n          angular.bootstrap(document, ['katridApp']);\n        });\n      });\n      return app;\n    }\n\n    async loadPage(hash, reset) {\n      let evt = $.Event('hashchange');\n      $(this).trigger(evt, [hash, reset]);\n      // check if any plugin has stopped the event flow\n      if (!evt.isPropagationStopped()) {\n        this.$scope.currentMenu = '';\n        // load the page content\n        if (hash.startsWith('#/app/?'))\n          hash = hash.split('#/app/?')[1];\n        hash = new URLSearchParams(hash);\n        let params = {};\n        for (let [k, v] of hash.entries())\n          params[k] = v;\n\n        if (params.menu_id)\n          $('a.module-selector');\n\n        if (!this.$scope.$parent.currentMenu || (params.menu_id && (this.$scope.$parent.currentMenu.id != params.menu_id))) {\n          this.$scope.$parent.currentMenu = { id: params.menu_id, name: $(`.module-selector[data-menu-id=\"${params.menu_id}\"]`).text() };\n        }\n\n        if (('action' in params) || ('model' in params))\n          await this.actionManager.onHashChange(params, reset);\n      }\n    }\n\n    getTemplate(tpl, context) {\n      let text = this.$templateCache.get(tpl);\n      if (tpl.endsWith('jinja2')) {\n        let ctx = {\n          _: _,\n        };\n        if (context)\n          Object.assign(ctx, context);\n        return Katrid.UI.Templates.env.render(tpl, ctx);\n      }\n      else if (tpl.endsWith('pug')) {\n        text = text(context);\n      }\n      return text;\n    }\n\n    static get context() {\n      return this.actionManager.context;\n    }\n\n  }\n\n  Katrid.Core.Application = Application;\n  Katrid.Core.WebApplication = WebApplication;\n\n})();\n\nangular.module('basicApp', [])\n.controller('LoginController', ['$scope', function($scope) {\n  $scope.login = async (username, password, multidb, db) => {\n    let res;\n    if (multidb)\n      res = await Katrid.Services.post('/web/db/', { db });\n    if ((multidb && res.redirect) || !multidb) {\n      res = await Katrid.Services.post('/web/login/', { username, password });\n      if (res.error) {\n        $scope.messages = [{ type: 'danger', message: res.message }];\n        $scope.$apply();\n      } else {\n        $scope.messages = [{ type: 'success', message: res.message }];\n        $scope.$apply();\n        setTimeout(() => window.location.href = res.redirect);\n      }\n    }\n  }\n}]);\n","(function () {\n\n  Katrid.$hashId = 0;\n\n  _.mixin({\n    hash(obj) {\n      if (!obj.$hashId) {\n        obj.$hashId = ++Katrid.$hashId;\n      }\n      return obj.$hashId;\n    }\n  });\n\n  _.mixin({\n    sum(iterable, member) {\n      let r = 0;\n      if (iterable)\n        for (let row of iterable) {\n          let v = row[member];\n          if (!_.isNumber(v))\n            v = Number(v);\n          if (_.isNaN(v))\n            v = 0;\n          r += v;\n        }\n      return r;\n    },\n    avg(iterable, member) {\n      let r = 0;\n      return _.sum(iterable, member) / iterable.length;\n    }\n  })\n\n}).call(this);\n","(function() {\n\n  const globals = this;\n\n  // Internationalization\n  Katrid.i18n = {\n    languageCode: 'pt-BR',\n    formats: {},\n    catalog: {},\n\n    initialize(plural, catalog, formats) {\n      Katrid.i18n.plural = plural;\n      Katrid.i18n.catalog = catalog;\n      Katrid.i18n.formats = formats;\n      if (plural) {\n        Katrid.i18n.pluralidx = function (n) {\n          if (plural instanceof boolean) {\n            if (plural) {\n              return 1;\n            } else {\n              return 0;\n            }\n          } else {\n            return plural;\n          }\n        };\n      } else {\n        Katrid.i18n.pluralidx = function (n) {\n          if (count === 1) {\n            return 0;\n          } else {\n            return 1;\n          }\n        };\n      }\n\n      globals.pluralidx = Katrid.i18n.pluralidx;\n      globals.gettext = Katrid.i18n.gettext;\n      globals.ngettext = Katrid.i18n.ngettext;\n      globals.gettext_noop = Katrid.i18n.gettext_noop;\n      globals.pgettext = Katrid.i18n.pgettext;\n      globals.npgettext = Katrid.i18n.npgettext;\n      globals.interpolate = Katrid.i18n.interpolate;\n      globals.get_format = Katrid.i18n.get_format;\n\n      _.mixin({\n        gettext: Katrid.i18n.gettext,\n        sprintf: sprintf,\n      });\n\n      return Katrid.i18n.initialized = true;\n    },\n\n    merge(catalog) {\n      return Array.from(catalog).map((key) =>\n        (Katrid.i18n.catalog[key] = catalog[key]));\n    },\n\n    gettext(s) {\n      const value = Katrid.i18n.catalog[s];\n      if (value != null) {\n        return value;\n      } else {\n        return s;\n      }\n    },\n\n    gettext_noop(s) {\n      return s;\n    },\n\n    ngettext(singular, plural, count) {\n      const value = Katrid.i18n.catalog[singular];\n      if (value != null) {\n        return value[Katrid.i18n.pluralidx(count)];\n      } else if (count === 1) {\n        return singular;\n      } else {\n        return plural;\n      }\n    },\n\n    pgettext(s) {\n      let value = Katrid.i18n.gettext(s);\n      if (value.indexOf('\\x04') !== -1) {\n        value = s;\n      }\n      return value;\n    },\n\n    npgettext(ctx, singular, plural, count) {\n      let value = Katrid.i18n.ngettext(ctx + '\\x04' + singular, ctx + '\\x04' + plural, count);\n      if (value.indexOf('\\x04') !== -1) {\n        value = Katrid.i18n.ngettext(singular, plural, count);\n      }\n      return value;\n    },\n\n    interpolate(fmt, obj, named) {\n      if (named) {\n        fmt.replace(/%\\(\\w+\\)s/g, match => String(obj[match.slice(2, -2)]));\n      } else {\n        fmt.replace(/%s/g, match => String(obj.shift()));\n      }\n\n      return {\n        get_format(formatType) {\n          const value = Katrid.i18n.formats[formatType];\n          if (value != null) {\n            return value;\n          } else {\n            return formatType;\n          }\n        }\n      };\n    }\n  };\n\n})();\n","(function () {\n\n  let requestManager;\n  class RequestManager {\n    constructor() {\n      this.requestId = 0;\n      this.requests = {};\n    }\n\n    request() {\n      const reqId = ++requestManager.requestId;\n      const def = new $.Deferred();\n      this.requests[reqId] = def;\n      def.requestId = reqId;\n      return def;\n    }\n  }\n\n\n  if (Katrid.socketio) {\n    requestManager = new RequestManager();\n\n    Katrid.socketio.on('connect', () => console.log(\"I'm connected!\"));\n\n    Katrid.socketio.on('api', function (data) {\n      if (_.isString(data)) {\n        data = JSON.parse(data);\n      }\n      const def = requestManager.requests[data['req-id']];\n      return def.resolve(data);\n    });\n  }\n\n\n  class Service {\n    static get url() { return '/api/rpc/' };\n\n    constructor(name, scope) {\n      this.name = name;\n    }\n\n    static $fetch(url, config, params) {\n      if (params) {\n        url = new URL(url);\n        Object.entries(params).map((k, v) => url.searchParams.append(k, v));\n      }\n      // send events\n      $(Katrid).trigger('fetch.before');\n      return fetch(url, config)\n      .then(response => {\n        $(Katrid).trigger('fetch.done');\n        return response;\n      });\n    }\n\n    static $post(url, data, params) {\n      return this.$fetch(url, {\n        method: 'POST',\n        credentials: \"same-origin\",\n        body: JSON.stringify(data),\n        headers: {\n          'content-type': 'application/json',\n        }\n      }, params)\n      .then(res => res.json());\n    }\n\n    delete(name, params, data) {\n    }\n\n    get(name, params) {\n      if (Katrid.Settings.servicesProtocol === 'ws') {\n        // Using websocket protocol\n        return Katrid.socketio.emit('api', {channel: 'rpc', service: this.name, method: name, data, args: params});\n      } else {\n        // Using http protocol\n        const methName = this.name ? this.name + '/': '';\n        const rpcName = Katrid.Settings.server + this.constructor.url + methName + name + '/';\n        return $.get(rpcName, params);\n      }\n    }\n\n    post(name, data, params) {\n      let context;\n      if (Katrid.app)\n        context = Katrid.app.context;\n      if (!data)\n        data = {};\n      if (context)\n        data.context = context;\n\n      data = {\n        jsonrpc: '2.0',\n        method: name,\n        params: data,\n        id: Math.floor(Math.random() * 1000 * 1000 * 1000)\n      };\n\n      // Check if protocol is socket.io\n      if (Katrid.settings.servicesProtocol === 'io') {\n        const def = requestManager.request();\n        Katrid.socketio.emit('api',\n          {\n            \"req-id\": def.requestId,\n            \"req-method\": 'POST',\n            service: this.name,\n            method: name,\n            data,\n            args: params\n          }\n        );\n        return def;\n\n        // Else, using ajax\n      } else {\n        const methName = this.name ? this.name + '/': '';\n        let rpcName = Katrid.settings.server + this.constructor.url + methName + name + '/';\n        if (params) {\n          rpcName += `?${$.param(params)}`;\n        }\n        return new Promise(\n          (resolve, reject) => {\n\n            fetch(rpcName, {\n              method: 'POST',\n              body: JSON.stringify(data),\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n              },\n            })\n            .then(res => res.json())\n            .then(res => {\n              if (res.error)\n                reject(res.error);\n              else {\n                if (res.result) {\n                  if (res.result.message)\n                    Katrid.UI.Dialogs.Alerts.success(res.result.message);\n                  else if (res.result.messages)\n                    res.result.messages.forEach(function (msg) {\n                      Katrid.UI.Dialogs.Alerts.success(msg);\n                    });\n                }\n                resolve(res.result);\n              }\n            })\n            .catch(res => reject(res));\n\n          }\n        );\n      }\n    }\n  }\n\n\n  class Model extends Service {\n    searchName(name) {\n      if (_.isString(name))\n        name = { args: name };\n      return this.post('search_name', name);\n    }\n\n    createName(name) {\n      let kwargs = {name};\n      return this.post('create_name', { kwargs: kwargs });\n    }\n\n    search(data, params) {\n      return this.post('search', { kwargs: data }, params);\n    }\n\n    destroy(id) {\n      if (!_.isArray(id))\n        id = [id];\n      return this.post('destroy', { kwargs: {ids: id} });\n    }\n\n    getById(id) {\n      return this.post('get', { args: [id] });\n    }\n\n    getDefaults(kwargs) {\n      return this.post('get_defaults', { kwargs });\n    }\n\n    copy(id) {\n      return this.post('copy', { args: [id] });\n    }\n\n    static _prepareFields(res) {\n      if (res) {\n        res.fields = Katrid.Data.Fields.Field.fromArray(res.fields);\n        res.fieldList = Object.values(res.fields);\n        if (res.views) {\n          Object.values(res.views).map(v => v.fields = Katrid.Data.Fields.Field.fromArray(v.fields));\n          Object.keys(res.views).map(k => res.views[k] = new Katrid.UI.ViewInfo(res.views[k]));\n        }\n      }\n      return res;\n    }\n\n    getViewInfo(data) {\n      return this.post('get_view_info', { kwargs: data })\n      .then(this.constructor._prepareFields);\n    }\n\n    async loadViews(data) {\n      return this.post('load_views', { kwargs: data })\n      .then(this.constructor._prepareFields);\n    }\n\n    getFieldsInfo(data) {\n      return this.post('get_fields_info', { kwargs: data })\n      .then(this.constructor._prepareFields);\n    }\n\n    getFieldChoices(field, term, kwargs) {\n      return this.post('get_field_choices', { args: [ field, term ], kwargs: kwargs } );\n    }\n\n    doViewAction(data) {\n      return this.post('do_view_action', { kwargs: data });\n    }\n\n    write(data, params) {\n      return new Promise((resolve, reject) => {\n        this.post('write', {kwargs: {data}}, params)\n        .then((res) => {\n          Katrid.UI.Dialogs.Alerts.success(Katrid.i18n.gettext('Record saved successfully.'));\n          resolve(res);\n        })\n        .catch(res => {\n          if ((res.status === 500) && res.responseText)\n            alert(res.responseText);\n          else\n            Katrid.UI.Dialogs.Alerts.error(Katrid.i18n.gettext('Error saving record changes'));\n          reject(res);\n        });\n      });\n    }\n\n    groupBy(grouping, params) {\n      return this.post('group_by', { kwargs: { grouping, params } });\n    }\n\n    autoReport() {\n      return this.post('auto_report', { kwargs: {} });\n    }\n\n    rpc(meth, args, kwargs) {\n      // execute rpc\n      return new Promise((resolve, reject) => {\n        this.post(meth, { args: args, kwargs: kwargs })\n        .then(res => {\n          // open a document\n          if (res && res.open)\n            window.open(res.open);\n          resolve(res);\n        })\n        .catch(res => {\n          if (res.messages && _.isObject(res.messages))\n            for (let msg of Object.values(res.messages))\n              Katrid.UI.Dialogs.Alerts.error(msg.join('\\n'));\n          else\n            Katrid.UI.Dialogs.Alerts.error(res.message);\n          reject(res);\n        });\n      });\n    }\n  }\n\n\n  // Represents a server query\n  class Query extends Model {\n    constructor() {\n      super('ir.query');\n    }\n\n    static read(config) {\n      // read data from server\n      let details, id, params;\n      if (_.isObject(config)) {\n        details = config.details;\n        params = config.params;\n        id = config.id;\n      } else\n        id = config;\n      return (new Query()).post('read', { args: [id], kwargs: { with_desc: details, params, as_dict: config.as_dict } });\n    }\n\n    static all() {\n      return (new Query()).rpc('all');\n    }\n\n    static executeSql(sql) {\n      return (new Query()).post('execute_sql', { args: [sql] });\n    }\n  }\n\n\n  class Data extends Service {\n    static get url() { return '/web/data/' };\n\n    reorder(model, ids, field='sequence', offset=0) {\n      return this.post('reorder', { args: [ model, ids, field, offset ] });\n    }\n  }\n\n  class Attachments {\n    static destroy(id) {\n      let svc = new Model('ir.attachment');\n      svc.destroy(id);\n    }\n\n    static upload(file, scope=null) {\n      let data = new FormData();\n      if (scope === null) scope = angular.element(file).scope();\n      data.append('model', scope.model.name);\n      data.append('id', scope.recordId);\n      for (let f of file.files) data.append('attachment', f, f.name);\n      return $.ajax({\n        url: '/web/content/upload/',\n        type: 'POST',\n        data: data,\n        processData: false,\n        contentType: false\n      })\n      .done((res) => {\n        console.log('attachments', scope.attachments, scope);\n        if (!scope.attachments)\n          scope.attachments = [];\n        if (res)\n          for (let obj of res) scope.attachments.push(obj);\n        scope.$apply();\n      });\n    }\n  }\n\n  class View extends Model {\n    constructor() {\n      super('ui.view');\n    }\n\n    fromModel(model) {\n      return this.post('from_model', null, {model});\n    }\n  }\n\n\n  class Actions extends Model {\n    static load(action) {\n      let svc = new Model('ir.action');\n      return svc.post('load', { args: [action] });\n    }\n  }\n\n\n  class Auth extends Service {\n    static login(username, password) {\n      return this.$post('/web/login/', { username: username, password: password });\n    }\n  }\n\n  class Upload {\n    static sendFile(service, file) {\n      let form = new FormData();\n      form.append('files', file.files[0]);\n      let scope = angular.element(file).scope();\n      let url = `/web/file/upload/${scope.model.name}/${service}/`;\n      if (scope.record && scope.record.id)\n        form.append('id', scope.record.id);\n      // try to detect the current datasource to be refreshed if needed\n      let dataSource = scope.action.dataSource;\n      if (!dataSource) {\n        dataSource = scope.$parent.dataSource;\n        let s = scope.$parent;\n        while (s) {\n          dataSource = s.dataSource;\n          if (dataSource)\n            break;\n          s = scope.$parent;\n        }\n      }\n      $.ajax({\n        url: url,\n        data: form,\n        processData: false,\n        contentType: false,\n        type: 'POST',\n        success: (data) => {\n          dataSource.refresh();\n          Katrid.UI.Dialogs.Alerts.success('Operação realizada com sucesso.')\n        }\n      });\n    }\n\n    static uploadTo(url, file) {\n      let form = new FormData();\n      form.append('files', file.files[0]);\n      return $.ajax({\n        url: url,\n        data: form,\n        processData: false,\n        contentType: false,\n        type: 'POST',\n        success: (data) => {\n          Katrid.UI.Dialogs.Alerts.success('Arquivo enviado com sucesso!');\n        }\n      });\n    }\n  }\n\n  this.Katrid.Services = {\n    Data,\n    View,\n    data: new Data('', ),\n    Attachments,\n    Service,\n    Model,\n    Query,\n    Auth,\n    Upload,\n    Actions,\n    post(url, data) {\n      // post json data to server\n      return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n      }).then(res => res.json());\n    }\n  };\n\n})();\n\n","Katrid.Data = {};\n","(function() {\n\n  class Record {\n    constructor(data, dataSource, state) {\n      // current record data\n      this.raw = data;\n      // modified data only\n      this.data = {};\n      // original record\n      // this.old = jQuery.extend({}, data);\n      this.dataSource = dataSource;\n      this.pending = null;\n      this.modified = false;\n      this.children = [];\n      this.state = state;\n      this.submitted = false;\n      data.$record = this;\n    }\n\n    get scope() {\n      return this.dataSource.scope;\n    }\n\n    get pk() {\n      return this.raw.id;\n    }\n\n    $delete() {\n      this.state = RecordState.destroyed;\n      if (this.pk)\n        this.setModified();\n      else if (this.parent.children.indexOf(this) > -1)\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    _prepareRecord(rec, parent) {\n      console.log(rec.constructor.name);\n      return;\n      let getValue = (v) => {\n        if (_.isObject(v))\n          return this._prepareRecord(v, rec);\n        else if (_.isArray(v))\n          return v.map(obj => getValue(obj));\n        return v;\n      };\n\n      let res = {};\n      for (let [k, v] of Object.entries(rec)) {\n        // prevent circular json object\n        if (parent && _.isObject(v))\n          continue;\n        res[k] = getValue(v);\n        if (v)\n        console.log(v.constructor.name);\n      }\n      if (this.dataSource.parent && !parent) {\n        let field = this.dataSource.parent.scope.view.fields[this.dataSource.fieldName]._info.field;\n        res[field] = this.dataSource.parent.record.$record._prepareRecord(this.dataSource.parent.record);\n      }\n      return res;\n    }\n\n    setModified(field) {\n      if (!this.modified && (this.state !== RecordState.destroyed)) {\n        if (this.pk)\n          this.state = RecordState.modified;\n        else\n          this.state = RecordState.created;\n      }\n      if (field)\n        this.dataSource.$setDirty(field);\n      this.dataSource._pendingChanges = true;\n      this.modified = true;\n\n      if (this.parent && this.scope.fieldName) {\n        this.parent.setModified(this.scope.fieldName);\n        this.parent.addChild(this);\n      }\n    }\n\n    get parent() {\n      return this.dataSource.parent && this.dataSource.parent.record.$record;\n    }\n\n    addChild(child) {\n      this.setModified(child.scope.fieldName);\n      if (this.children.indexOf(child) === -1) {\n        this.children.push(child);\n      }\n    }\n\n    compare(oldValue, newValue) {\n      if (_.isArray(oldValue) && _.isArray(newValue))\n        return oldValue.join(',') !== newValue.join(',');\n      return oldValue != newValue;\n    }\n\n    set(propKey, value) {\n      let field = this.dataSource.fieldByName(propKey);\n      if (field) {\n        let oldValue = this.raw[propKey];\n        value = field.toJSON(value);\n        // check if field value has been changed\n        if (this.compare(oldValue, value)) {\n          this.setModified(propKey);\n          this.data[propKey] = value;\n          this.modified = true;\n          // send field change event\n          if (field.onChange) {\n            let rec = this.$encode(this.raw);\n            rec[propKey] = value;\n\n            // let's send parent data\n            if (this.dataSource.parent && this.dataSource.fieldName) {\n              let field = this.dataSource.parent.fields[this.dataSource.fieldName]._info.field;\n              rec[field] = this.$encode(this.dataSource.parent.record);\n            }\n\n            // send prepared data\n            this.dataSource.dispatchEvent('field_change_event', [propKey, rec]);\n          }\n        }\n      }\n      return true;\n    }\n\n    $encode(obj) {\n      if (_.isArray(obj))\n        return obj.map(v => this.$encode(v));\n      else if (_.isObject(obj)) {\n        let r = {};\n        for (let [k, v] of Object.entries(obj))\n          if (!k.startsWith('$'))\n            r[k] = this.$encode(v);\n        return r;\n      } else\n        return obj;\n    }\n\n    $new() {\n      return Record(this.raw);\n    }\n\n    toObject() {\n      let data = jQuery.extend({}, this.data);\n      if (this.pk)\n        data.id = this.pk;\n      for (let child of this.children) {\n        if (!(child.scope.fieldName in data))\n          data[child.scope.fieldName] = [];\n        if (child.state === RecordState.created)\n          data[child.scope.fieldName].push({ action: 'CREATE', values: child.toObject() });\n        else if (child.state === RecordState.modified)\n          data[child.scope.fieldName].push({ action: 'UPDATE', values: child.toObject() });\n        else if (child.state === RecordState.destroyed)\n          data[child.scope.fieldName].push({ action: 'DESTROY', id: child.pk });\n      }\n      return data;\n    }\n  }\n\n  class SubRecords {\n    constructor(recs) {\n      this.recs = recs;\n    }\n\n    append(rec) {\n      if (this.recs.indexOf(rec) === -1)\n        this.recs.push(rec);\n    }\n  }\n\n\n  function createRecord(rec, dataSource) {\n    new Record(rec, dataSource);\n    return new Proxy(rec, {\n      set(target, propKey, value, receiver) {\n        let scope = dataSource.scope;\n        let field = dataSource.fieldByName(propKey);\n        if (!propKey.startsWith('$$')) {\n          if (!propKey.startsWith('$') && scope && field && !(_.isArray(value) && ((field instanceof Katrid.Data.Fields.OneToManyField) || (field instanceof Katrid.Data.Fields.ManyToManyField)))) {\n            rec.$record.set(propKey, value);\n          }\n        }\n        return Reflect.set(target, propKey, value, receiver);\n      }\n    })\n  }\n\n  class RecordState {\n    static initClass() {\n      this.destroyed = 'destroyed';\n      this.created = 'created';\n      this.modified = 'modified';\n    }\n  }\n  RecordState.initClass();\n\n  Katrid.Data.RecordState = RecordState;\n  Katrid.Data.createRecord = createRecord;\n  Katrid.Data.SubRecords = SubRecords;\n\n})();\n","(function () {\n\n  class DataSourceState {\n    static initClass() {\n      this.inserting = 'inserting';\n      this.browsing = 'browsing';\n      this.editing = 'editing';\n      this.loading = 'loading';\n      this.inactive = 'inactive';\n    }\n  }\n  DataSourceState.initClass();\n\n  DEFAULT_REQUEST_INTERVAL = 300;\n\n  class DataSource {\n    constructor(scope, action) {\n      this.readonly = false;\n      this.$modifiedRecords = [];\n      // this.onFieldChange = this.onFieldChange.bind(this);\n      this.scope = scope;\n      this.action = action;\n      this._recordIndex = 0;\n      this.recordCount = null;\n      this.loading = false;\n      this.loadingRecord = false;\n      this._masterSource = null;\n      this._pageIndex = 0;\n      this.pageLimit = 100;\n      this.offset = 0;\n      this.offsetLimit = 0;\n      this.requestInterval = DEFAULT_REQUEST_INTERVAL;\n      this.pendingRequest = null;\n      this.fieldName = null;\n      this.children = [];\n      this.modifiedData = null;\n      this.uploading = 0;\n      this._state = null;\n      this.fieldWatchers = [];\n      this._pendingChanges = false;\n      this.recordId = null;\n      scope.$fieldLog = {};\n    }\n\n    get pageIndex() {\n      return this._pageIndex;\n    }\n\n    set pageIndex(page) {\n      this._pageIndex = page;\n      console.log('goto page', page);\n      this.search(this._params, page, this._fields, DEFAULT_REQUEST_INTERVAL);\n    }\n\n    get fields() {\n      return this.scope.view.fields;\n    }\n\n    get loadingAction() {\n      return this._loadingAction;\n    }\n\n    set loadingAction(v) {\n      if (v) this.requestInterval = 0;\n      else this.requestInterval = DEFAULT_REQUEST_INTERVAL;\n      this._loadingAction = v;\n    }\n\n    async cancel() {\n      if (!this.changing)\n        return;\n\n      this._recordIndex = null;\n      this._pendingChanges = false;\n      if (this.state === DataSourceState.editing)\n        await this.refresh();\n      this.state = DataSourceState.browsing;\n\n      this.scope.$emit('afterCancel', this);\n    }\n\n    async saveAndClose() {\n      // Save changes and close dialog\n      let r = await this.save(false);\n      this.scope.$emit('saveAndClose', this.scope, r);\n      return this.action.$element.closest('.modal').modal('hide');\n    }\n\n\n    async copy(id) {\n      let res = await this.model.copy(id);\n      this.record = {};\n      this.state = DataSourceState.inserting;\n      this.setValues(res);\n      return res;\n    }\n\n    findById(id) {\n      for (let rec of this.scope.records)\n        if (rec.id === id)\n          return rec;\n      return null;\n    }\n\n    hasKey(id) {\n      return this.findById(id) !== null;\n    }\n\n    refresh(data) {\n      let r;\n      if (data) {\n        // Refresh current record\n        r = this.get(data[0]);\n      } else if (this.scope.record && this.scope.record.id) {\n        r = this.get(this.scope.record.id);\n      } else {\n        r = this.search(this._params, this._page);\n      }\n      r.then(() => {\n        for (let child in this.children)\n          if (child.invalidate) {\n            child.invalidate(this.recordId);\n            child.scope.$apply();\n          }\n      });\n      return r;\n    }\n\n    _validateForm(elForm, form, errorMsgs) {\n      let elfield;\n      for (let errorType in form.$error)\n        if (errorType === 'required')\n        for (let child of Array.from(form.$error[errorType])) {\n          if (child.$name.startsWith('grid-row-form'))\n            elfield = this._validateForm(elForm.find('#' + child.$name), child, errorMsgs);\n          else {\n            elfield = elForm.find(`.form-field[name=\"${child.$name}\"]`);\n            elfield.addClass('ng-touched');\n            let scope = angular.element(elForm).scope();\n            const field = scope.view.fields[child.$name];\n            errorMsgs.push(`<span>${field.caption}</span><ul><li>${Katrid.i18n.gettext('This field cannot be empty.')}</li></ul>`);\n          }\n        }\n        else\n          console.log(form.$error[errorType]);\n\n      return elfield;\n    }\n\n    validate(raiseError=true) {\n      if (this.scope.form.$invalid) {\n        let elfield;\n        let errors = [];\n        let s = `<span>${Katrid.i18n.gettext('The following fields are invalid:')}</span><hr>`;\n        const el = this.scope.formElement;\n        elfield = this._validateForm(el, this.scope.form, errors);\n        Katrid.ui.uiKatrid.setFocus(elfield);\n        s += errors.join('');\n        Katrid.ui.Dialogs.Alerts.error(s);\n        if (raiseError)\n          throw Error('Error validating form: ' + s);\n        return false;\n      }\n      return true;\n    }\n\n    indexOf(obj) {\n      if (this.scope.records)\n        return this.scope.records.indexOf(this.findById(obj.id));\n    }\n\n    search(params, page, fields, timeout) {\n      let master = this.masterSource;\n      // if (this.groups && !this.groups.length && this.scope.defaultGrouping) {\n      //   let g = {\n      //     context: {\n      //       grouping: [this.scope.defaultGrouping]\n      //     }\n      //   };\n      //   this.groupBy(g);\n      //   return;\n      // }\n      this._params = params;\n      this._page = page;\n      this._fields = fields;\n      this._clearTimeout();\n      this.pendingRequest = true;\n      this.loading = true;\n      page = page || 1;\n      this._pageIndex = page;\n      let domain;\n      if (this.action)\n        domain = this.action.info.domain;\n      if (domain) {\n        domain = JSON.parse(domain);\n      }\n      if (_.isObject(fields))\n        fields = Object.keys(fields);\n      params = {\n        count: true,\n        page,\n        params,\n        fields,\n        domain,\n        limit: this.pageLimit,\n      };\n\n      return new Promise(\n        (resolve, reject) => {\n\n          let req = () => {\n            this.model.search(params)\n            .catch(res => {\n              return reject(res);\n            })\n            .then(res => {\n              if (this.pageIndex > 1) {\n                this.offset = ((this.pageIndex - 1) * this.pageLimit) + 1;\n              } else {\n                this.offset = 1;\n              }\n              this.scope.$apply(() => {\n                if (res.count != null)\n                  this.recordCount = res.count;\n\n                let data = res.data;\n                if (this.readonly)\n                  this.scope.records = data;\n                else\n                  this.scope.records = data.map((obj) => Katrid.Data.createRecord(obj, this));\n                // list view uses only groups\n                this.scope.groups = this.scope.records;\n                if (this.pageIndex === 1) {\n                  return this.offsetLimit = this.scope.records.length;\n                } else {\n                  return this.offsetLimit = (this.offset + this.scope.records.length) - 1;\n                }\n              });\n              return resolve(res);\n            })\n            .finally(() => {\n              this.pendingRequest = false;\n              this.scope.$apply(() => {\n                this.loading = false;\n              });\n            });\n          };\n\n          timeout = 0;\n\n          if (((this.requestInterval > 0) || timeout) && (timeout !== false))\n            this.pendingRequest = setTimeout(req, this.requestInterval);\n          else req();\n        }\n      );\n    }\n\n    async groupBy(group, params) {\n      this._params = [];\n      console.log('group by', group, params);\n      if (!group || !group.length) {\n        this.groups = [];\n        this.action.groups = null;\n        this.scope.groups = null;\n        this.search(params);\n        return;\n      }\n      this.scope.action.groups = group;\n      this.scope.groupings = [];\n      this.groups = group;\n      this.scope.groups = await this._loadGroup(group, 0, params);\n      return this.scope.$apply();\n    }\n\n    async _loadGroup(group, index, params, parent) {\n      let rows = [];\n      if (!params)\n        params = [];\n      if (parent && parent.$params)\n        params = params.concat(parent.$params);\n      let res = await this.model.groupBy([group[index]], params);\n      const groupName = group[index];\n      for (let r of res) {\n        let s = r[groupName];\n        let paramValue;\n        if ($.isArray(s)) {\n          paramValue = s[0];\n          s = s[1];\n        } else {\n          paramValue = s;\n        }\n        r.__str__ = s;\n        r.$expanded = false;\n        r.$group = groupName;\n        r.$params = [];\n        if (parent)\n          r.$params = r.$params.concat(parent.$params);\n        let params = {};\n        params[groupName] = paramValue;\n        r.$params.push(params);\n        r.$level = index;\n        r.$hasChildren = true;\n\n        // add group object to list\n        rows.push(r);\n      }\n      return rows;\n    }\n\n    goto(index) {\n      return this.recordIndex = index;\n    }\n\n    moveBy(index) {\n      const newIndex = (this._recordIndex + index);\n      if ((newIndex > -1) && (newIndex < this.scope.records.length))\n        this.recordIndex = newIndex;\n    }\n\n    _clearTimeout() {\n      this.loading = false;\n      this.loadingRecord = false;\n      this._canceled = true;\n      clearTimeout(this.pendingRequest);\n    }\n\n    set masterSource(master) {\n      this._masterSource = master;\n      master.children.push(this);\n    }\n\n    get masterSource() {\n      return this._masterSource;\n    }\n\n    applyModifiedData(form, element, record) {\n      const data = this.getModifiedData(form, element, record);\n      const _id = _.hash(record);\n      if (data) {\n        let ds = this.modifiedData;\n        if ((ds == null)) {\n          ds = {};\n        }\n        let obj = ds[_id];\n        if (!obj) {\n          obj = {};\n          ds[_id] = obj;\n        }\n        for (let attr in data) {\n          const v = data[attr];\n          obj[attr] = v;\n          //record[attr] = v;\n        }\n\n        this.modifiedData = ds;\n        this.masterSource.scope.form.$setDirty();\n      }\n      return data;\n    }\n\n    getNestedData() {\n      let ret = {};\n      for (let child of this.children)\n        if (child.$modifiedRecords.length) {\n          let res = [];\n          let deleted = [];\n          for (let rec of child.$modifiedRecords) {\n            if (rec.$deleted) {\n              deleted.push(rec);\n              if ((rec.id !== null) && (rec.id !== undefined))\n                res.push({id: rec.id, action: 'DESTROY'})\n            }\n          }\n\n          for (let rec of child.$modifiedRecords) {\n            console.log(rec.$modified, rec.$modifiedData);\n            if (rec.$modifiedData && !rec.$deleted && rec.$modified && (deleted.indexOf(rec) === -1)) {\n              let data = this._getModified(rec.$modifiedData);\n              if (rec.id)\n                data['id'] = rec.id;\n              jQuery.extend(data, child.getNestedData());\n              if ((rec.id === null) || (rec.id === undefined))\n                res.push({\n                  action: 'CREATE',\n                  values: data,\n                });\n              else if ((rec.id !== null) && (rec.id !== undefined))\n                res.push({\n                  action: 'UPDATE',\n                  values: data,\n                });\n            }\n          }\n          if (Object.keys(res).length > 0)\n            ret[child.fieldName] = res;\n        }\n      return ret;\n    }\n\n    save(autoRefresh=true) {\n      // Save pending children\n      for (let child of this.children)\n        if (child.changing)\n          child.scope.save();\n\n      const el = this.action.$form;\n      if (this.validate()) {\n        const data = this.record.$record.toObject();\n        // const data = this.getModifiedData(this.scope.form, el, this.scope.record);\n        this.scope.form.data = data;\n\n        let beforeSubmit = el.attr('before-submit');\n        if (beforeSubmit)\n          beforeSubmit = this.scope.$eval(beforeSubmit);\n\n        //@scope.form.data = null\n\n        if (data) {\n          this.uploading++;\n          return this.model.write([data])\n          .then(res => {\n            // this._clearCache();\n            if (this.action && this.action.viewType && (this.action.viewType === 'form'))\n              Katrid.app.$location.search('id', res[0]);\n            this.scope.form.$setPristine();\n            this.scope.form.$setUntouched();\n            this._pendingChanges = false;\n            this.state = DataSourceState.browsing;\n            if (autoRefresh)\n              return this.refresh(res);\n            else\n              return res;\n\n          })\n          .catch(error => {\n            let s = `<span>${Katrid.i18n.gettext('The following fields are invalid:')}<hr></span>`;\n            if (error.message)\n              s = error.message;\n            else if (error.messages) {\n              let elfield;\n              for (let fld of Object.keys(error.messages)) {\n                const msgs = error.messages[fld];\n                let field;\n                // check qualified field name\n                if (fld.indexOf('.') > -1) {\n                  fld = fld.split('.');\n                  let subField = fld[1];\n                  for (let child of this.children)\n                    if (child.scope.fieldName === fld[0]) {\n                      field = child.scope.view.fields[subField];\n                    }\n                } else\n                  field = this.scope.view.fields[fld];\n                console.log('field invalid', field);\n                if (!field || !field.name)\n                  continue;\n                elfield = el.find(`.form-field[name=\"${field.name}\"]`);\n                elfield.addClass('ng-invalid ng-touched');\n                s += `<strong>${field.caption}</strong><ul>`;\n                for (let msg of msgs) {\n                  s += `<li>${msg}</li>`;\n                }\n                s += '</ul>';\n              }\n              if (elfield)\n                elfield.focus();\n            }\n\n            Katrid.UI.Dialogs.Alerts.error(s);\n            throw new Error(s);\n\n          })\n          .finally(() => this.scope.$apply(() => this.uploading-- ) );\n        } else\n          Katrid.UI.Dialogs.Alerts.warn(Katrid.i18n.gettext('No pending changes'));\n      }\n    }\n\n    _getNested(recs) {\n      let res = [];\n      if (recs.$deleted && recs.$deleted.recs.length)\n        for (let rec of recs.$deleted.recs)\n          res.push({id: rec.id, action: 'DESTROY'});\n\n      let vals;\n      if (recs.recs.length)\n        for (let rec of recs.recs) if (rec) {\n          vals = {};\n          if (rec.$created)\n            vals = {\n              action: 'CREATE',\n              values: this._getModified(rec.$modifiedData)\n            };\n          else if (rec.$modified) {\n            vals = {\n              action: 'UPDATE',\n              values: this._getModified(rec.$modifiedData)\n            };\n            vals.values.id = rec.id;\n          }\n          else\n            continue;\n          res.push(vals);\n        }\n\n      return res;\n    }\n\n\n    _getModified(data) {\n      let res = {};\n      if (data)\n        for (let [k, v] of Object.entries(data))\n          if (v instanceof Katrid.Data.SubRecords) {\n            res[k] = this._getNested(v);\n          } else\n            res[k] = v;\n      return res;\n    }\n\n    getModifiedData(form, element, record) {\n      let data = {};\n      if (record.$modified)\n        jQuery.extend(data, this._getModified(record.$modifiedData));\n\n      if (this.record.id)\n        data['id'] = record.id;\n      return data;\n    }\n\n    get(id, timeout, apply=true, index=false) {\n      this._clearTimeout();\n      this.state = DataSourceState.loading;\n      this.loadingRecord = true;\n      this._canceled = false;\n\n      return new Promise(\n        (resolve, reject) => {\n          const _get = () => {\n            return this.model.getById(id)\n            .catch(res => {\n              return reject(res);\n            })\n            .then(res => {\n              if (this._canceled || !res)\n                return;\n              if (this.state === DataSourceState.loading)\n                this.state = DataSourceState.browsing;\n              else if (this.state === DataSourceState.inserting)\n                return;\n              this.record = res.data[0];\n              if (index !== false)\n                this.scope.records[index] = this.record;\n              // if (apply)\n              //   this.scope.$apply();\n              return resolve(this.record);\n            })\n            .finally(() => {\n                this.loadingRecord = false;\n              if (apply)\n                return this.scope.$apply();\n            });\n          };\n          if (!timeout && !this.requestInterval)\n            return _get();\n          else\n            this.pendingRequest = setTimeout(_get, timeout || this.requestInterval);\n\n        }\n      );\n    }\n\n    get defaultValues() {\n\n    }\n\n    set defaultValues(values) {\n      for (let [k, v] of Object.entries(values)) {\n        if (_.isObject(v) && (k in this.fields)) {\n          this.fields[k].defaultValues = v;\n        }\n      }\n    }\n\n    async insert(loadDefaults=true, defaultValues, kwargs) {\n      this._clearTimeout();\n      for (let child of this.children)\n        child._clearTimeout();\n      let rec = {};\n      rec.$created = true;\n      let oldRecs = this.scope.records;\n      this.record = rec;\n      this.scope.records = oldRecs;\n      let res;\n      // check if load defaults is needed\n      if (loadDefaults)\n        // load default fields values with optional kwargs\n        res = await this.model.getDefaults(kwargs);\n\n      for (let child of this.children)\n        child.scope.records = [];\n\n      this.state = DataSourceState.inserting;\n      this.scope.record.display_name = Katrid.i18n.gettext('(New)');\n\n      let defaults = {};\n      if (this.masterSource && this.field && this.field.defaultValues)\n        Object.assign(defaults, this.field.defaultValues);\n      for (let v of Object.values(this.fields))\n        if (v.default)\n          defaults[v.name] = v.default;\n      if (this.scope.ngDefaultValues)\n        Object.assign(defaults, this.scope.$eval(this.scope.ngDefaultValues));\n      if (this.action.context.default_values)\n        Object.assign(defaults, this.action.context.default_values);\n      if (defaultValues)\n        Object.assign(defaults, defaultValues);\n      if (res)\n        Object.assign(defaults, res);\n\n      // eval functions values\n      for (let [k, v] of Object.entries(defaults))\n        if (_.isFunction(v)) {\n          v = v(defaults, this);\n          if (!_.isUndefined(v))\n            defaults[k] = v;\n        }\n      this.setValues(defaults);\n    }\n\n    _new() {\n      return Katrid.Data.createRecord({}, this);\n    }\n\n    setValues(values) {\n      Object.entries(values).forEach(([k, v]) => {\n        let fld = this.fields[k];\n        if (fld)\n          fld.fromJSON(v, this);\n        else\n          this.scope.record[k] = v;\n      });\n\n      this.scope.$apply();\n    }\n\n    edit() {\n      this.state = DataSourceState.editing;\n    }\n\n    toClientValue(attr, value) {\n      const field = this.scope.view.fields[attr];\n      if (field) {\n        if (field.type === 'DateTimeField') {\n          value = new Date(value);\n        }\n      }\n      return value;\n    }\n\n    fieldByName(fieldName) {\n      return this.scope.view.fields[fieldName];\n    }\n\n    set state(state) {\n      // Clear modified fields information\n      this._modifiedFields = [];\n      this._state = state;\n      this.inserting = state === DataSourceState.inserting;\n      this.editing = state === DataSourceState.editing;\n      this.loading = state === DataSourceState.loading;\n      this.changing =  [DataSourceState.editing, DataSourceState.inserting].includes(this.state);\n      if (this.scope)\n        this.scope.$emit('dataStateChange', this);\n    }\n\n    get browsing() {\n      return this._state === DataSourceState.browsing;\n    }\n\n    childByName(fieldName) {\n      for (let child of this.children) {\n        if (child.fieldName === fieldName)\n          return child;\n      }\n    }\n\n    get state() {\n      return this._state;\n    }\n\n    get record() {\n      return this.scope.record;\n    }\n\n    set recordId(value) {\n      // refresh record id\n      this.scope.recordId = value;\n      // refresh children\n      this.scope.$broadcast('masterChanged', this, value);\n    }\n\n    get recordId() {\n      return this.scope.recordId;\n    }\n\n    set record(rec) {\n      // Track field changes\n      this.scope.record = Katrid.Data.createRecord(rec, this);\n      this.recordId = rec.id;\n      this._pendingChanges = false;\n      if (this.scope.form)\n        this.scope.form.$setPristine();\n      // this.state = DataSourceState.browsing;\n    }\n\n    next() {\n      return this.moveBy(1);\n    }\n\n    prior() {\n      return this.moveBy(-1);\n    }\n\n    nextPage() {\n      let p = this.recordCount / this.pageLimit;\n      if (Math.floor(p)) {\n        p++;\n      }\n      if (p > (this.pageIndex + 1)) {\n        this.pageIndex++;\n      }\n    }\n\n    prevPage() {\n      if (this.pageIndex > 1) {\n        this.pageIndex--;\n      }\n    }\n\n    set recordIndex(index) {\n      this._recordIndex = index;\n      this.scope.record = this.scope.records[index];\n      if (!this.parent)\n        return Katrid.app.$location.search('id', this.scope.record.id);\n      // load record\n      this.scope.recordId = null;\n      // set new id on browser address\n    }\n\n    get recordIndex() {\n      return this._recordIndex;\n    }\n\n    async expandGroup(index, row) {\n      let params = [];\n      if (this._params)\n        params = params.concat(this._params);\n      if (row.$params)\n        params = params.concat(row.$params);\n      if (row.$level === (this.groups.length - 1)) {\n        let res = await this.model.search({params});\n        if (res.data) {\n          row.$children = res.data;\n          this.scope.$apply(() => {\n            this.scope.groups.splice.apply(this.scope.groups, [index + 1, 0].concat(res.data));\n          })\n        }\n        this.scope.records = this._chain();\n      } else {\n        // expand next group level\n        let rows = await this._loadGroup(this.groups, row.$level + 1, this._params, row);\n        row.$children = rows;\n        this.scope.groups.splice.apply(this.scope.groups, [index + 1, 0].concat(rows));\n        this.scope.$apply();\n      }\n\n      // .then(res => {\n      //   console.log('')\n      //   if (res.ok && res.result.data) {\n      //     return this.action.scope.$apply(() => {\n      //       rg._children = res.result.data;\n      //       return this.action.scope.records.splice.apply(this.scope.records, [index + 1, 0].concat(res.result.data));\n      //     });\n      //   }\n    }\n\n    collapseGroup(index, row) {\n      let collapse = (index, row) => {\n        console.log('collapse', index, row);\n        if (row.$children && row.$children.length && row.$level !== (this.groups.length - 1))\n          row.$children.map(obj => collapse(this.scope.groups.indexOf(obj), obj));\n        if (row.$children && row.$children.length)\n          this.scope.groups.splice(index+1, row.$children.length);\n        row.$children = [];\n      };\n      collapse(index, row);\n      this.scope.records = this._chain();\n    }\n\n    _chain() {\n      let records = [];\n      for (let obj of this.scope.groups)\n        if (obj.$hasChildren && obj.$expanded && obj.$children.length)\n          records = records.concat(obj.$children);\n      return records;\n    }\n\n    _applyResponse(res) {\n      if (res) {\n        if (res.value)\n          this.setValues(res.value);\n        this.scope.$apply();\n      }\n    }\n\n    async dispatchEvent(name, ...args) {\n      let res = await this.model.rpc(name, ...args);\n      this._applyResponse(res);\n    }\n\n    get model() {\n      return this.scope.model;\n    }\n\n    open() {\n      this.search({}, 1, this.action.view.fields);\n    }\n\n    get parent() {\n      return this.masterSource;\n    }\n\n    set parent(value) {\n      this._masterSource = value;\n    }\n\n    $setDirty(field) {\n      let form = this.scope.form;\n      if (form) {\n        let control = form[field];\n        if (control)\n          control.$setDirty();\n      } else if (this.action)\n        this.action.setDirty(field);\n    }\n  }\n\n\n  Katrid.Data.DataSource = DataSource;\n  Katrid.Data.DataSourceState = DataSourceState;\n\n})();\n","(function() {\n\n  function toCamelCase(s) {\n    // remove all characters that should not be in a variable name\n    // as well underscores an numbers from the beginning of the string\n    s = s.replace(/([^a-zA-Z0-9_\\- ])|^[_0-9]+/g, \"\").trim().toLowerCase();\n\n    // uppercase letters preceeded by a hyphen or a space\n    s = s.replace(/([ -]+)([a-zA-Z0-9])/g, function(a,b,c) {\n      return c.toUpperCase();\n    });\n\n    // uppercase letters following numbers\n    s = s.replace(/([0-9]+)([a-zA-Z])/g, function(a,b,c) {\n      return b + c.toUpperCase();\n    });\n\n    return s;\n  }\n\n  class Field {\n    constructor(info) {\n      this.cols = info.cols || 6;\n      this.visible = true;\n      this._info = info;\n      this.cssClass = info.type;\n      this.caption = info.caption || info.name;\n      this.helpText = this._info.help_text;\n      this.required = this._info.required;\n      this.onChange = this._info.onchange;\n      this.nolabel = false;\n\n      if (this._info.visible === false)\n        this.visible = false;\n      this.readonly = this._info.readonly;\n      if (!this.readonly)\n        this.readonly = false;\n\n      this.displayChoices = _.object(info.choices);\n      this.choices = info.choices;\n\n      if (info.choices)\n        this.template = {\n          list: 'view.list.selection-field.jinja2',\n          form: 'view.form.selection-field.jinja2',\n        };\n      else\n        this.template = {\n          list: 'view.list.field.jinja2',\n          form: 'view.form.field.jinja2',\n        };\n\n      if (info.template)\n        this.template = Object.assign(this.template, info.template);\n\n      this.emptyText = '--';\n    }\n\n    static fromInfo(info) {\n      let cls = Katrid.Data.Fields[info.type] || StringField;\n      return new cls(info);\n    }\n\n    static fromArray(fields) {\n      let r = {};\n      Object.keys(fields).map(k => r[k] = this.fromInfo(fields[k]));\n      return r;\n    }\n\n    render(viewType, el, context) {\n      this.$el = el;\n      let attrs = {};\n      for (let attr of el[0].attributes) {\n        attrs[attr.name] = attr.value;\n        let camelCase = toCamelCase(attr.name);\n        if (camelCase !== attr.name)\n          attrs[camelCase] = attr.value;\n      }\n\n      if (attrs.cols)\n        this.cols = attrs.cols;\n      if (attrs.ngReadonly)\n        this.ngReadonly = attrs.ngReadonly;\n      if (attrs.domain)\n        this.domain = attrs.domain;\n      if (attrs.visible === 'false')\n        this.visible = false;\n      else if (attrs.visible === 'true')\n        this.visible = true;\n      if (attrs.ngShow)\n        this.ngShow = attrs.ngShow;\n      if (attrs.ngIf)\n        this.ngIf = attrs.ngIf;\n      if (attrs.ngClass)\n        this.ngClass = attrs.ngClass;\n      this.attrs = attrs;\n\n      context['field'] = this;\n      context['attrs'] = attrs;\n\n      // replace the field content by its html content\n      context['html'] = el.html();\n\n      return Katrid.app.getTemplate(this.template[viewType], context);\n    }\n\n    assign(el) {\n      this.$el = el;\n      let caption = el.attr('label');\n      if (!_.isUndefined(caption))\n          this.caption = caption;\n      let readonly = el.attr('ng-readonly');\n      let invisible = el.attr('invisible');\n      if (!_.isUndefined(invisible))\n        this.visible = false;\n      if (!_.isUndefined(readonly))\n        this.ngReadonly = readonly;\n      let cols = el.attr('cols');\n      if (!_.isUndefined(cols))\n        this.cols = cols;\n\n    }\n\n    fromJSON(value, dataSource) {\n      dataSource.record[this.name] = value;\n    }\n\n    get validAttributes() {\n       return ['name', 'nolabel', 'readonly', 'required'];\n    }\n\n    getAttributes() {\n      let res = {};\n      let validAttrs = this.validAttributes;\n      if (this.ngReadonly)\n        res['ng-readonly'] = this.ngReadonly;\n      else if (this.readonly)\n        res['readonly'] = this.readonly;\n      res['ng-model'] = 'record.' + this.name;\n      if (attrs.ngFieldChange) {\n        res['ng-change'] = attrs.ngFieldChange;\n        console.log('change', attrs.ngFieldChange);\n      }\n      if (this.required)\n        res['required'] = this.required;\n      return res;\n    }\n\n    get hasChoices() {\n      return this._info.choices && this._info.choices.length > 0;\n    }\n\n   get name() {\n      return this._info.name;\n    }\n\n    get model() {\n      return this._info.model;\n    }\n\n    get maxLength() {\n      return this._info.max_length;\n    }\n\n    get type() {\n      return this._info.type;\n    }\n\n    get paramTemplate() {\n      return 'view.param.String';\n    }\n\n    format(value) {\n      return value.toString();\n    }\n\n    toJSON(val) {\n      return val;\n    }\n\n    createWidget(widget, scope, attrs, element) {\n      if (!widget) {\n        // special fields case\n        if (this.hasChoices)\n          widget = 'SelectionField';\n      }\n      let cls = Katrid.ui.Widgets[widget || this.type] || Katrid.ui.Widgets.StringField;\n      return new cls(scope, attrs, this, element);\n    }\n\n    validate() {\n\n    }\n\n    get defaultCondition() {\n      return '=';\n    }\n\n    isControlVisible(condition) {\n      switch (condition) {\n        case 'is null':\n          return false;\n        case 'is not null':\n          return false;\n      }\n      return true;\n    }\n\n  }\n\n  class StringField extends Field {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n    }\n  }\n\n  class PasswordField extends StringField {\n    constructor(info) {\n      if (!info.template)\n        info.template = {};\n      if (!info.template.form)\n        info.template.form = 'view.form.password.jinja2';\n      if (!info.template.list)\n        info.template.list = 'view.list.password.jinja2';\n      super(info);\n    }\n  }\n\n\n  class BooleanField extends Field {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n      this.template.form = 'view.form.boolean-field.jinja2';\n      this.template.list = 'view.list.boolean-field.jinja2';\n      this.nolabel = true;\n    }\n\n    get paramTemplate() {\n      return 'view.param.Boolean';\n    }\n\n  }\n\n  class DateField extends Field {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n      this.template.form = 'view.form.date-field.jinja2';\n      this.template.list = 'view.list.date-field.jinja2';\n    }\n\n    toJSON(val) {\n      return val;\n    }\n\n    get paramTemplate() {\n      return 'view.param.Date';\n    }\n\n    format(value) {\n      if (_.isString(value))\n        return moment(value).format(Katrid.i18n.gettext('yyyy-mm-dd').toUpperCase());\n      return '';\n    }\n\n    getAttributes(attrs) {\n      let res = super.getAttributes(attrs);\n      res['type'] = 'date';\n      return res;\n    }\n  }\n\n  class DateTimeField extends DateField {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n      this.template.form = 'view.form.datetime-field.jinja2';\n      this.template.list = 'view.list.datetime-field.jinja2';\n    }\n\n    get paramTemplate() {\n      return 'view.param.DateTime';\n    }\n\n    getAttributes(attrs) {\n      let res = super.getAttributes(attrs);\n      res['type'] = 'datetime-local';\n      return res;\n    }\n  }\n\n\n  class TimeField extends DateTimeField {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n      this.template.form = 'view.form.time-field.jinja2';\n      this.template.list = 'view.list.time-field.jinja2';\n    }\n  }\n\n\n  class NumericField extends Field {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n      if (Katrid.UI.isMobile)\n        this.template.form = 'view.form.numpad-field.pug';\n      else\n        this.template.form = 'view.form.numeric-field.jinja2';\n      this.template.list = 'view.list.numeric-field.jinja2';\n    }\n\n    fromJSON(value, dataSource) {\n      dataSource.record[this.name] = parseFloat(value);\n    }\n\n    toJSON(val) {\n      if (val && _.isString(val))\n        return parseFloat(val);\n      return val;\n    }\n\n  }\n\n\n  class IntegerField extends Field {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n    }\n\n    toJSON(val) {\n      if (val && _.isString(val))\n        return parseInt(val);\n      return val;\n    }\n\n    get paramTemplate() {\n      return 'view.param.Integer';\n    }\n  }\n\n  class FloatField extends NumericField {\n  }\n\n  class DecimalField extends NumericField {\n    constructor() {\n      super(...arguments);\n      this.decimalPlaces = 2;\n      if (this._info.attrs) {\n        this.decimalPlaces = this._info.attrs.decimal_places || 2;\n      }\n    }\n  }\n\n  class ForeignKey extends Field {\n    constructor(info) {\n      super(...arguments);\n      this.domain = info.domain;\n      Object.assign(this.template, {\n        list: 'view.list.foreignkey.jinja2',\n        form: 'view.form.foreignkey.jinja2',\n      });\n    }\n\n    assign(el) {\n      super.assign(el);\n      let domain = $(el).attr('domain');\n      if (domain)\n        this.domain = domain;\n    }\n\n    toJSON(val) {\n      if (_.isArray(val))\n        return val[0];\n      return val;\n    }\n\n    get validAttributes() {\n      return super.validAttributes.concat(['domain']);\n    }\n  }\n\n  class OneToManyField extends Field {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 12;\n      super(...arguments);\n      this.template.form = 'view.form.grid.jinja2';\n    }\n    get field() {\n      return this._info.field;\n    }\n\n    get validAttributes() {\n      return super.validAttributes.concat(['inline-editor', 'ng-default-values']);\n    }\n\n    fromJSON(val, dataSource) {\n      if (val && val instanceof Array) {\n        let child = dataSource.childByName(this.name);\n        val.map((obj) => {\n          if (obj.action === 'CLEAR') {\n            child.scope.records = [];\n            dataSource.record[this.name] = [];\n          }\n          else if (obj.action === 'CREATE') {\n            child.scope.addRecord(obj.values);\n          }\n          child.scope.$apply();\n        });\n      }\n    }\n  }\n\n  class ManyToManyField extends ForeignKey {\n    toJSON(val) {\n      if (_.isArray(val))\n        return val.map(obj => _.isArray(obj) ? obj[0] : obj);\n      else if (_.isString(val))\n        val = val.split(',');\n      return val;\n    }\n  }\n\n  class TextField extends StringField {\n    constructor(info) {\n      super(...arguments);\n      if (!info.template || (info.template && !info.template.form))\n        this.template.form = 'view.form.text-field.jinja2';\n    }\n  }\n\n  class XmlField extends TextField {\n    constructor(info) {\n      super(...arguments);\n      // TODO change to code editor\n      if (!info.template || (info.template && !info.template.form))\n        this.template.form = 'view.form.code-editor.jinja2';\n    }\n  }\n\n  class JsonField extends TextField {\n    constructor(info) {\n      super(...arguments);\n      // TODO change to code editor\n      if (!info.template || (info.template && !info.template.form))\n        this.template.form = 'view.form.json-field.jinja2';\n    }\n  }\n\n  class PythonCodeField extends TextField {\n    constructor(info) {\n      super(...arguments);\n      console.log('python code field');\n      if (!info.template || (info.template && !info.template.form))\n        this.template.form = 'view.form.python-code.jinja2';\n    }\n  }\n\n  class ImageField extends Field {\n    constructor(info) {\n      if (!info.template)\n        info.template = {};\n      if (!info.template.form)\n        info.template.form = 'view.form.image-field.jinja2';\n      super(...arguments);\n      this.noImageUrl = '/static/web/assets/img/no-image.png';\n    }\n\n    getAttributes(attrs) {\n      let res = super.getAttributes(attrs);\n      res.ngSrc = attrs.ngEmptyImage || (attrs.emptyImage && (`'${attrs.emptyImage}`)) || `'${this.noImageUrl}'`;\n      res.ngSrc = `{{ ${res['ng-model']} || ${res.ngSrc} }}`;\n      return res;\n    }\n\n    get ngSrc() {\n      let ngSrc = this.attrs.ngEmptyImage || (this.attrs.emptyImage && (`'${this.attrs.emptyImage}`)) || `'${this.noImageUrl}'`;\n      ngSrc = `\\${ record.${this.name} || ${ngSrc} }`;\n      return ngSrc\n    }\n  }\n\n  Katrid.Data.Fields = {\n    Field,\n    StringField,\n    PasswordField,\n    IntegerField,\n    FloatField,\n    DecimalField,\n    DateTimeField,\n    TimeField,\n    ForeignKey,\n    OneToManyField,\n    ManyToManyField,\n    TextField,\n    XmlField,\n    JsonField,\n    PythonCodeField,\n    DateField,\n    BooleanField,\n    ImageField,\n  }\n\n\n})();\n","var Katrid;\n(function (Katrid) {\n    var UI;\n    (function (UI) {\n        Katrid.UI = {\n            keyCode: {\n                BACKSPACE: 8,\n                COMMA: 188,\n                DELETE: 46,\n                DOWN: 40,\n                END: 35,\n                ENTER: 13,\n                ESCAPE: 27,\n                HOME: 36,\n                LEFT: 37,\n                PAGE_DOWN: 34,\n                PAGE_UP: 33,\n                PERIOD: 190,\n                RIGHT: 39,\n                SPACE: 32,\n                TAB: 9,\n                UP: 38\n            },\n            toggleFullScreen() {\n                if (!document.fullscreenElement &&\n                    !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement) {\n                    if (document.documentElement.requestFullscreen) {\n                        document.documentElement.requestFullscreen();\n                    }\n                    else if (document.documentElement.msRequestFullscreen) {\n                        document.documentElement.msRequestFullscreen();\n                    }\n                    else if (document.documentElement.mozRequestFullScreen) {\n                        document.documentElement.mozRequestFullScreen();\n                    }\n                    else if (document.documentElement.webkitRequestFullscreen) {\n                        document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n                    }\n                }\n                else {\n                    if (document.exitFullscreen) {\n                        document.exitFullscreen();\n                    }\n                    else if (document.msExitFullscreen) {\n                        document.msExitFullscreen();\n                    }\n                    else if (document.mozCancelFullScreen) {\n                        document.mozCancelFullScreen();\n                    }\n                    else if (document.webkitExitFullscreen) {\n                        document.webkitExitFullscreen();\n                    }\n                }\n            }\n        };\n        Katrid.UI.uiKatrid = angular.module('ui.katrid', []);\n    })(UI = Katrid.UI || (Katrid.UI = {}));\n})(Katrid || (Katrid = {}));\n","(function () {\n\n  class ActionManager extends Array {\n    constructor() {\n      super();\n      this.currentAction = null;\n      this.mainAction = null;\n    }\n\n    addAction(action) {\n      if (!this.mainAction)\n        this.mainAction = action;\n      this.push(action);\n      this.currentAction = action;\n    }\n\n    back(action, url) {\n      if (action)\n        this.action = action;\n      else if (this.length > 1)\n        this.action = this[this.length-2];\n      this.action.$attach();\n      this.action.refreshBreadcrumb();\n      if (angular.isString(url))\n        Katrid.app.loadPage(url);\n      else if (url)\n        Katrid.app.$location.search(url);\n    }\n\n    removeAction(action) {\n      this.splice(this.indexOf(action), this.length);\n      if (this.length === 0)\n        this.mainAction = null;\n    }\n\n    get action() {\n      return this.currentAction;\n    }\n\n    set action(action) {\n      let i = this.indexOf(action);\n      if (i > -1) {\n        i++;\n        while (this.length > i)\n          this[i].$destroy();\n        this.currentAction = action;\n      }\n    }\n\n    clear() {\n      for (let action of this)\n        action.$destroy();\n      this.length = 0;\n      this.mainAction = null;\n      this.currentAction = null;\n    }\n\n    get path() {\n      return this.action.path;\n    }\n\n    doAction(action) {\n\n    }\n\n    async onHashChange(params, reset) {\n      let actionId = params.action;\n\n      // clear action manager history\n      if (reset)\n        this.clear();\n\n      // check if action has changed\n      let oldAction, action;\n      action = oldAction = this.currentAction;\n\n\n      // action auto detection\n      if (!actionId && params.model && (!action || (action.params && (action.params.model !== params.model)))) {\n        // get a virtual window action\n        let svc = new Katrid.Services.Model(params.model);\n        let actionInfo = await svc.rpc('get_formview_action', [params.id]);\n        let scope = this.createScope();\n        action = scope.action = new Katrid.Actions[actionInfo.action_type](actionInfo, scope, params);\n      } else if (!(this.currentAction && (this.currentAction.info.id == actionId))) {\n        if (this.currentAction && reset)\n          this.currentAction.$destroy();\n        let actionInfo = await Katrid.Services.Actions.load(actionId);\n        let scope = this.createScope();\n        action = scope.action = new Katrid.Actions[actionInfo.action_type](actionInfo, scope, params);\n      }\n\n      await action.onHashChange(params);\n    }\n\n    createScope() {\n      let scope = Katrid.app.$scope.$new(true);\n      scope._ = _;\n      return scope;\n    }\n\n    get breadcrumb() {\n      if (this._breadcrumb)\n        return this._breadcrumb;\n      let breadcrumb = [];\n      for (let action of this) {\n        let bc = action.breadcrumb;\n        if (bc && bc.length) {\n          for (let b of bc)\n            b.isLeaf = false;\n          breadcrumb.push(...bc);\n        }\n      }\n      breadcrumb[breadcrumb.length-1].isLeaf = true;\n      this._breadcrumb = breadcrumb;\n      return breadcrumb;\n    }\n  }\n\n  class Action {\n    static initClass() {\n      this.actionType = null;\n      this._context = null;\n    }\n\n    constructor(info, scope, params, $container) {\n      this.info = info;\n      this.scope = scope;\n      Katrid.app.actionManager.addAction(this);\n\n      if (!$container)\n        $container = Katrid.app.$element;\n      this.$parent = $container;\n    }\n\n    $destroy() {\n      Katrid.app.actionManager.removeAction(this);\n      this.scope.$destroy();\n      if (this.$element)\n        // check if there's an element\n        this.$element.remove();\n      else\n        // or clear the container\n        this.$parent.empty();\n    }\n\n    get id() {\n      return this.info.id;\n    }\n\n    get context() {\n      if (!this._context) {\n        if (_.isString(this.info.context))\n          this._context = JSON.parse(this.info.context);\n        else\n          this._context = {};\n      }\n      return this._context;\n    }\n\n    doAction(act) {\n      let type = act.type || act.action_type;\n      return Katrid.Actions[type].dispatchAction(this, act);\n    }\n\n    openObject(evt) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      if (evt.ctrlKey) {\n        window.open(evt.target.href);\n        return false;\n      } else {\n        console.log(evt.target.href);\n        location.hash = evt.target.href;\n      }\n      return false;\n    }\n\n    restore() {}\n\n    apply() {}\n    backTo(index) {\n      let b = Katrid.app.actionManager.breadcrumb[index];\n      if (b)\n        Katrid.app.actionManager.back(b.action, b.url);\n      return;\n      if (this._currentPath !==  this._unregisterHook && (Katrid.app.actionManager.length > 1))\n        this._unregisterHook();\n\n      // restore to query view\n      let action = Katrid.app.actionManager[index];\n      if ((index === 0) && (viewType === 0))\n        return action.restore(action.searchViewType || action.viewModes[0]);\n      else if ((index === 0) && (viewType === 'form'))\n        return action.restore('form');\n\n      Katrid.app.actionManager.action = action;\n\n      if (!viewType)\n        viewType = 'form';\n\n      let location;\n      location = action.currentUrl;\n      action.info.__cached = true;\n      let p = this.location.path(location, true, action.info);\n      let search = action._currentParams[viewType];\n      console.log('search', search);\n      if (search)\n        p.search(search);\n    }\n\n    execute() {}\n\n    getCurrentTitle() {\n      return this.info.display_name;\n    }\n\n    search() {\n      if (!this.isDialog) {\n        return this.location.search.apply(null, arguments);\n      }\n    }\n\n\n    async onHashChange(params) {\n      location.hash = '#/app/?' + $.param(params);\n      await this.execute();\n    }\n  }\n  Action.initClass();\n\n\n  class ViewAction extends Action {\n    static initClass() {\n      this.actionType = 'ir.action.view';\n    }\n\n    async onHashChange(params) {\n      location.hash = '#/app/?' + $.param(params);\n      let svc = new Katrid.Services.Model('ir.action.view');\n      let res = await svc.post('get_view', { args: [ this.info.view[0] ] });\n      let content = res.content;\n      Katrid.app.$element.html(Katrid.Core.$compile(content)(this.scope));\n    }\n  }\n  ViewAction.initClass();\n\n\n  class UrlAction extends Action {\n    static initClass() {\n      this.actionType = 'ir.action.url';\n    }\n\n    constructor(info, scope, location) {\n      super(info, scope, location);\n      window.location.href = info.url;\n    }\n  }\n  UrlAction.initClass();\n\n\n  Katrid.Actions = {\n    Action,\n    ViewAction,\n    UrlAction,\n    ActionManager,\n  };\n\n\n  Katrid.Actions[ViewAction.actionType] = ViewAction;\n  Katrid.Actions[UrlAction.actionType] = UrlAction;\n\n\n})();\n","(function() {\n\n  class ClientAction extends Katrid.Actions.Action {\n    static initClass() {\n      this.actionType = 'ir.action.client';\n      this.registry = {};\n    }\n\n    static register(tag, obj) {\n      this.registry[tag] = obj;\n    }\n\n    static executeTag(parent, act) {\n      // get action\n      let action = this.registry[act.tag];\n      if (action.prototype instanceof Katrid.UI.Views.ActionView) {\n        action = new action(parent.scope);\n        action.renderTo(parent);\n      }\n      else console.log('is a function');\n    }\n\n    static tagButtonClick(btn) {\n      let action = {\n        type: 'ir.action.client',\n        tag: btn.attr('name'),\n        target: btn.attr('target') || 'new',\n      };\n\n      action = new ClientAction(action, Katrid.Actions.actionManager.action.scope, Katrid.Actions.actionManager.action.location);\n      action.execute();\n    }\n\n    tag_refresh() {\n      this.dataSource.refresh();\n    }\n\n    get templateUrl() {\n      console.log(this.tag);\n      return this.tag.templateUrl;\n    }\n\n    async execute() {\n      let tag = ClientAction.registry[this.info.tag];\n      this.tag = tag;\n      if (tag.prototype instanceof Katrid.UI.Views.ClientView) {\n        this.tag = new tag(this);\n        let el = await this.tag.render();\n        if (this.info.target === 'new') {\n          el = el.modal();\n        } else {\n          $('#katrid-action-view').empty().append(el);\n        }\n      } else if (_.isString(tag))\n        this[tag].apply(this);\n    }\n\n    async routeUpdate(location) {\n      // this.execute();\n    }\n\n    get template() {\n      return this.tag.template;\n    }\n  }\n\n  ClientAction.initClass();\n\n  Katrid.Actions.ClientAction = ClientAction;\n  Katrid.Actions[ClientAction.actionType] = ClientAction;\n\n})();\n","(function() {\n\n  class WindowAction extends Katrid.Actions.Action {\n    static initClass() {\n      this.actionType = 'ir.action.window';\n    }\n\n    constructor(info, scope, params, $container) {\n      super(info, scope, params, $container);\n      this.viewMode = info.view_mode;\n      this.viewModes = this.viewMode.split(',');\n      if (info.model)\n        scope.model = this.model = new Katrid.Services.Model(info.model);\n      this.dataSource = new Katrid.Data.DataSource(scope, this);\n      scope.$on('dataStateChange', this.onDataStateChange);\n      scope.$on('afterCancel', (evt, dataSource) => {\n        if (dataSource === this.dataSource)\n          this.afterCancel(evt, dataSource);\n      });\n    }\n\n    afterCancel(evt, dataSource) {\n      if (dataSource.state === Katrid.Data.DataSourceState.inserting) {\n        this.dataSource.record = {};\n        this.back();\n      }\n    }\n\n    back() {\n      Katrid.app.actionManager.history.back();\n    }\n\n    setDirty(field) {\n      const control = this.form[field];\n      if (control) {\n        control.$setDirty();\n      }\n    }\n\n    async onHashChange(params) {\n      // normalize hash\n      let invalidate = false;\n      let allowedParams = ['action', 'view_type', 'menu_id', 'model'];\n      let loadRecord = (this.params && (this.params.id !== params.id));\n      this.params = {};\n      if (!params.view_type) {\n        this.params.view_type = this.viewModes[0];\n        invalidate = true;\n      }\n      if (!params.model) {\n        this.params.model = this.info.model;\n        invalidate = true;\n      }\n\n      Object.assign(this.params, params);\n      // view type form accepts id param\n      if (this.params.view_type === 'form')\n        allowedParams.splice(0, 0, 'id');\n      if (Object.keys(this.params).length === allowedParams.length) {\n        for (let k of Object.keys(this.params))\n          if (!allowedParams.includes(k)) {\n            invalidate = true;\n          }\n      } else\n        invalidate = true;\n\n      // invalidate location hash\n      if (invalidate) {\n        let oldParams = this.params;\n        this.params = {};\n        for (let k of allowedParams)\n          this.params[k] = oldParams[k];\n\n        // the action param is not required if empty\n        if (!this.params.action)\n          delete this.params.action;\n\n        // redirect to new params\n        location.hash = '#/app/?' + $.param(this.params);\n      }\n\n      // apply params\n      let viewType = this.params.view_type;\n      if (viewType !== this.viewType) {\n        this.viewType = viewType;\n        await this.execute();\n      }\n      if (this.params.id && (this.dataSource.recordId != this.params.id))\n        this.dataSource.get(this.params.id);\n    }\n\n    rpc(method, data, event) {\n      if (event)\n        event.stopPropagation();\n      if (!data)\n        data = {};\n      else if (_.isArray(data))\n        data = { args: data };\n      else if (!_.isObject(data))\n        data = { args: [data] };\n      this.model.rpc(method, data.args, data.kwargs);\n    }\n\n    getContext() {\n      let ctx = super.getContext();\n      let sel = this.selection;\n      if (sel && sel.length) {\n        ctx.active_id = sel[0];\n        ctx.active_ids = sel;\n      }\n      return ctx;\n    }\n\n    restore(viewType) {\n      // restore the last search mode view type\n      let url = this._currentPath || this.location.$$path;\n      let params = this._currentParams[viewType] || {};\n      params['view_type'] = viewType;\n      if (Katrid.app.actionManager.length > 1) {\n        params['actionId'] = this.info.id;\n        this.$state.go('actionView', params);\n        // this.location.path(url);\n        // this.location.search(params);\n      } else {\n        this.viewType = viewType;\n      }\n      // window.location.href = '/web/#' + url + '?view_type=list';\n      // this.setViewType(viewType, this._currentParams[viewType]);\n    }\n\n    getCurrentTitle() {\n      if (this.viewType === 'form') {\n        return this.scope.record.display_name;\n      }\n      return super.getCurrentTitle();\n    }\n\n    switchView(viewType, params) {\n      if (viewType !== this.viewType) {\n        this.viewType = viewType;\n        this.execute();\n        let search = Katrid.app.$location.$$search;\n        Object.assign(search, params);\n        search.view_type = viewType;\n        Katrid.app.$location.search(search);\n      }\n    }\n\n    createNew() {\n      this.switchView('form', { id: null });\n    }\n\n    async deleteSelection() {\n      let sel = this.selection;\n      if (!sel)\n        return false;\n      if (\n        ((sel.length === 1) && confirm(Katrid.i18n.gettext('Confirm delete record?'))) ||\n        ((sel.length > 1) && confirm(Katrid.i18n.gettext('Confirm delete records?')))\n      ) {\n        await this.model.destroy(sel);\n        const i = this.scope.records.indexOf(this.scope.record);\n        this.viewType = 'list';\n        this.dataSource.refresh();\n      }\n    }\n\n    async copy() {\n      this.viewType = 'form';\n      await this.dataSource.copy(this.scope.record.id);\n      return false;\n    }\n\n    async copyTo(configId) {\n      if (this.scope.recordId) {\n        let svc = new Katrid.Services.Model('ir.copy.to');\n        let res = await svc.rpc('copy_to', [configId, this.scope.recordId]);\n        let model = new Katrid.Services.Model(res.model);\n        let views = await model.getViewInfo({ view_type: 'form' });\n        let wnd = new Katrid.ui.Dialogs.Window(this.scope, { view: views }, Katrid.Core.compile, null, model);\n        wnd.createNew({ defaultValues: res.value });\n      }\n    }\n\n    makeUrl(viewType) {\n      // get the default view mode\n      if (!viewType)\n        viewType = this.viewModes[0];\n\n      const search = {\n        action: this.info.id,\n        view_type: viewType,\n        menu_id: Katrid.app.$location.$$search.menu_id,\n      };\n      if ((viewType === 'form') && this.record)\n        search.id = this.record.id;\n      return search;\n    }\n\n    get record() {\n      // returns the active record\n      return this.scope.record;\n    }\n\n    get searchModes() {\n      // returns search view modes\n      return this.viewModes.filter(v => v !== 'form');\n    }\n\n    get breadcrumb() {\n      let breadcrumb = [];\n      if (this.searchModes.length) {\n        breadcrumb.push({ action: this, url: this.makeUrl(this.lastViewType), text: this.info.display_name });\n      }\n      if (this.viewType === 'form') {\n        let h = { action: this, url: this.makeUrl('form') };\n        if (this === Katrid.app.actionManager.currentAction)\n          h.text = '${ record.display_name }';\n        else\n          h.text = this.record && this.record.display_name;\n        breadcrumb.push(h);\n      }\n      return breadcrumb;\n    }\n\n    refreshBreadcrumb() {\n      Katrid.app.actionManager._breadcrumb = null;\n\n      let templ = Katrid.app.getTemplate('view.breadcrumb.jinja2', {\n        breadcrumb: Katrid.app.actionManager.breadcrumb,\n        action: this\n      });\n      templ = Katrid.Core.$compile(templ)(this.scope);\n      this.$element.find('.breadcrumb-nav').html(templ);\n    }\n\n    $detach() {\n      this.$element.detach();\n    }\n\n    $attach() {\n      this.$element.appendTo(this.$parent);\n    }\n\n    async execute() {\n      if (!this.views) {\n        let res = await this.model.loadViews({\n          views: this.info.views,\n          action: this.info.id,\n          toolbar: true\n        });\n        this.fields = res.fields;\n        this.fieldList = res.fieldList;\n        this.views = res.views;\n\n        // pre-render the action container\n        let templ = Katrid.app.getTemplate('ir.action.window.jinja2', { action: this });\n        templ = Katrid.Core.$compile(templ)(this.scope);\n        this.$parent.html(templ);\n        this.$element = templ;\n        this.$container = this.$element.find('.action-view-content:first');\n      }\n      this.refreshBreadcrumb();\n      this.scope.view = this.views[this.viewType];\n      let view = new Katrid.UI.Views[this.viewType](this, this.scope.view);\n\n      if (this.viewType !== 'form') {\n        this.lastViewType = this.viewType;\n        this.lastUrl = location.hash;\n      }\n\n      // render view to main container\n      view.renderTo(this.$container);\n      setTimeout(() => {\n        if ((this.viewType === 'form') && !Katrid.app.$location.$$search.id)\n          this.dataSource.insert();\n      })\n    }\n\n    get viewType() {\n      return this._viewType;\n    }\n\n    set viewType(value) {\n      if (value !== this._viewType) {\n        // invalidate the current record id\n        if (value !== 'form')\n          this.dataSource.recordId = null;\n        this._viewType = value;\n      }\n\n      return;\n      if (!value)\n        value = this.viewModes[0];\n\n      if (value === this._viewType)\n        return;\n\n      if (!this._viewType)\n        this.searchViewType = this.viewModes[0];\n\n      this.view = this.views[value];\n      this._viewType = value;\n      this.switchView(value);\n\n      if (!this.scope.$$phase)\n        this.scope.$apply();\n\n      if (this.location.$$search.view_type !== value) {\n        this.location.search({ view_type: value });\n      }\n\n      $(Katrid).trigger('formReady', [this.scope]);\n    }\n\n    searchText(q) {\n      return this.location.search('q', q);\n    }\n\n    _prepareParams(params) {\n      const r = {};\n      for (let p of Array.from(params)) {\n        if (p.field && (p.field.type === 'ForeignKey')) {\n          r[p.field.name] = p.id;\n        } else {\n          r[p.id.name + '__icontains'] = p.text;\n        }\n      }\n      return r;\n    }\n\n    setSearchParams(params) {\n      let p = {};\n      if (this.info.domain)\n        p = $.parseJSON(this.info.domain);\n      for (let [k, v] of Object.entries(p)) {\n        let arg = {};\n        arg[k] = v;\n        params.push(arg);\n      }\n      return this.dataSource.search(params);\n    }\n\n    applyGroups(groups, params) {\n      return this.dataSource.groupBy(groups, params);\n    }\n\n    groupHeaderClick(record, index) {\n      console.log('group header click', record);\n      record.$expanded = !record.$expanded;\n      if (record.$expanded) {\n        this.dataSource.expandGroup(index, record);\n      } else {\n        this.dataSource.collapseGroup(index, record);\n      }\n    }\n\n    doViewAction(viewAction, target, confirmation, prompt) {\n      return this._doViewAction(this.scope, viewAction, target, confirmation, prompt);\n    }\n\n    _doViewAction(scope, viewAction, target, confirmation, prompt) {\n      let promptValue = null;\n      if (prompt) {\n        promptValue = window.prompt(prompt);\n      }\n      if (!confirmation || (confirmation && confirm(confirmation))) {\n        return this.model.doViewAction({ action_name: viewAction, target, prompt: promptValue })\n        .then(function(res) {\n          let msg, result;\n          if (res.status === 'open') {\n            return window.open(res.open);\n          }\n        });\n      }\n    }\n\n    async formButtonClick(id, meth, self) {\n      const res = await this.scope.model.rpc(meth, [id]);\n      if (res.open)\n        return window.open(res.open);\n      if (res.download) {\n        let a = document.createElement('a');\n        a.href = res.download;\n        a.click();\n        return;\n      }\n      if (res.tag === 'refresh')\n        this.dataSource.refresh();\n      if (res.type) {\n        const act = new (Katrid.Actions[res.type])(res, this.scope, this.scope.location);\n        act.execute();\n      }\n    };\n\n    doBindingAction(evt) {\n      this.selection;\n      Katrid.Services.Actions.load($(evt.currentTarget).data('id'))\n      .then(action => {\n\n        if (action.action_type === 'ir.action.report')\n          Katrid.Actions.ReportAction.dispatchBindingAction(this, action);\n\n      });\n    }\n\n    listRowClick(index, row, evt) {\n      if (row.$hasChildren) {\n        console.log('list row click');\n        this.groupHeaderClick(row, index);\n      } else {\n        const search = {\n          id: row.id,\n          action: this.info.id,\n          view_type: 'form',\n          menu_id: Katrid.app.$location.$$search.menu_id,\n        };\n        if (evt.ctrlKey) {\n          const url = `#${hash}`;\n          window.open(url);\n          return;\n        } else\n          Katrid.app.$location.search(search);\n        this.dataSource.recordIndex = index;\n      }\n    }\n\n    onDataStateChange(event, dataSource) {\n      let self = dataSource.scope.action;\n      if (dataSource.changing)\n        setTimeout(() => {\n          if (self.$element)\n            for (let el of Array.from(self.$element.find(\"input[type!=hidden].form-field:visible\"))) {\n              el = $(el);\n              if (!el.attr('readonly')) {\n                $(el).focus();\n                return;\n              }\n            }\n        });\n    }\n\n    autoReport() {\n      return this.model.autoReport()\n      .then(function(res) {\n        if (res.ok && res.result.open) {\n          return window.open(res.result.open);\n        }\n      });\n    }\n\n    showDefaultValueDialog() {\n      const html = Katrid.UI.Utils.Templates.getSetDefaultValueDialog();\n      const modal = $(Katrid.core.compile(html)(this.scope)).modal();\n      modal.on('hidden.bs.modal', function() {\n        $(this).data('bs.modal', null);\n        return $(this).remove();\n      });\n    }\n\n    selectToggle(el) {\n      this._selection = $(el).closest('table').find('td.list-record-selector :checkbox').filter(':checked');\n      this.selectionLength = this._selection.length;\n    }\n\n    get selection() {\n      if (this.viewType === 'form') {\n        if (this.scope.recordId)\n          return this.scope.recordId;\n        else\n          return;\n      }\n      if (this._selection)\n        return Array.from(this._selection).map((el) => ($(el).data('id')));\n    }\n\n    deleteAttachment(attachments, index) {\n      let att = attachments[index];\n      if (confirm(Katrid.i18n.gettext('Confirm delete attachment?'))) {\n        attachments.splice(index, 1);\n        Katrid.Services.Attachments.destroy(att.id);\n      }\n    }\n  }\n  WindowAction.initClass();\n\n  Katrid.Actions.WindowAction = WindowAction;\n  Katrid.Actions[WindowAction.actionType] = WindowAction;\n\n})();\n","(() => {\n\n  class Loader {\n    constructor(templateCache) {\n      this.$cache = templateCache;\n    }\n\n    getSource(name) {\n      return {\n        src: this.$cache.get(name),\n        path: name,\n        noCache: false,\n      }\n    }\n  }\n\n  class Templates {\n    constructor(app, templates) {\n      this.app = app;\n      Templates.env = new nunjucks.Environment(new Loader(app.$templateCache), { autoescape: false });\n      let oldGet = app.$templateCache.get;\n      app.$templateCache.get = name => {\n        return this.prepare(name, oldGet.call(this, name));\n      };\n      this.loadTemplates(app.$templateCache, templates);\n      for (let [k, v] of Object.entries(PRE_LOADED_TEMPLATES))\n        app.$templateCache.put(k, v);\n    }\n\n    prepare(name, templ) {\n      if (_.isUndefined(templ)) throw Error('Template not found: ' + name);\n      if (templ.tagName === 'SCRIPT')\n        return templ.innerHTML;\n      return templ;\n    }\n\n    compileTemplate(base, templ) {\n      let el = $(base);\n      templ = $(templ.innerHTML);\n      for (let child of Array.from(templ))\n        if (child.tagName === 'JQUERY') {\n          child = $(child);\n          let sel = child.attr('selector');\n          let op = child.attr('operation');\n          if (sel) sel = $(el).find(sel);\n          else sel = el;\n          sel[op](child[0].innerHTML);\n        }\n      return el[0].innerHTML;\n    }\n\n    loadTemplates(templateCache, res) {\n      let templateLst = {};\n      let readTemplates = el => {\n        if (el.tagName === 'TEMPLATES') Array.from(el.children).map(readTemplates);\n        else if (el.tagName === 'SCRIPT') {\n          templateLst[el.id] = el.innerHTML;\n        }\n      };\n      let preProcess = el => {\n        if (el.tagName === 'TEMPLATES') Array.from(el.children).map(preProcess);\n        else if (el.tagName === 'SCRIPT') {\n          let base = el.getAttribute('extends');\n          let id = el.getAttribute('id') || base;\n          if (base) {\n            el = templateLst[base] + el;\n          } else\n            id = el.id;\n          templateCache.put(id, el);\n        }\n      };\n      let parser = new DOMParser();\n      let doc = parser.parseFromString(res, 'text/html');\n      let root = doc.firstChild.children[1].firstChild;\n      readTemplates(root);\n      preProcess(root);\n    }\n\n  }\n\n  let PRE_LOADED_TEMPLATES = {};\n\n  Katrid.UI.registerTemplate = function(name, tmpl) {\n    PRE_LOADED_TEMPLATES[name] = tmpl;\n  };\n\n  Katrid.UI.Templates = Templates;\n  Katrid.UI.Templates.PRE_LOADED_TEMPLATES = PRE_LOADED_TEMPLATES;\n\n})();\n","(function() {\n\n  class ReportAction extends Katrid.Actions.Action {\n    static initClass() {\n      this.actionType = 'ir.action.report';\n    }\n\n    static async dispatchBindingAction(parent, action) {\n      let format = localStorage.katridReportViewer || 'pdf';\n      let sel = parent.selection;\n      console.log('selection ', sel);\n      if (sel)\n        sel = sel.join(',');\n      let params = { data: [{ name: 'id', value: sel }] };\n      const svc = new Katrid.Services.Model('ir.action.report');\n      let res = await svc.post('export_report', { args: [action.id], kwargs: { format, params } });\n      if (res.open)\n        return window.open(res.open);\n    }\n\n    get name() {\n      return this.info.name;\n    }\n\n    constructor(info, scope, location) {\n      super(info, scope, location);\n      this.templateUrl = 'view.report.jinja2';\n      this.userReport = {};\n    }\n\n    userReportChanged(report) {\n      return this.location.search({\n        user_report: report});\n    }\n\n    async onHashChange(params) {\n      console.log('report hash change', params);\n      this.userReport.id = params.user_report;\n      if (this.userReport.id) {\n        const svc = new Katrid.Services.Model('ir.action.report');\n        let res = await svc.post('load_user_report', { kwargs: { user_report: this.userReport.id } });\n        this.userReport.params = res.result;\n      } else {\n        // Katrid.core.setContent(, this.scope);\n      }\n      location.hash = '#/app/?' + $.param(params);\n      let templ = Katrid.Reports.Reports.renderDialog(this);\n      templ = Katrid.Core.$compile(templ)(this.scope);\n      $('#katrid-action-view').empty().append(templ);\n    }\n\n  }\n  ReportAction.initClass();\n\n  Katrid.Actions.ReportAction = ReportAction;\n  Katrid.Actions[ReportAction.actionType] = ReportAction;\n\n})();\n","(function () {\n  let _counter = 0;\n\n\n  class Reports {\n    static initClass() {\n      this.currentReport = {};\n      this.currentUserReport = {};\n    }\n\n    static get(repName) {}\n\n    static renderDialog(action) {\n      console.log(action);\n      return Katrid.app.getTemplate('view.report.jinja2', { action: action });\n    }\n  }\n  Reports.initClass();\n\n\n  class Report {\n    constructor(action, scope) {\n      this.action = action;\n      this.scope = scope;\n      this.info = this.action.info;\n      Katrid.Reports.Reports.currentReport = this;\n      if ((Params.Labels == null)) {\n        Params.Labels = {\n          exact: Katrid.i18n.gettext('Is equal'),\n          in: Katrid.i18n.gettext('Selection'),\n          contains: Katrid.i18n.gettext('Contains'),\n          startswith: Katrid.i18n.gettext('Starting with'),\n          endswith: Katrid.i18n.gettext('Ending with'),\n          gt: Katrid.i18n.gettext('Greater-than'),\n          lt: Katrid.i18n.gettext('Less-than'),\n          between: Katrid.i18n.gettext('Between'),\n          isnull: Katrid.i18n.gettext('Is Null')\n        };\n      }\n\n      this.name = this.info.name;\n      this.id = ++_counter;\n      this.values = {};\n      this.params = [];\n      this.filters = [];\n      this.groupables = [];\n      this.sortables = [];\n      this.totals = [];\n    }\n\n    telegram() {\n      Katrid.Reports.Telegram.export(this);\n    }\n\n    getUserParams() {\n      const report = this;\n      const params = {\n        data: [],\n        file: report.container.find('#id-report-file').val()\n      };\n      for (let p of Array.from(this.params)) {\n        params.data.push({\n          name: p.name,\n          op: p.operation,\n          value1: p.value1,\n          value2: p.value2,\n          type: p.type\n        });\n      }\n\n      const fields = report.container.find('#report-id-fields').val();\n      params['fields'] = fields;\n\n      const totals = report.container.find('#report-id-totals').val();\n      params['totals'] = totals;\n\n      const sorting = report.container.find('#report-id-sorting').val();\n      params['sorting'] = sorting;\n\n      const grouping = report.container.find('#report-id-grouping').val();\n      params['grouping'] = grouping;\n\n      return params;\n    }\n\n    loadFromXml(xml) {\n      let dataTypeDict = {\n        date: 'DateField',\n        datetime: 'DateTimeField',\n      };\n\n      if (_.isString(xml)) {\n        xml = $(xml);\n      }\n      this.scope.customizableReport = xml.attr('customizableReport');\n      this.scope.advancedOptions = xml.attr('advancedOptions');\n      this.model = xml.attr('model');\n      const fields = [];\n\n      for (let f of Array.from(xml.find('param,field'))) {\n        let tag = f.tagName;\n        f = $(f);\n        const name = f.attr('name');\n        console.log(this.info);\n        let fld;\n        if (this.info.fields)\n          fld = this.info.fields[name];\n        const label = f.attr('label') || f.attr('caption') || (fld && fld.caption) || name;\n        const groupable = f.attr('groupable');\n        const sortable = f.attr('sortable');\n        const total = f.attr('total');\n        let param = f.attr('param');\n        if ((tag === 'FIELD') && (!param))\n          param = 'static';\n        const required = f.attr('required');\n        const autoCreate = f.attr('autoCreate') || required || (param === 'static');\n        const operation = f.attr('operation');\n        let type = f.attr('type') || f.data('type') || (fld && fld.type);\n        if (type in dataTypeDict)\n          type = dataTypeDict[type];\n\n        const modelChoices = f.attr('model-choices');\n        if (!type && modelChoices) type = 'ModelChoices';\n        fields.push({\n          name,\n          label,\n          groupable,\n          sortable,\n          total,\n          param,\n          required,\n          operation,\n          modelChoices,\n          type,\n          autoCreate,\n          field: f,\n        });\n      }\n\n      const params = (Array.from(xml.find('param')).map((p) => $(p).attr('name')));\n\n      return this.load(fields, params);\n    }\n\n    saveDialog() {\n      const params = this.getUserParams();\n      const name = window.prompt(Katrid.i18n.gettext('Report name'), Katrid.Reports.Reports.currentUserReport.name);\n      if (name) {\n        Katrid.Reports.Reports.currentUserReport.name = name;\n        $.ajax({\n          type: 'POST',\n          url: this.container.find('#report-form').attr('action') + '?save=' + name,\n          contentType: \"application/json; charset=utf-8\",\n          dataType: 'json',\n          data: JSON.stringify(params)\n        });\n      }\n      return false;\n    }\n\n    load(fields, params) {\n      if (!fields) {\n        ({ fields } = this.info);\n      }\n      if (!params) {\n        params = [];\n      }\n      this.fields = fields;\n      this.scope.fields = {};\n\n      // Create params\n      for (let p of fields) {\n        this.scope.fields[p.name] = p;\n        if (p.groupable)\n          this.groupables.push(p);\n        if (p.sortable)\n          this.sortables.push(p);\n        if (p.total)\n          this.totals.push(p);\n        if (!p.autoCreate) p.autoCreate = params.includes(p.name);\n      }\n    }\n\n    loadParams() {\n      for (let p of Array.from(this.fields)) {\n        if (p.autoCreate)\n          this.addParam(p.name);\n      }\n    }\n\n    addParam(paramName) {\n      for (let p of Array.from(this.fields))\n        if (p.name === paramName) {\n          p = new Param(p, this);\n          this.params.push(p);\n          //$(p.render(@elParams))\n          break;\n        }\n    }\n\n    getValues() {}\n\n\n    export(format) {\n      if (format == null)\n        format = localStorage.katridReportViewer || 'pdf';\n      const params = this.getUserParams();\n      console.log('send params', params);\n      const svc = new Katrid.Services.Model('ir.action.report');\n      svc.post('export_report', { args: [this.info.id], kwargs: { format, params } })\n      .then(function(res) {\n        if (res.open) {\n          return window.open(res.open);\n        }\n      });\n      return false;\n    }\n\n    preview() {\n      return this.export(localStorage.katridReportViewer);\n    }\n\n    renderFields() {\n      let p;\n      let el = $('<div></div>');\n      const flds = this.fields.map(p => `<option value=\"${p.name}\">${p.label}</option>`).join('');\n      const aggs = ((() => {\n        const result1 = [];\n        for (p of Array.from(this.fields)) {\n          if (p.total) {\n            result1.push(`<option value=\"${p.name}\">${p.label}</option>`);\n          }\n        }\n        return result1;\n      })()).join('');\n      el = this.container.find('#report-params');\n      let sel = el.find('#report-id-fields');\n      sel.append($(flds))\n      .select2({ tags: ((() => {\n        const result2 = [];\n        for (p of Array.from(this.fields)) result2.push({id: p.name, text: p.label});\n        return result2;\n      })()) });\n      if (Katrid.Reports.Reports.currentUserReport.params && Katrid.Reports.Reports.currentUserReport.params.fields) {\n        console.log(Katrid.Reports.Reports.currentUserReport.params.fields);\n        sel.select2('val', Katrid.Reports.Reports.currentUserReport.params.fields);\n      }\n      //sel.data().select2.updateSelection([{ id: 'vehicle', text: 'Vehicle'}])\n      sel = el.find('#report-id-totals');\n      sel.append(aggs)\n      .select2({ tags: ((() => {\n        const result3 = [];\n        for (p of Array.from(this.fields)) {         if (p.total) {\n            result3.push({ id: p.name, text: p.label });\n          }\n        }\n        return result3;\n      })()) });\n      return el;\n    }\n\n    renderParams(container) {\n      let p;\n      const el = $('<div></div>');\n      this.elParams = el;\n      const loaded = {};\n\n      const userParams = Katrid.Reports.Reports.currentUserReport.params;\n      if (userParams && userParams.data) {\n        for (p of Array.from(userParams.data)) {\n          loaded[p.name] = true;\n          this.addParam(p.name, p.value);\n        }\n      }\n\n      for (p of Array.from(this.params)) {\n        if (p.static && !loaded[p.name]) {\n          $(p.render(el));\n        }\n      }\n      return container.find('#params-params').append(el);\n    }\n\n    renderGrouping(container) {\n      const opts = (Array.from(this.groupables).map((p) => `<option value=\"${p.name}\">${p.label}</option>`)).join('');\n      const el = container.find(\"#params-grouping\");\n      const sel = el.find('select').select2();\n      return sel.append(opts)\n      .select2(\"container\").find(\"ul.select2-choices\").sortable({\n          containment: 'parent',\n          start() { return sel.select2(\"onSortStart\"); },\n          update() { return sel.select2(\"onSortEnd\"); }\n      });\n    }\n\n    renderSorting(container) {\n      const opts = (Array.from(this.sortables).filter((p) => p.sortable).map((p) => `<option value=\"${p.name}\">${p.label}</option>`)).join('');\n      const el = container.find(\"#params-sorting\");\n      const sel = el.find('select').select2();\n      return sel.append(opts)\n      .select2(\"container\").find(\"ul.select2-choices\").sortable({\n          containment: 'parent',\n          start() { return sel.select2(\"onSortStart\"); },\n          update() { return sel.select2(\"onSortEnd\"); }\n      });\n    }\n\n    render(container) {\n      this.container = container;\n      let el = this.renderFields();\n      if (this.sortables.length) {\n        el = this.renderSorting(container);\n      } else {\n        container.find(\"#params-sorting\").hide();\n      }\n\n      if (this.groupables.length) {\n        el = this.renderGrouping(container);\n      } else {\n        container.find(\"#params-grouping\").hide();\n      }\n\n      return el = this.renderParams(container);\n    }\n  }\n\n\n  class Params {\n    static initClass() {\n      this.Operations = {\n        exact: 'exact',\n        in: 'in',\n        contains: 'contains',\n        startswith: 'startswith',\n        endswith: 'endswith',\n        gt: 'gt',\n        lt: 'lt',\n        between: 'between',\n        isnull: 'isnull'\n      };\n\n      this.DefaultOperations = {\n        CharField: this.Operations.exact,\n        IntegerField: this.Operations.exact,\n        DateTimeField: this.Operations.between,\n        DateField: this.Operations.between,\n        FloatField: this.Operations.between,\n        DecimalField: this.Operations.between,\n        ForeignKey: this.Operations.exact,\n        ModelChoices: this.Operations.exact,\n        SelectionField: this.Operations.exact,\n      };\n\n      this.TypeOperations = {\n        CharField: [this.Operations.exact, this.Operations.in, this.Operations.contains, this.Operations.startswith, this.Operations.endswith, this.Operations.isnull],\n        IntegerField: [this.Operations.exact, this.Operations.in, this.Operations.gt, this.Operations.lt, this.Operations.between, this.Operations.isnull],\n        FloatField: [this.Operations.exact, this.Operations.in, this.Operations.gt, this.Operations.lt, this.Operations.between, this.Operations.isnull],\n        DecimalField: [this.Operations.exact, this.Operations.in, this.Operations.gt, this.Operations.lt, this.Operations.between, this.Operations.isnull],\n        DateTimeField: [this.Operations.exact, this.Operations.in, this.Operations.gt, this.Operations.lt, this.Operations.between, this.Operations.isnull],\n        DateField: [this.Operations.exact, this.Operations.in, this.Operations.gt, this.Operations.lt, this.Operations.between, this.Operations.isnull],\n        ForeignKey: [this.Operations.exact, this.Operations.in, this.Operations.isnull],\n        ModelChoices: [this.Operations.exact, this.Operations.in, this.Operations.isnull],\n        SelectionField: [this.Operations.exact, this.Operations.isnull],\n      };\n\n      this.Widgets = {\n        CharField(param) {\n          return `<div><input id=\"rep-param-id-${param.id}\" ng-model=\"param.value1\" type=\"text\" class=\"form-control\"></div>`;\n        },\n\n        IntegerField(param) {\n          let secondField = '';\n          if (param.operation === 'between') {\n            secondField = `<div class=\"col-xs-6\"><input id=\"rep-param-id-${param.id}-2\" ng-model=\"param.value2\" type=\"text\" class=\"form-control\"></div>`;\n          }\n          return `<div class=\"row\"><div class=\"col-sm-6\"><input id=\"rep-param-id-${param.id}\" type=\"number\" ng-model=\"param.value1\" class=\"form-control\"></div>${secondField}</div>`;\n        },\n\n        DecimalField(param) {\n          let secondField = '';\n          if (param.operation === 'between') {\n            secondField = `<div class=\"col-xs-6\"><input id=\"rep-param-id-${param.id}-2\" ng-model=\"param.value2\" type=\"text\" class=\"form-control\"></div>`;\n          }\n          return `<div class=\"col-sm-6\"><input id=\"rep-param-id-${param.id}\" type=\"number\" ng-model=\"param.value1\" class=\"form-control\"></div>${secondField}`;\n        },\n\n        DateTimeField(param) {\n          let secondField = '';\n          if (param.operation === 'between') {\n            secondField = `<div class=\"col-xs-6\"><input id=\"rep-param-id-${param.id}-2\" type=\"text\" date-picker=\"L\" ng-model=\"param.value2\" class=\"form-control\"></div>`;\n          }\n          return `<div class=\"row\"><div class=\"col-xs-6\"><input id=\"rep-param-id-${param.id}\" type=\"text\" date-picker=\"L\" ng-model=\"param.value1\" class=\"form-control\"></div>${secondField}</div>`;\n        },\n\n        DateField(param) {\n          let secondField = '';\n          if (param.operation === 'between') {\n            secondField = `<div class=\"col-xs-6\"><input id=\"rep-param-id-${param.id}-2\" type=\"text\" date-picker=\"L\" ng-model=\"param.value2\" class=\"form-control\"></div>`;\n          }\n          return `<div class=\"col-sm-12 row\"><div class=\"col-xs-6\"><input id=\"rep-param-id-${param.id}\" type=\"text\" date-picker=\"L\" ng-model=\"param.value1\" class=\"form-control\"></div>${secondField}</div>`;\n        },\n\n        ForeignKey(param) {\n          const serviceName = param.info.field.attr('model') || param.params.model;\n          let multiple = '';\n          if (param.operation === 'in') {\n            multiple = 'multiple';\n          }\n          return `<div><input id=\"rep-param-id-${param.id}\" ajax-choices=\"${serviceName}\" field=\"${param.name}\" ng-model=\"param.value1\" ${multiple}></div>`;\n        },\n\n        ModelChoices(param) {\n          return `<div><input id=\"rep-param-id-${param.id}\" ajax-choices=\"ir.action.report\" model-choices=\"${param.info.modelChoices}\" ng-model=\"param.value1\"></div>`;\n        },\n\n        SelectionField(param) {\n          param.info.choices = param.info.field.data('choices');\n          let defaultValue = param.info.field.attr('default');\n          if (defaultValue)\n            defaultValue = ` ng-init=\"param.value1='${defaultValue}'\"`;\n          return `<div${defaultValue}><select class=\"form-control\" ng-model=\"param.value1\"><option value=\"{{ key }}\" ng-repeat=\"(key, value) in fields.${param.name}.choices\">{{ value }}</option></select></div>`\n        }\n      };\n    }\n  }\n  Params.initClass();\n\n\n  class Param {\n    constructor(info, params) {\n      this.info = info;\n      this.params = params;\n      this.name = this.info.name;\n      this.field = this.params.info.fields && this.params.info.fields[this.name];\n      this.label = this.info.label || this.params.info.caption;\n      this.static = this.info.param === 'static';\n      this.type = this.info.type || (this.field && this.field.type) || 'CharField';\n      this.defaultOperation = this.info.operation || Params.DefaultOperations[this.type];\n      this.operation = this.defaultOperation;\n      // @operations = @info.operations or Params.TypeOperations[@type]\n      this.operations = this.getOperations();\n      this.exclude = this.info.exclude;\n      this.id = ++_counter;\n    }\n\n    defaultValue() {\n      return null;\n    }\n\n    setOperation(op, focus) {\n      if (focus == null) { focus = true; }\n      this.createControls(this.scope);\n      const el = this.el.find(`#rep-param-id-${this.id}`);\n      if (focus) {\n        el.focus();\n      }\n    }\n\n    createControls(scope) {\n      const el = this.el.find(\".param-widget\");\n      el.empty();\n      let widget = Params.Widgets[this.type](this);\n      widget = Katrid.Core.$compile(widget)(scope);\n      return el.append(widget);\n    }\n\n    getOperations() { return (Array.from(Params.TypeOperations[this.type]).map((op) => ({ id: op, text: Params.Labels[op] }))); }\n\n    operationTemplate() {\n      const opts = this.getOperations();\n      return `<div class=\"col-sm-4\"><select id=\"param-op-${this.id}\" ng-model=\"param.operation\" ng-init=\"param.operation='${this.defaultOperation}'\" class=\"form-control\" onchange=\"$('#param-${this.id}').data('param').change();$('#rep-param-id-${this.id}')[0].focus()\">\n  ${opts}\n  </select></div>`;\n    }\n\n    template() {\n      let operation = '';\n      if (!this.operation) operation = this.operationTemplate();\n      return `<div id=\"param-${this.id}\" class=\"row form-group\" data-param=\"${this.name}\" ng-controller=\"ParamController\"><label class=\"control-label\">${this.label}</label>${operation}<div id=\"param-widget-${this.id}\"></div></div>`;\n    }\n\n    render(container) {\n      this.el = this.params.scope.compile(this.template())(this.params.scope);\n      this.el.data('param', this);\n      console.log('render param');\n      this.createControls(this.el.scope());\n      return container.append(this.el);\n    }\n  }\n\n\n  Katrid.UI.uiKatrid.controller('ReportController', ['$scope', '$element', '$compile', function($scope, $element, $compile) {\n    const xmlReport = $scope.$parent.action.info.content;\n    const report = new Report($scope.$parent.action, $scope);\n    $scope.report = report;\n    report.loadFromXml(xmlReport);\n    report.render($element);\n    return report.loadParams();\n  }]);\n\n\n  Katrid.UI.uiKatrid.controller('ReportParamController', ['$scope', '$element', function($scope, $element) {\n    $scope.$parent.param.el = $element;\n    $scope.$parent.param.scope = $scope;\n    return $scope.$parent.param.setOperation($scope.$parent.param.operation, false);\n  }]);\n\n\n\n  class ReportEngine {\n    static load(el) {\n      $('row').each((idx, el) => {\n        el.addClass('row');\n      });\n      $('column').each((idx, el) => {\n        el.addClass('col');\n      })\n    }\n  }\n\n\n  Katrid.Reports = {\n    Reports,\n    Report,\n    Param\n  };\n})();\n","(() => {\n\n  class Widget {\n  }\n\n  class Component {\n  }\n\n  Katrid.UI.Widgets = {\n    Widget,\n    Component\n  };\n})();\n","(() => {\n\n  let compileButtons = (container) => {\n    let sendFileCounter = 0;\n    console.log(container);\n    return container.find('button').each((idx, btn) => {\n      btn = $(btn);\n      let type = btn.attr('type');\n\n      if (!btn.attr('type') || (btn.attr('type') === 'object'))\n        btn.attr('type', 'button');\n      if (type === 'object') {\n        let sendFile = btn.attr('send-file');\n        btn.attr('button-object', btn.attr('name'));\n        if (_.isUndefined(sendFile)) {\n          btn.attr('ng-click', `action.formButtonClick(action.selection, '${ btn.attr('name') }', $event.target);$event.stopPropagation();`);\n        } else {\n          let idSendFile = `__send_file_${++sendFileCounter}`;\n          container.append(`<input id=\"${idSendFile}\" type=\"file\" style=\"display: none\" onchange=\"Katrid.Services.Upload.sendFile('${btn.attr('name')}', this)\"/>`);\n          btn.attr('send-file', btn.attr('name'));\n          btn.attr('onclick', `$('#${idSendFile}').trigger('click')`);\n        }\n      } else if (type === 'tag') {\n        btn.attr('button-tag', btn.attr('name'));\n        btn.attr('onclick', `Katrid.Actions.ClientAction.tagButtonClick($(this))`);\n      }\n      if (!btn.attr('class'))\n        btn.addClass('btn btn-outline-secondary');\n    });\n  };\n\n  class ToolbarComponent extends Katrid.UI.Widgets.Component {\n    constructor() {\n      super();\n      this.scope = false;\n      this.restrict = 'E';\n      this.replace = true;\n      this.transclude = true;\n      this.templateUrl = 'view.header.jinja2';\n    }\n  }\n  Katrid.UI.uiKatrid.directive('toolbar', ToolbarComponent);\n\n\n  class ClientView {\n    constructor(action) {\n      this.action = action;\n    }\n\n    get template() {\n      return Katrid.app.getTemplate(this.templateUrl);\n    }\n\n    render() {\n      return $(this.template);\n    }\n  }\n\n\n  class BaseView {\n    constructor(scope) {\n      this.scope = scope;\n    }\n\n    render() {\n      return Katrid.app.getTemplate(this.templateUrl);\n    }\n  }\n\n  class ActionView extends BaseView{\n    constructor(action, scope, view, content) {\n      super(scope);\n      this.action = action;\n      this.view = view;\n      this.templateUrl = 'view.basic';\n      this.toolbar = true;\n      this.content = content;\n    }\n\n    getTemplateContext() {\n      return { content: this.content };\n    }\n\n    render() {\n      return sprintf(Katrid.app.getTemplate(this.templateUrl), this.getTemplateContext());\n    }\n\n    renderTo(el) {\n      Katrid.core.setContent(this.render(), this.scope);\n    }\n  }\n\n  class View extends ActionView {\n    getBreadcrumb() {\n      let html = `<ol class=\"breadcrumb\">`;\n      let i = 0;\n      for (let h of Katrid.app.actionManager) {\n        if (i === 0 && h.viewModes.length > 1)\n          html += `<li class=\"breadcrumb-item\"><a href=\"#\" ng-click=\"action.backTo(0, 0)\">${ h.info.display_name }</a></li>`;\n        i++;\n        if (Katrid.Actions.actionManager.length > i && h.viewType === 'form')\n          html += `<li class=\"breadcrumb-item\"><a href=\"#\" ng-click=\"action.backTo(${i-1}, 'form')\">${ h.scope.record.display_name }</a></li>`;\n      }\n      if (this.constructor.type === 'form')\n        html += `<li class=\"breadcrumb-item\">{{ self.display_name }}</li>`;\n      return html + '</ol>';\n    }\n\n    render() {\n      return sprintf(Katrid.app.$templateCache.get(this.templateUrl), { content: this.content });\n    }\n\n    getViewButtons() {\n      let btns = Object.entries(View.buttons).map((btn) => this.view.viewModes.includes(btn[0]) ? btn[1] : '').join('');\n      if (btns) btns = `<div class=\"btn-group\">${btns}</div>`;\n      return btns;\n    }\n\n  }\n\n\n  class View2 {\n    constructor(action, viewInfo) {\n      this.viewType = null;\n      this.action = action;\n      this.viewInfo = viewInfo;\n      this.templateUrl = null;\n    }\n\n    renderTo(container) {\n      container.html(this.render(container));\n    }\n\n    get fields() {\n      return this.viewInfo.fields;\n    }\n\n    renderField(fieldEl) {\n      let name = fieldEl.attr('name');\n      if (name) {\n        let fld = this.fields[name];\n        if (fld) {\n          let html = fld.render(this.viewType, fieldEl, { view: this }).toString();\n          if (fld.visible)\n            return html;\n          return '';\n        } else\n          console.error(`Field \"${name}\" not found`);\n      }\n    }\n\n  }\n\n  class FormView extends View2 {\n    constructor(action, viewInfo, opts) {\n      super(action, viewInfo);\n      this.dialog = false;\n      this.viewType = 'form';\n      this.templateUrl = 'view.form.jinja2';\n      this.context = {};\n      if (opts) {\n        this.dialog = opts.dialog;\n        if (opts.templateUrl)\n          this.templateUrl = opts.templateUrl;\n        if (opts.context)\n          Object.assign(this.context, opts.context);\n      }\n    }\n\n    render(container) {\n      let form = $(this.viewInfo.content);\n      form.attr('smart-form', 'smart-form');\n\n      form.addClass('row');\n\n      compileButtons(form);\n      let headerEl = form.find('header:first');\n      let header = '';\n      if (headerEl.length) {\n        headerEl.find('field[name=status]:first').attr('status-field', 'status-field');\n        header = headerEl.html();\n        headerEl.remove();\n      }\n\n      for (let child of form.find('field')) {\n        child = $(child);\n        if (child.attr('invisible') !== undefined)\n          continue;\n        if (!child.parents('field').length) {\n          child.attr('form-field', 'form-field');\n          child.replaceWith(this.renderField(child));\n        }\n      }\n\n      let context = {};\n      Object.assign(context, this.context);\n      Object.assign(context, {\n        header, content: form[0].outerHTML,\n      });\n      if (!this.dialog)\n        context['breadcrumb'] = this.breadcrumb;\n      let templ = Katrid.app.getTemplate(this.templateUrl, context);\n      templ = $(templ);\n\n      templ = Katrid.Core.$compile(templ)(this.action.scope);\n      templ.addClass('ng-form');\n      if (this.action) {\n        // get the form element\n        this.action.$form = templ.find('form').first();\n        // get the form controller\n        this.action.form = angular.element(this.action.$form).controller('form');\n      }\n      return templ;\n    }\n  }\n\n  class List extends View2 {\n    constructor(...args) {\n      super(...args);\n      this.viewType = 'list';\n      this.templateUrl = 'view.list.jinja2';\n      this.action.view = this;\n    }\n\n    render(container) {\n      let list = $(this.viewInfo.content);\n      let context = {};\n      Object.assign(context, this.context);\n      compileButtons(list);\n      let headerEl = list.find('header:first');\n      let header = '';\n      if (headerEl.length) {\n        header = headerEl.html();\n        headerEl.remove();\n      }\n\n      let templ = Katrid.app.getTemplate(this.templateUrl, { header, content: list[0].outerHTML });\n      // compile the template with the action scope\n      templ = $(templ);\n      templ.find('list')\n      .attr('ng-row-click', 'action.listRowClick($index, record, $event)')\n      .attr('list-options', '{\"rowSelector\": true}').attr('ng-row-click', 'action.listRowClick($index, record, $event)');\n\n      templ = Katrid.Core.$compile(templ)(this.action.scope);\n      setTimeout(() => this.action.dataSource.open());\n      return templ;\n    }\n  }\n\n\n  class Card extends View2 {\n    constructor(...args) {\n      super(...args);\n      this.viewType = 'card';\n      this.templateUrl = 'view.card.jinja2';\n      this.action.view = this;\n    }\n\n    render(container) {\n      let content = $(this.viewInfo.content);\n      content.children('field').remove();\n      content.find('field').each((idx, el) => $(el).replaceWith(`\\$\\{ ::record.${ $(el).attr('name') } }`));\n\n      let templ = Katrid.app.getTemplate(this.templateUrl, { content: content[0].outerHTML });\n      // compile the template with the action scope\n      templ = $(templ);\n      templ = Katrid.Core.$compile(templ)(this.action.scope);\n      setTimeout(() => this.action.dataSource.open());\n      return templ;\n    }\n  }\n\n\n\n\n  Katrid.UI.uiKatrid\n\n  .directive('listView2', () => ({\n    scope: false,\n    link($scope, $el) {\n      if (!$el.find('header').find('button').length)\n        $el.find('header').remove();\n    },\n    template($el) {\n      console.log('compile template');\n      compileButtons($el);\n      let headerEl = $el.find('header').first();\n      let header = '';\n      if (headerEl.find('button').length)\n        if (headerEl.length) {\n          header = headerEl.html();\n          headerEl.remove();\n        }\n      $el.find('list').attr('list-options', '{\"rowSelector\": true}').attr('ng-row-click', 'action.listRowClick($index, record, $event)');\n      return sprintf(\n        Katrid.app.getTemplate('view.list')\n        .replace('<!-- replace-header -->', header),\n        { content: $el.html() }\n      );\n    },\n  }))\n\n  .directive('card2', () => ({\n    replace: true,\n    template($el) {\n      $el.children('field').remove();\n      $el.find('field').each((idx, el) => $(el).replaceWith(`{{ ::record.${ $(el).attr('name') } }}`));\n      return sprintf(Katrid.app.getTemplate('view.card'), { content: $el.html() });\n    }\n  }))\n  .directive('smartForm', () => ({\n    restrict: 'A',\n    link(scope, el, attrs) {\n      if ('edit' in attrs) {\n        attrs.$observe('edit', (v) => {\n          if (v === 'false')\n            $('.action-view:first').find('.toolbutton-action-edit').hide();\n          else\n            $('.action-view:first').find('.toolbutton-action-edit').show();\n        })\n      }\n    }\n  }));\n\n\n  Katrid.UI.Views = {\n    View,\n    BaseView,\n    ActionView,\n    FormView,\n    ClientView,\n    List,\n    searchModes: ['list', 'card']\n  };\n\n  Katrid.UI.Views['list'] = List;\n  Katrid.UI.Views['form'] = FormView;\n  Katrid.UI.Views['card'] = Card;\n\n})();\n\n","(function () {\n\n  class ViewInfo {\n    constructor(info) {\n      this._info = info;\n      this.fields = info.fields;\n      this.content = info.content;\n      this.toolbar = info.toolbar;\n    }\n  }\n\n  Katrid.UI.ViewInfo = ViewInfo;\n})();\n","(function () {\n\n  class Grid {\n    constructor($compile) {\n      this.restrict = 'E';\n      this.scope = {};\n      this.$compile = $compile;\n    }\n\n    async loadViews(scope, element, views, attrs) {\n\n      let res = await scope.model.loadViews();\n      // detects the relational field\n      let fld = res.views.list.fields[scope.field.field];\n      scope.dataSource.field = scope.field;\n      // hides the relational field\n      if (fld)\n        fld.visible = false;\n\n      let newViews = res.views;\n\n      for (let [k, v] of Object.entries(views))\n        newViews[k].content = v;\n\n      scope.views = newViews;\n      scope.view = newViews.list;\n      let content = $(scope.view.content);\n      if (scope.inline)\n        content.attr('ng-row-click', 'editItem($event, $index)').attr('inline-editor', scope.inline);\n      else\n        content.attr('ng-row-click', 'openItem($event, $index)');\n      content.attr('records', 'records');\n\n      content.attr('list-options', '{\"deleteRow\": true}');\n\n      // render the list component\n      let el = (this.$compile(content)(scope));\n      element.html(el);\n      element.prepend(this.$compile(Katrid.app.getTemplate('view.form.grid.toolbar.jinja2', {attrs}))(scope));\n      element.find('table').addClass('table-bordered grid');\n    }\n\n    async showDialog(scope, attrs, index) {\n\n      if (scope.views.form)\n        await this.renderDialog(scope, attrs);\n\n      if (index != null) {\n        // Show item dialog\n        scope.recordIndex = index;\n        let record = scope.records[index];\n\n        // load the target record from server\n        if (record && record.$loaded)\n          scope.record = record;\n        else if (record) {\n          let res = await scope.dataSource.get(scope.records[index].id, 0, false, index);\n          res.$loaded = true;\n\n          // load nested data\n          // let currentRecord = scope.record;\n          // if (res.id)\n          //   for (let child of dataSource.children) {\n          //     child.scope.masterChanged(res.id)\n          //     .then(res => {\n          //       _cacheChildren(child.fieldName, currentRecord, res.data);\n          //     })\n          //\n          //   }\n\n        }\n\n      }\n\n    };\n\n    async link(scope, element, attrs) {\n      if (attrs.ngDefaultValues)\n        scope.ngDefaultValues = attrs.ngDefaultValues;\n      let me = this;\n      // Load remote field model info\n\n      const field = scope.$parent.view.fields[attrs.name];\n\n      scope.totalDisplayed = 1000;\n      scope.fieldName = attrs.name;\n      scope.field = field;\n      scope.records = [];\n      scope.recordIndex = -1;\n      scope._cachedViews = {};\n      scope._ = scope.$parent._;\n      scope._changeCount = 0;\n      scope.dataSet = [];\n      scope.model = new Katrid.Services.Model(field.model);\n      scope.isList = true;\n\n      if (attrs.inlineEditor === 'tabular')\n        scope.inline = 'tabular';\n      else if (attrs.hasOwnProperty('inlineEditor'))\n        scope.inline = 'inline';\n\n      scope.getContext = function () {\n        return {}\n      };\n\n      scope.$setDirty = function () {\n        return {}\n      };\n\n      // Set parent/master data source\n      let dataSource = scope.dataSource = new Katrid.Data.DataSource(scope);\n      dataSource.readonly = !_.isUndefined(attrs.readonly);\n      let p = scope.$parent;\n      while (p) {\n        if (p.action && p.action.dataSource) {\n          scope.dataSource.masterSource = p.action.dataSource;\n          break;\n        } else if (p.dataSource) {\n          scope.dataSource.masterSource = p.dataSource;\n          break;\n        }\n        p = p.$parent;\n      }\n\n      scope.parent = dataSource.masterSource.scope;\n      scope.action = dataSource.masterSource.action;\n      dataSource.action = scope.action;\n\n      scope.dataSource.fieldName = scope.fieldName;\n      scope.gridDialog = null;\n      let gridEl = null;\n\n      // check if the grid has custom views grid:view\n      let views = {};\n      for (let child of element.children()) {\n        if (child.tagName.startsWith('GRID:')) {\n          let viewType = child.tagName.split(':')[1].toLowerCase();\n          child = $(child);\n          views[viewType] = `<${viewType}>${child.html()}</${viewType}>`;\n        }\n      }\n\n      await me.loadViews(scope, element, views, attrs);\n\n      scope.doViewAction = (viewAction, target, confirmation) => scope.action._doViewAction(scope, viewAction, target, confirmation);\n\n      let _cacheChildren = (fieldName, record, records) => {\n        record[fieldName] = records;\n      };\n\n      scope._incChanges = () => {\n        if (!scope.$parent.$fieldLog[scope.field.name])\n          scope.$parent.$fieldLog[scope.field.name] = {};\n        scope.$parent.$fieldLog[scope.field.name].count++;\n      };\n\n      scope.addItem = async () => {\n        await scope.dataSource.insert();\n        if (attrs.$attr.inlineEditor) {\n          scope.records.splice(0, 0, scope.record);\n          scope.dataSource.edit();\n          if (!scope.$parent.record[scope.fieldName])\n            scope.$parent.record[scope.fieldName] = [];\n          scope.$parent.record[scope.fieldName].push(scope.record);\n          scope.$apply();\n        } else\n          return this.showDialog(scope, attrs);\n      };\n\n      scope.addRecord = function (rec) {\n        let record = Katrid.Data.createRecord({$loaded: true}, scope.dataSource);\n        for (let [k, v] of Object.entries(rec))\n          record[k] = v;\n        scope.records.push(record);\n        if (!scope.$parent.record[scope.fieldName])\n          scope.$parent.record[scope.fieldName] = [];\n        scope.$parent.record[scope.fieldName].push(record);\n        console.log('add record', record);\n      };\n\n      scope.cancelChanges = () => scope.dataSource.setState(Katrid.Data.DataSourceState.browsing);\n\n      scope.openItem = async (evt, index) => {\n        await this.showDialog(scope, attrs, index);\n        if (scope.dataSource.masterSource.changing && !scope.dataSource.readonly) {\n          scope.dataSource.edit();\n        }\n        scope.$apply();\n      };\n\n      scope.editItem = (evt, index) => {\n        if (scope.dataSource.changing)\n          scope.save();\n        if (scope.$parent.dataSource.changing) {\n          scope.dataSource.recordIndex = index;\n          scope.dataSource.edit();\n\n          // delay focus field\n          setTimeout(() => {\n            let el = $(evt.target).closest('td').find('input.form-control').focus();\n            setTimeout(() => el.select());\n          }, 100);\n\n        }\n      };\n\n      scope.removeItem = function (idx) {\n        const rec = scope.records[idx];\n        scope.records.splice(idx, 1);\n        scope._incChanges();\n        rec.$record.$delete();\n        //scope.$parent.record.$modifiedData[scope.fieldName].$deleted.append(rec);\n        // return scope.dataSource.applyModifiedData(null, null, rec);\n      };\n\n      scope.$set = (field, value) => {\n        const control = scope.form[field];\n        control.$setViewValue(value);\n        control.$render();\n      };\n\n      scope.save = function () {\n        // const data = scope.dataSource.applyModifiedData(scope.form, scope.gridDialog, scope.record);\n        scope._incChanges();\n        if (scope.inline)\n          return;\n        // return scope.$parent.record[scope.fieldName] = scope.records;\n        if (scope.recordIndex > -1) {\n          let rec = scope.record;\n          scope.record = null;\n          scope.records.splice(scope.recordIndex, 1);\n          setTimeout(() => {\n            scope.records.splice(scope.recordIndex, 0, rec);\n            scope.$apply();\n          });\n        } else if (scope.recordIndex === -1) {\n          scope.records.push(scope.record);\n          // scope.$parent.record[scope.fieldName] = scope.records;\n        }\n        if (!scope.inline) {\n          scope.gridDialog.modal('toggle');\n        }\n      };\n\n\n      let _loadChildFromCache = (child) => {\n        if (scope.record.hasOwnProperty(child.fieldName)) {\n          child.scope.records = scope.record[child.fieldName];\n        }\n      };\n\n      function trim(str) {\n        str = str.replace(/^\\s+/, '');\n        for (let i = str.length - 1; i >= 0; i--) {\n          if (/\\S/.test(str.charAt(i))) {\n            str = str.substring(0, i + 1);\n            break;\n          }\n        }\n        return str;\n      }\n\n      scope.pasteData = async function () {\n        let cache = {};\n\n        let _queryForeignKeyField = async function (field, val) {\n          return new Promise(async (resolve, reject) => {\n\n            if (!cache[field.name])\n              cache[field.name] = {};\n            if (cache[field.name][val] === undefined) {\n              let res = await scope.model.getFieldChoices(field.name, val, {exact: true});\n              if (res.items && res.items.length)\n                cache[field.name][val] = res.items[0];\n              else\n                cache[field.name][val] = null;\n            }\n            resolve(cache[field.name][val]);\n\n          });\n        };\n\n        let fields = [];\n        for (let f of $(scope.view.content).find('field')) {\n          let field = scope.view.fields[$(f).attr('name')];\n          if (field && (_.isUndefined(field.visible) || field.visible))\n            fields.push(field);\n        }\n        let txt = await navigator.clipboard.readText();\n\n        // read lines\n        let rowNo = 0;\n        for (let row of txt.split(/\\r?\\n/)) {\n          rowNo++;\n          if (row) {\n            let i = 0;\n            let newObj = {};\n            for (let col of row.split(/\\t/)) {\n              let field = fields[i];\n              if (field instanceof Katrid.Data.Fields.ForeignKey)\n                newObj[field.name] = await _queryForeignKeyField(field, trim(col));\n              else\n                newObj[field.name] = trim(col);\n              i++;\n            }\n            scope.addRecord(newObj);\n          }\n        }\n        scope.$apply();\n      };\n\n\n      let unkook = [\n        scope.$on('masterChanged', async function (evt, master, key) {\n          // Ajax load nested data\n          if (master === scope.dataSource.masterSource) {\n            scope.dataSet = [];\n            scope._changeCount = 0;\n            scope.records = [];\n            if (key != null) {\n              const data = {};\n              data[field.field] = key;\n              if (key) {\n                // TODO remove in future\n                scope.dataSource.pageLimit = 1000;\n                return await scope.dataSource.search(data)\n                .then((data) => {\n                  // setup the log information, it will be useful to watch field value changes\n                  scope.$parent.$fieldLog[field.name] = {count: 0, value: data.data};\n                  scope.$parent.record[field.name] = data.data;\n                  scope.$parent.$apply();\n                })\n                .finally(() => scope.dataSource.state = Katrid.Data.DataSourceState.browsing);\n              }\n            } else {\n              scope.$parent.record[field.name] = [];\n            }\n          }\n        }),\n        scope.$on('afterCancel', function (evt, master) {\n          if (master === scope.dataSource.masterSource)\n            scope.dataSource.cancel();\n        })\n      ];\n\n\n      scope.$on('$destroy', function () {\n        unkook.map(fn => fn());\n        dataSource.masterSource.children.splice(dataSource.masterSource.indexOf(dataSource), 1);\n      });\n\n\n    }\n\n    async renderDialog(scope, attrs) {\n      let el;\n      let html = scope.views.form.content;\n\n      scope.view = scope.views.form;\n      let fld = scope.views.form.fields[scope.field.field];\n      if (fld)\n        fld.visible = false;\n\n      if (attrs.inline) {\n        el = me.$compile(html)(scope);\n        gridEl.find('.inline-input-dialog').append(el);\n      } else {\n        let view = new Katrid.UI.Views.FormView({scope}, scope.views.form, {\n          dialog: true,\n          templateUrl: 'view.field.OneToManyField.Dialog.jinja2',\n          context: {\n            field: scope.field,\n          },\n        });\n        el = view.render();\n      }\n\n      // Get the first form controller\n      scope.formElement = el.find('form:first');\n      scope.form = scope.formElement.controller('form');\n      scope.gridDialog = el;\n\n      if (!attrs.inline) {\n        el.modal('show');\n        el.on('hidden.bs.modal', function () {\n          scope.record = null;\n          scope.dataSource.state = Katrid.Data.DataSourceState.browsing;\n          el.remove();\n          scope.gridDialog = null;\n          scope.recordIndex = -1;\n          _destroyChildren();\n        });\n      }\n      el.find('.modal-dialog').addClass('ng-form');\n      return new Promise(function (resolve) {\n        el.on('shown.bs.modal', () => resolve(el));\n      });\n    };\n\n  }\n\n  Katrid.UI.uiKatrid\n\n  .directive('grid', ['$compile', Grid])\n\n  .directive('list', ['$compile', $compile => ({\n    restrict: 'E',\n    scope: false,\n    compile(el, attrs) {\n      el.addClass('table-responsive');\n      let rowClick = attrs.ngRowClick;\n      let records = attrs.records || 'groups';\n      let content = el.html();\n      let options = {};\n      if (attrs.listOptions)\n        options = JSON.parse(attrs.listOptions);\n      let template = Katrid.app.getTemplate('view.list.table.jinja2', {attrs, rowClick, options, records});\n\n      return function (scope, el, attrs, controller) {\n        let templ = $(template);\n        let tr = templ.find('tbody>tr:first');\n        let thead = templ.find('thead>tr:first');\n        let tfoot = templ.find('tfoot>tr:first');\n\n        let formView;\n        let ngTrClass = attrs.ngTrClass;\n        if (ngTrClass)\n          ngTrClass = ',' + ngTrClass;\n        else\n          ngTrClass = '';\n        console.log('row class', ngTrClass);\n        if (attrs.inlineEditor) {\n          templ.addClass('inline-editor');\n          formView = $(scope.views.form.content);\n          tr\n          .attr('ng-form', \"grid-row-form-{{$index}}\")\n          .attr('id', 'grid-row-form-{{$index}}');\n        } else\n          tr.attr(\n              'ng-class',\n              \"{\" +\n              \"'group-header': record.$hasChildren, \" +\n              \"'form-data-changing': (dataSource.changing && dataSource.recordIndex === $index), \" +\n              \"'form-data-readonly': !(dataSource.changing && dataSource.recordIndex === $index)\" +\n              ngTrClass +\n              \"}\"\n          );\n\n        // compile fields\n        let fields = $('<div>').append(content);\n        let totals = [];\n        let hasTotal = false;\n        let td, th;\n        for (let fld of fields.children('field')) {\n          fld = $(fld);\n          let fieldName = fld.attr('name');\n          let field = scope.view.fields[fieldName];\n          if (field) {\n\n            field.assign(fld);\n\n            let total = fld.attr('total');\n            if (total) {\n              hasTotal = true;\n              totals.push({\n                field: field,\n                name: fieldName,\n                total: total,\n              });\n            } else\n              totals.push(false);\n\n            if (!field.visible)\n              continue;\n\n            let inplaceEditor = false;\n            if (formView) {\n              inplaceEditor = formView.find(`field[name=\"${fieldName}\"]`);\n              inplaceEditor = $(inplaceEditor[0].outerHTML).attr('form-field', 'form-field').attr('inline-editor', attrs.inlineEditor)[0].outerHTML;\n            }\n            let fieldEl = $(field.render('list', fld, {view: scope.view}));\n            th = fieldEl.first();\n            td = $(th).next();\n          } else {\n            // just use the html content\n            th = '<th></th>';\n            td = `<td>${fld.html()}</td>`;\n          }\n          tr.append(td);\n          thead.append(th);\n        }\n\n        if (hasTotal)\n          for (total of totals)\n            tfoot.append(Katrid.app.getTemplate('view.list.table.total.jinja2', {field: total.field}));\n        else\n          tfoot.remove();\n\n        if (options.deleteRow) {\n          let delRow = $(Katrid.app.getTemplate('view.list.table.delete.jinja2'));\n          for (let child of delRow)\n            if (child.tagName === 'TD')\n              tr.append(child);\n            else if (child.tagName === 'TH')\n              thead.append(child);\n          if (hasTotal)\n            tfoot.append('<td class=\"list-column-delete\" ng-show=\"dataSource.parent.changing && !dataSource.readonly\"></td>');\n        }\n        el.html('');\n        el.append($compile(templ)(scope));\n      }\n    }\n  })]);\n\n\n})();\n","(function () {\n  const uiKatrid = Katrid.UI.uiKatrid;\n\n  uiKatrid.filter('numberFormat', () => {\n    return (value, maxDigits = 3) => {\n      if (value == null)\n        return '';\n      return new Intl.NumberFormat('pt-br', { maximumSignificantDigits: maxDigits }).format(value);\n    }\n  });\n\n})();\n","(function() {\n\n  let conditionsLabels = {\n    '=': Katrid.i18n.gettext('Is equal'),\n    '!=': Katrid.i18n.gettext('Is different'),\n    '>': Katrid.i18n.gettext('Greater-than'),\n    '<': Katrid.i18n.gettext('Less-than'),\n  };\n\n  let conditionSuffix = {\n    '=': '',\n    '!=': '__isnot',\n    'like': '__icontains',\n    'not like': '__not_icontains',\n    '>': '__gt',\n    '>=': '__gte',\n    '<': '__lt',\n    '<=': '__lte',\n    'in': '__in',\n    'not in': '__not_in',\n  };\n\n\n  class SearchQuery {\n    constructor(searchView) {\n      this.searchView = searchView;\n      this.items = [];\n      this.groups = [];\n    }\n\n    add(item) {\n      if (this.items.includes(item)) {\n        item.facet.addValue(item);\n        item.facet.refresh();\n      } else {\n        this.items.push(item);\n        this.searchView.renderFacets();\n      }\n      if (item instanceof SearchGroup)\n        this.groups.push(item);\n      this.searchView.change();\n    }\n\n    loadItem(item) {\n      this.items.push(item);\n      if (item instanceof SearchGroup)\n        this.groups.push(item);\n    }\n\n    remove(item) {\n      this.items.splice(this.items.indexOf(item), 1);\n      if (item instanceof SearchGroup) {\n        this.groups.splice(this.groups.indexOf(item), 1);\n      }\n      this.searchView.change();\n    }\n\n    getParams() {\n      let r = [];\n      for (let i of this.items)\n        r = r.concat(i.getParamValues());\n      return r;\n    }\n  }\n\n\n  class FacetView {\n    constructor(item) {\n      this.item = item;\n      this.values = [];\n    }\n\n    get separator() {\n      return ` <span class=\"facet-values-separator\">${Katrid.i18n.gettext('or')}</span> `;\n    }\n\n    init(item, values) {\n      this.item = item;\n      if (values)\n        this.values = values;\n      else\n        this.values = [{\n          searchString: this.item.getDisplayValue(), value: this.item.value\n        }];\n    }\n\n    addValue(value) {\n      return this.values.push(value);\n    }\n\n    get caption() {\n      return this.item.caption;\n    }\n\n    clear() {\n      this.values = [];\n    }\n\n    get templateValue() {\n      return (Array.from(this.values).map(\n        s => s instanceof SearchObject ? s.display : s)\n      ).join(this.separator);\n    }\n\n    link(searchView) {\n      const html = $(this.template());\n      this.item.facet = this;\n      this.element = html;\n      const rm = html.find('.facet-remove');\n      rm.click(evt => searchView.onRemoveItem(evt, this.item));\n      return html;\n    }\n\n    refresh() {\n      return this.element.find('.facet-value').html(this.templateValue());\n    }\n\n    load(searchView) {\n      searchView.query.loadItem(this.item);\n      this.render(searchView);\n    }\n\n    destroy() {\n      this.clear();\n    }\n\n    getParamValues() {\n      const r = [];\n      for (let v of this.values) {\n        r.push(this.item.getParamValue(v));\n      }\n      if (r.length > 1)\n        return [{'OR': r}];\n      return r;\n    }\n  }\n\n  class FacetGroup extends FacetView {\n    constructor(...args) {\n      super(...args);\n      this.grouping = true;\n    }\n\n    clear() {\n      let oldValues = this.values;\n      super.clear();\n      for (let v of oldValues)\n        if (v._ref)\n          v._ref._selected = false;\n    }\n\n    get separator() {\n      return ` <span> &gt; </span> `;\n    }\n\n    get caption() {\n      return '<span class=\"fa fa-bars\"></span>';\n    }\n  }\n\n\n\n\n  class SearchItem {\n    constructor(view, name, el) {\n      this.view = view;\n      this.name = name;\n      this.el = el;\n    }\n\n    getDisplayValue() {\n      if (this.value) {\n        return this.value[1];\n      }\n      return this.searchString;\n    }\n\n    getParamValue(name, value) {\n      const r = {};\n      if (_.isArray(value)) {\n        r[name] = value[0];\n      } else {\n        r[name + '__icontains'] = value;\n      }\n      return r;\n    }\n\n    _doChange() {\n      this.view.update();\n    }\n  }\n\n  class SearchFilter extends SearchItem {\n    constructor(view, name, caption, domain, group, el) {\n      super(view, name, el);\n      this.group = group;\n      this.caption = caption;\n      if (_.isString(domain))\n        domain = JSON.parse(domain.replace(/'/g, '\"'));\n      this.domain = domain;\n      this._selected = false;\n    }\n\n    static fromItem(view, el, group) {\n      return new SearchFilter(view, el.attr('name'), el.attr('caption') || el.attr('label'), el.attr('domain'), group, el);\n    }\n\n    toString() {\n      return this.caption;\n    }\n\n    toggle() {\n      this.selected = !this.selected;\n    }\n\n    get selected() {\n      return this._selected;\n    }\n\n    set selected(value) {\n      this._selected = value;\n      if (value)\n        this.group.addValue(this);\n      else\n        this.group.removeValue(this);\n      this._doChange();\n    }\n\n    getDisplayValue() {\n      return this.caption;\n    }\n\n    get facet() {\n      return this.group.facet;\n    }\n\n    getParamValue() {\n      return this.domain;\n    }\n\n    get value() {\n      return this.domain;\n    }\n  }\n\n  class SearchFilters extends Array {\n    constructor(view, facet) {\n      super();\n      this.view = view;\n      this._selection = [];\n      if (!facet)\n        facet = new FacetView(this);\n      this._facet = facet;\n    }\n\n    static fromItem(view, el) {\n      let group = new SearchFilters(view);\n      group.push(SearchFilter.fromItem(view, el, group));\n      return group;\n    }\n\n    static fromGroup(view, el) {\n      let group = new SearchFilters(view);\n      for (let child of el.children())\n        group.push(SearchFilter.fromItem(view, $(child), group));\n      console.log(group);\n      return group;\n    }\n\n    addValue(item) {\n      this._selection.push(item);\n      this._facet.values = this._selection.map(item => (new SearchObject(item.toString(), item.value)));\n      this._refresh();\n    }\n\n    removeValue(item) {\n      this._selection.splice(this._selection.indexOf(item), 1);\n      this._facet.values = this._selection.map(item => ({ searchString: item.getDisplayValue(), value: item.value }));\n      this._refresh();\n    }\n\n    selectAll() {\n      for (let item of this)\n        this.addValue(item);\n      this.view.update();\n    }\n\n    get caption() {\n      return '<span class=\"fa fa-filter\"></span>';\n    }\n\n    _refresh() {\n      if (this._selection.length) {\n        if (this.view.facets.indexOf(this._facet) === -1)\n          this.view.facets.push(this._facet);\n      } else if (this.view.facets.indexOf(this._facet) > -1)\n        this.view.facets.splice(this.view.facets.indexOf(this._facet), 1);\n    }\n\n    getParamValue(v) {\n      return v.value;\n    }\n\n    clear() {\n      this._selection = [];\n    }\n\n  }\n\n  class SearchGroups extends SearchFilters {\n    constructor(view, facet) {\n      if (!facet)\n        facet = new FacetGroup();\n      super(view, facet);\n    }\n\n    static fromGroup(opts) {\n      let view = opts.view;\n      let el = opts.el;\n      // get default facet\n      let facet = opts.facet || view.facetGrouping;\n      let group = new SearchGroups(view, facet);\n      if (el)\n        for (let child of el.children())\n          group.push(SearchGroup.fromItem(view, $(child), group));\n      return group;\n    }\n\n    addValue(item) {\n      this.view.groupLength++;\n      let newItem = new SearchObject(item.toString(), item.value);\n      newItem._ref = item;\n      this._facet.values.push(newItem);\n      this._refresh();\n    }\n\n    removeValue(item) {\n      this.view.groupLength--;\n      for (let i of this._facet.values)\n        if (i._ref === item) {\n          this._facet.values.splice(this._facet.values.indexOf(i), 1);\n          break;\n        }\n      this._refresh();\n    }\n\n    _refresh() {\n      if (this._facet.values.length) {\n        if (this.view.facets.indexOf(this._facet) === -1)\n          this.view.facets.push(this._facet);\n      } else if (this.view.facets.indexOf(this._facet) > -1)\n        this.view.facets.splice(this.view.facets.indexOf(this._facet), 1);\n    }\n  }\n\n  class SearchObject {\n    constructor(display, value) {\n      this.display = display;\n      this.value = value;\n    }\n  }\n\n  class SearchResult {\n    constructor(field, value) {\n      this.field = field;\n      this.value = value;\n      this.text = value[1];\n      this.indent = true;\n    }\n\n    select() {\n      this.field.selectItem(this.value);\n    }\n  }\n\n  class SearchField extends SearchItem {\n    constructor(view, name, el, field) {\n      super(view, name, el);\n      this.field = field;\n      this._expanded = false;\n      if (field.type === 'ForeignKey') {\n        this.expandable = true;\n        this.children = [];\n      } else {\n        this.expandable = false;\n      }\n    }\n\n    get expanded() {\n      return this._expanded;\n    }\n\n    set expanded(value) {\n      this._expanded = value;\n      if (value)\n        this._loadChildren();\n      else {\n        this.children = [];\n        if (this.view.$items)\n          for (let i = this.view.$items.length-1; i > 0; i--) {\n            let obj = this.view.$items[i];\n            if (obj.field === this) {\n              this.view.$items.splice(i, 1);\n\n            }\n          }\n      }\n    }\n\n    _loadChildren() {\n      this.loading = true;\n      this.view.scope.model.getFieldChoices(this.name, this.view.text)\n      .then(res => {\n        this.children = res.items;\n        // append returned items onto searchView.$items menu\n        let index = this.view.$items.indexOf(this);\n        if (index > -1) {\n          for (let obj of this.children) {\n            index++;\n            this.view.$items.splice(index, 0, new SearchResult(this, obj))\n          }\n        }\n      })\n      .finally(() => this.view.scope.$apply(() => this.loading = false));\n    }\n\n    get facet() {\n      if (!this._facet)\n        this._facet = new FacetView(this);\n      return this._facet;\n    }\n\n    getDisplayValue() {\n      return this.value;\n    }\n\n    getParamValue(value) {\n      const r = {};\n      let name = this.name;\n      if (_.isArray(value)) {\n        r[name] = value[0];\n      } else if (value instanceof SearchObject) {\n        return value.value;\n      } else {\n        r[name + '__icontains'] = value;\n      }\n      return r;\n    }\n\n    get caption() {\n      return this.field.caption;\n    }\n\n    get value() {\n      if (this._value)\n        return this._value[1];\n      return this.view.text;\n    }\n\n    select() {\n      this.facet.addValue(this.value);\n      this.view.addFacet(this.facet);\n      this.view.close();\n      this.view.update();\n    }\n\n    selectItem(item) {\n      let domain = {};\n      domain[this.field.name] = item[0];\n      this.facet.addValue(new SearchObject(item[1], domain));\n      this.view.addFacet(this.facet);\n      this.view.close();\n      this.view.update();\n    }\n\n    static fromField(view, el) {\n      let field = view.view.fields[el.attr('name')];\n      return new SearchField(view, field.name, el, field);\n    }\n\n    get template() {\n      return _.sprintf(Katrid.i18n.gettext(`Search <i>%(caption)s</i> by: <strong>%(text)s</strong>`), {\n        caption: this.field.caption,\n        text: this.view.text,\n      });\n    }\n  }\n\n  class SearchGroup extends SearchFilter {\n    constructor(view, name, caption, group, el) {\n      super(view, name, el);\n      this.group = group;\n      this.caption = caption;\n      this._selected = false;\n    }\n\n    static fromItem(view, el, group) {\n      return new SearchGroup(view, el.attr('name'), el.attr('caption'), group, el);\n    }\n\n    toString() {\n      return this.caption;\n    }\n  }\n\n  class CustomFilterItem extends SearchFilter {\n    constructor(view, field, condition, value, group) {\n      super(view, field.name, field.caption, null, group);\n      this.field = field;\n      this.condition = condition;\n      this._value = value;\n      this._selected = true;\n    }\n\n    toString() {\n      let s = this.field.format(this._value);\n      return this.field.caption + ' ' + conditionsLabels[this.condition].toLowerCase() + ' \"' + s + '\"';\n    }\n\n    get value() {\n      let r = {};\n      r[this.field.name + conditionSuffix[this.condition]] = this._value;\n      return r;\n    }\n\n  }\n\n  Katrid.UI.uiKatrid.controller('CustomFilterController', ['$scope', '$element', '$filter', function ($scope, $element, $filter) {\n    $scope.tempFilter = null;\n    $scope.customFilter = [];\n\n    $scope.fieldChange = function (field) {\n      $scope.field = field;\n      $scope.condition = field.defaultCondition;\n      $scope.conditionChange($scope.condition);\n    };\n\n    $scope.conditionChange = (condition) => {\n      $scope.controlVisible = $scope.field.isControlVisible(condition);\n    };\n\n    $scope.valueChange = (value) => {\n      $scope.searchValue = value;\n    };\n\n    $scope.addCondition = (field, condition, value) => {\n      if (!$scope.tempFilter)\n        $scope.tempFilter = new SearchFilters($scope.$parent.search);\n      $scope.tempFilter.push(new CustomFilterItem($scope.$parent.search, field, condition, value, $scope.tempFilter));\n      $scope.field = null;\n      $scope.condition = null;\n      $scope.controlVisible = false;\n      $scope.searchValue = undefined;\n    };\n\n    $scope.applyFilter = () => {\n      if ($scope.searchValue)\n        $scope.addCondition($scope.field, $scope.condition, $scope.searchValue);\n      $scope.customFilter.push($scope.tempFilter);\n      $scope.tempFilter.selectAll();\n      $scope.tempFilter = null;\n      $scope.customSearchExpanded = false;\n    };\n  }])\n\n  .directive('customFilter', () => (\n    {\n      restrict: 'A',\n      scope: {\n        action: '=',\n      },\n    }\n  ));\n\n  class SearchView {\n    constructor(scope, element, view) {\n      this.scope = scope;\n      this.element = element;\n      this.query = new SearchQuery(this);\n      this._viewMoreButtons = localStorage.getItem('katrid.search.viewMoreButtons') === 'true';\n      this.items = [];\n      this.fields = [];\n      this.filterGroups = [];\n      this.groups = [];\n      this._groupLength = this.groupLength = 0;\n      this.facets = [];\n      this.input = element.find('.search-view-input');\n      this.view = view;\n      // available dropdown items\n      this.$items = null;\n\n      // groups must have a unique facet\n      this.facetGrouping = new FacetGroup();\n\n      if (view) {\n        this.el = $(view.content);\n        this.menu = element.find('.search-dropdown-menu.search-view-menu');\n        // let menu = this.createMenu(scope, element.find('.search-dropdown-menu.search-view-menu'), element);\n\n        for (let child of this.el.children()) {\n          child = $(child);\n          let tag = child.prop('tagName');\n          let obj;\n          if (tag === 'FILTER') {\n            obj = SearchFilters.fromItem(this, child);\n            this.filterGroups.push(obj);\n          }\n          else if (tag === 'FILTER-GROUP') {\n            obj = SearchFilters.fromGroup(this, child);\n            this.filterGroups.push(obj);\n            continue;\n          }\n          else if (tag === 'GROUP') {\n            obj = SearchGroup.fromItem({ view: this, el: child });\n            this.groups.push(obj);\n            continue;\n          }\n          else if (tag === 'FIELD') {\n            obj = SearchField.fromField(this, child);\n            this.fields.push(obj);\n            continue;\n          }\n          console.log('obj', obj);\n          if (obj)\n            this.append(obj);\n        }\n\n        this.input\n        .on('input', evt => {\n          if (this.input.val().length) {\n            return this.show(evt);\n          } else {\n            return this.close(evt);\n          }\n        })\n        .on('keydown', evt => {\n          switch (evt.which) {\n            case Katrid.UI.keyCode.DOWN:\n              this.move(1);\n              evt.preventDefault();\n              break;\n            case Katrid.UI.keyCode.UP:\n              this.move(-1);\n              evt.preventDefault();\n              break;\n            case Katrid.UI.keyCode.ENTER:\n              this.scope.$apply(() => angular.element(this.menu.find('li.active a.search-menu-item')).scope().item.select(evt));\n              break;\n            case Katrid.UI.keyCode.BACKSPACE:\n              if (this.input.val() === '') {\n                this.scope.$apply(() => this.facets.splice(this.facets.length-1, 1).map(facet => facet.clear()));\n                this.update();\n                // const item = this.query.items[this.searchView.query.items.length-1];\n              }\n              break;\n          }\n        })\n        .on('blur', evt => {\n          this.input.val('');\n          return this.close();\n        });\n      }\n    }\n\n    addCustomGroup(field) {\n      if (!this.customGroups) {\n        this.customGroups = new SearchGroups(this, this.facetGrouping);\n        this.groups.push(this.customGroups);\n      }\n      let obj = new SearchGroup(this, field.name, field.caption, this.customGroups);\n      this.customGroups.push(obj);\n      obj.selected = true;\n    }\n\n    set viewMoreButtons(value) {\n      if (this._viewMoreButtons !== value) {\n        this._viewMoreButtons = value;\n        localStorage.setItem('katrid.search.viewMoreButtons', value);\n      }\n    }\n\n    get viewMoreButtons() {\n      return this._viewMoreButtons;\n    }\n\n    load(filter) {\n      Object.entries(filter).map((item, idx) => {\n        let i = this.getByName(item[0]);\n        if (i)\n          i.selected = true;\n      })\n    }\n\n    getByName(name) {\n      // try to find inside a group of filters\n      for (let item of this.filterGroups)\n        for (let subitem of item)\n          if (subitem.name === name)\n            return subitem;\n\n      for (let item of this.items)\n        if (item.name === name)\n          return item;\n    }\n\n    append(item) {\n      this.items.push(item);\n    }\n\n    addFacet(facet) {\n      if (!this.facets.includes(facet))\n        this.facets.push(facet);\n    }\n\n    first() {\n      this.menu.find('li.active a.search-menu-item').removeClass('active');\n      this.menu.find('li:first').addClass('active');\n    }\n\n    remove(index) {\n      let facet = this.facets[index];\n      facet.destroy();\n      this.facets.splice(index, 1);\n      this.update();\n    }\n\n    getParams() {\n      let r = [];\n      for (let i of this.facets)\n        if (!i.grouping)\n          r = r.concat(i.getParamValues());\n      return r;\n    }\n\n    dump() {\n      let res = [];\n      for (let i of this.facets)\n        res.push(i);\n      return res;\n    }\n\n    move(distance) {\n      const fw = distance > 0;\n      distance = Math.abs(distance);\n      while (distance !== 0) {\n        distance--;\n        let el = this.element.find('.search-view-menu li.active');\n        if (el.length) {\n          el.removeClass('active');\n          if (fw) {\n            el = el.next();\n          } else {\n            el = el.prev();\n          }\n          el.addClass('active');\n        } else {\n          if (fw) {\n            el = this.element.find('.search-view-menu > li:first');\n          } else {\n            el = this.element.find('.search-view-menu > li:last');\n          }\n          el.addClass('active');\n        }\n      }\n    }\n\n    update() {\n      if (this.groupLength !== this._groupLength) {\n        this._groupLength = this.groupLength;\n        this.scope.action.applyGroups(this.groupBy(), this.getParams());\n      }\n      else\n        // apply changes to window action\n        this.scope.action.setSearchParams(this.getParams());\n    }\n\n    groupBy() {\n      return this.facetGrouping.values.map(obj => obj._ref.name);\n    }\n\n    show() {\n      let shouldApply = false;\n      if (!this.$items) {\n        this.$items = [].concat(this.fields);\n        shouldApply = true;\n      }\n      // close expanded items\n      for (let obj of this.$items)\n        if (obj.expanded) {\n          obj.expanded = false;\n          shouldApply = true;\n        }\n      if (shouldApply)\n        this.scope.$apply();\n      this.menu.show();\n      this.first();\n    }\n\n    close() {\n      this.$items = null;\n      this.menu.hide();\n      this.reset();\n      this.input.val('');\n    }\n\n    reset() {\n      for (let i of this.fields)\n        if (i && i.children && i.children.length)\n          i.expanded = false;\n    }\n  }\n\n  class SearchViewComponent {\n    constructor() {\n      this.retrict = 'E';\n      this.templateUrl = 'view.search.jinja2';\n      this.replace = true;\n      this.scope = false;\n    }\n  }\n\n  class SearchViewArea {\n    constructor() {\n      this.restrict = 'A';\n      this.scope = false;\n    }\n\n    link(scope, el, attrs) {\n      let view = scope.action.views.search;\n      scope.action.searchView = new SearchView(scope, el, view);\n      if (scope.action.context.default_search) {\n        scope.action.searchView.load(scope.action.context.default_search);\n      }\n    }\n  }\n\n  Katrid.UI.uiKatrid.controller('SearchMenuController', ['$scope', function($scope) {\n\n  }]);\n\n  Katrid.UI.uiKatrid.directive('searchView', SearchViewComponent);\n  Katrid.UI.uiKatrid.directive('searchViewArea', SearchViewArea);\n\n  Katrid.UI.Views.SearchView = SearchView;\n  Katrid.UI.Views.SearchViewComponent = SearchViewComponent;\n\n})();\n","(function () {\n\n  let uiKatrid = Katrid.UI.uiKatrid;\n\n  let formCount = 0;\n\n  uiKatrid.directive('formField2', ['$compile', function ($compile) {\n    return {\n      restrict: 'A',\n      priority: 99,\n      replace: true,\n      // priority: -1,\n      compile(el, attrs) {\n        return function(scope, element, attrs, ctrl) {\n          let field = scope.view.fields[attrs.name];\n          if (_.isUndefined(field))\n            throw Error('Invalid field name \"' + attrs.name + '\"');\n          let templ = field.template.form;\n          field.assign(element);\n          if (!field.visible) {\n            el.remove();\n            return;\n          }\n          let fieldAttributes = field.getAttributes(attrs);\n          let sectionAttrs = {};\n\n          // conditional readonly\n          if (fieldAttributes['ng-readonly'])\n            sectionAttrs['ng-readonly'] = fieldAttributes['ng-readonly'].toString();\n\n          // conditional display\n          if (attrs.ngShow)\n            sectionAttrs['ng-show'] = attrs.ngShow;\n\n          // field help text\n          if (field.helpText) {\n            sectionAttrs['title'] = field.helpText;\n          }\n\n          let content = element.html();\n          templ = Katrid.app.getTemplate(templ, {\n            name: attrs.name, field, attrs: fieldAttributes, content, fieldAttributes: attrs, sectionAttrs,\n          });\n          templ = $compile(templ)(scope);\n          element.replaceWith(templ);\n\n          // Add input field for tracking on FormController\n          let fcontrol = templ.find('.form-field');\n          if (fcontrol.length) {\n            fcontrol = fcontrol[fcontrol.length - 1];\n            const form = templ.controller('form');\n            ctrl = angular.element(fcontrol).data().$ngModelController;\n            if (ctrl)\n              form.$addControl(ctrl);\n          }\n        }\n      },\n    };\n  }]);\n\n  uiKatrid.directive('inputField', () => ({\n    restrict: 'A',\n    scope: false,\n    link(scope, element, attrs) {\n      $(element).on('click', function() {\n        // input field select all text on click\n        $(this).select();\n      });\n    }\n  }));\n\n\n  uiKatrid.directive('view', () =>\n    ({\n      restrict: 'E',\n      template(element, attrs) {\n        formCount++;\n        return '';\n      },\n      link(scope, element, attrs) {\n        if (scope.model) {\n          element.attr('class', `view-form-${scope.model.name.replace(new RegExp('\\.', 'g'), '-')}`);\n          element.attr('id', `katrid-form-${formCount.toString()}`);\n          element.attr('model', scope.model);\n          return element.attr('name', `dataForm${formCount.toString()}`);\n        }\n      }\n    })\n  );\n\n  // uiKatrid.directive('list', ($compile, $http) =>\n  //   ({\n  //     restrict: 'E',\n  //     priority: 700,\n  //     link(scope, element, attrs) {\n  // console.log('render list');\n  //       let html = Katrid.UI.Utils.Templates.renderList(scope, element, attrs);\n  //       html = $compile(html)(scope);\n  //       return element.replaceWith(html);\n  //     }\n  //   })\n  // );\n\n  uiKatrid.directive('ngSum', () =>\n    ({\n      restrict: 'A',\n      priority: 9999,\n      require: 'ngModel',\n      link(scope, element, attrs, controller) {\n        const nm = attrs.ngSum.split('.');\n        const field = nm[0];\n        const subField = nm[1];\n        return scope.$watch(`record.$${field}`, function (newValue, oldValue) {\n          if (newValue && scope.record) {\n            let v = 0;\n            scope.record[field].map(obj => v += parseFloat(obj[subField]));\n            if (v.toString() !== controller.$modelValue) {\n              controller.$setViewValue(v);\n              controller.$render();\n            }\n          }\n        });\n      }\n    })\n  );\n\n\n  uiKatrid.directive('ngEnter', () =>\n    (scope, element, attrs) =>\n      element.bind(\"keydown keypress\", (event) => {\n        if (event.which === 13) {\n          scope.$apply(() => scope.$eval(attrs.ngEnter, {$event: event}));\n          event.preventDefault();\n        }\n      })\n  );\n\n  uiKatrid.directive('ngEsc', () =>\n    (scope, element, attrs) =>\n      element.bind(\"keydown keypress\", (event) => {\n        if (event.which === 27) {\n          scope.$apply(() => scope.$eval(attrs.ngEsc, {$event: event}));\n          event.preventDefault();\n        }\n      })\n  );\n\n\n\n  if ($.fn.modal)\n    $.fn.modal.Constructor.prototype._enforceFocus = function() {};\n\n  uiKatrid.directive('ajaxChoices', ['$location', $location =>\n    ({\n      restrict: 'A',\n      require: '?ngModel',\n      link(scope, element, attrs, controller) {\n        const {multiple} = attrs;\n        const serviceName = attrs.ajaxChoices;\n        let field = attrs.field;\n        let _timeout = null;\n        let domain;\n\n        const cfg = {\n          allowClear: true,\n          query(query) {\n\n            // make params\n            let data = {\n              args: [query.term],\n              kwargs: {\n                count: 1,\n                page: query.page,\n                name_fields: attrs.nameFields && attrs.nameFields.split(\",\") || null\n              }\n            };\n\n            if (domain)\n              data.domain = domain;\n\n            const f = () => {\n              let svc = new Katrid.Services.Model(serviceName);\n              if (field) svc = svc.getFieldChoices(field, query.term, data.kwargs);\n              else svc = new Katrid.Services.Model(attrs.modelChoices).searchName(data);\n              svc.then(res => {\n                let data = res.items;\n                const r = data.map(item => ({\n                  id: item[0],\n                  text: item[1]\n                }));\n                const more = query.page * Katrid.settings.services.choicesPageLimit < res.count;\n                return query.callback({\n                  results: r,\n                  more: more\n                })\n              });\n            };\n            if (_timeout) clearTimeout(_timeout);\n            _timeout = setTimeout(f, 400)\n\n          },\n          escapeMarkup(m) {\n            return m;\n          },\n          initSelection(element, callback) {\n            const v = controller.$modelValue;\n            if (v) {\n              if (multiple) {\n                const values = [];\n                for (let i of Array.from(v)) {\n                  values.push({id: i[0], text: i[1]});\n                }\n                return callback(values);\n              } else {\n                return callback({id: v[0], text: v[1]});\n              }\n            }\n          }\n        };\n        if (multiple)\n          cfg['multiple'] = true;\n\n        const el = element.select2(cfg);\n        let sel = el;\n        element.on('$destroy', function () {\n          $('.select2-hidden-accessible').remove();\n          $('.select2-drop').remove();\n          return $('.select2-drop-mask').remove();\n        });\n        el.on('change', function (e) {\n          const v = el.select2('data');\n          controller.$setDirty();\n          if (v)\n            controller.$viewValue = v;\n\n          return scope.$apply();\n        });\n\n        controller.$render = () => {\n          if (controller.$viewValue)\n            return element.select2('val', controller.$viewValue);\n        };\n      }\n    })]\n  );\n\n  uiKatrid.directive('inputMask', () =>\n    ({\n      restrict: 'A',\n      link(scope, el, attrs) {\n        el.inputmask();\n      }\n    })\n  );\n\n\n  class Decimal {\n    constructor($filter) {\n      this.restrict = 'A';\n      this.require = 'ngModel';\n      this.$filter = $filter;\n    }\n\n    link(scope, element, attrs, controller) {\n      let decimal = attrs.inputDecimal;\n      let opts = {\n        alias: 'numeric',\n        groupSeparator: '.',\n        unmaskAsNumber: true,\n        radixPoint: ',',\n        autoGroup: true,\n        digitsOptional: false,\n        placeholder: '0',\n      };\n      if (decimal)\n        opts.digits = parseInt(decimal);\n      element.inputmask(opts);\n\n      controller.$parsers.push(value => {\n        let v = element.inputmask('unmaskedvalue');\n        return v;\n      });\n\n      controller.$formatters.push((v) => {\n        if (_.isNumber(v))\n          v = v.toFixed(opts.digits).replace('.', ',');\n        else if (_.isString(v))\n          v = v.replace('.', ',');\n        return v;\n      });\n    }\n\n  }\n\n  uiKatrid.directive('inputDecimal', ['$filter', Decimal]);\n\n\n\n  uiKatrid.filter('moment', () =>\n    function (input, format) {\n      if (format) {\n        return moment().format(format);\n      }\n      return moment(input).fromNow();\n    }\n  );\n\n\n  uiKatrid.directive('fileReader', () =>\n    ({\n      restrict: 'A',\n      require: 'ngModel',\n      scope: {},\n      link(scope, element, attrs, controller) {\n\n        if (attrs.accept === 'image/*') {\n          element.tag === 'INPUT';\n        }\n\n        return element.bind('change', function () {\n          const reader = new FileReader();\n          reader.onload = event => controller.$setViewValue(event.target.result);\n          return reader.readAsDataURL(event.target.files[0]);\n        });\n      }\n    })\n  );\n\n\n  uiKatrid.directive('dateInput', ['$filter', ($filter) => ({\n    restrict: 'A',\n    require: '?ngModel',\n    link(scope, element, attrs, controller) {\n\n      let setNow = () => {\n        let value;\n        if (attrs.type === 'date')\n           value = (new Date()).toISOString().split('T')[0];\n        else\n          value = moment(new Date()).format('YYYY-MM-DD HH:mm').replace(' ', 'T');  // remove timezone info\n        $(element).val(value);\n        controller.$setViewValue(value);\n        _focus = false;\n      };\n\n      let _focus = true;\n\n      element\n      .focus(function() {\n        if (($(this).val() === ''))\n          _focus = true;\n      })\n      .keypress(function(evt) {\n        if (evt.key.toLowerCase() === 'h') {\n          setNow();\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n      })\n      .keydown(function(evt) {\n        if (/\\d/.test(evt.key)) {\n          if (($(this).val() === '') && (_focus))\n            setNow();\n        }\n      });\n\n      controller.$formatters.push(function(value) {\n        if (value) {\n          return new Date(value);\n        }\n      });\n\n      controller.$parsers.push(function (value) {\n        if (_.isDate(value)) {\n          let v = moment.utc(value).format('YYYY-MM-DD');\n          if (controller.$modelValue)\n            v += 'T' + controller.$modelValue.split('T', 1)[1];\n          let r = moment.utc(v).format('YYYY-MM-DDTHH:mm:ss');\n          console.log('ret', value, v, r);\n          return r;\n        }\n      });\n\n    }\n  })]);\n\n  uiKatrid.directive('timeInput', () => ({\n    restrict: 'A',\n    require: '?ngModel',\n    link(scope, el, attrs, controller) {\n      el.inputmask({ regex: '([0-1]?[0-9]|2[0-4]):([0-5][0-9])', insertMode: false });\n      // select all chars when focus\n      el.on('focus', function() {\n        setTimeout(() => $(this).select());\n      });\n\n      controller.$parsers.push(function (value) {\n        let v = controller.$modelValue.split('T', 1)[0] + 'T' + value;\n        console.log('time parser', v, value, controller.$viewValue);\n        let r = moment.utc(v).format('YYYY-MM-DDTHH:mm:ss');\n        if (r === 'Invalid date')\n          r = controller.$modelValue;\n        return r;\n      });\n\n      controller.$render = function() {\n        let v = controller.$modelValue;\n        console.log('render', v);\n        if (v)\n          return el.val(moment.utc(v).format('HH:mm'));\n      }\n\n    }\n  }));\n\n\n  uiKatrid.directive('cardDraggable', () => {\n    return {\n      restrict: 'A',\n      link(scope, element, attrs, controller) {\n        let cfg = {\n          connectWith: attrs.cardDraggable,\n          items: '> .sortable-item'\n        };\n        // Draggable write expression\n        if (!_.isUndefined(attrs.cardItem))\n          cfg['receive'] = (event, ui) => {\n            let parent = angular.element(ui.item.parent()).scope();\n            let scope = angular.element(ui.item).scope();\n            console.log(scope);\n            console.log(parent);\n            let data = {};\n            data['id'] = scope.record.id;\n            $.extend(data, parent.group._domain);\n            parent.model.write([data])\n            .then(res => {\n              console.log('write ok', res);\n            });\n          };\n        // Group reorder\n        if (!_.isUndefined(attrs.cardGroup))\n          cfg['update'] = (event, ui) => {\n            let ids = [];\n            $.each(ui.item.parent().find('.card-group'), (idx, el) => {\n              ids.push($(el).data('id'));\n            });\n            let groupName = element.find('.card-group').first().data('group-name');\n            let modelName = scope.$parent.$parent.view.fields[groupName].model;\n            Katrid.Services.data.reorder(modelName, ids)\n            .done(res => {\n              console.log(res);\n            });\n          };\n        element.sortable(cfg).disableSelection();\n      }\n    };\n  });\n\n  uiKatrid.directive('uiTooltip', () => ({\n    restrict: 'A',\n    link: (scope, el, attrs) => {\n      $(el).tooltip({\n        container: 'body',\n        delay: {\n          show: 200,\n          hide: 500\n        }\n      });\n    }\n  }));\n\n  uiKatrid.setFocus = (el) => {\n    let e = $(el);\n    // check if element object has select2 data\n    if (e.data('select2')) e.select2('focus');\n    else el.focus();\n  };\n\n  uiKatrid.directive('attachmentsButton', () => ({\n    restrict: 'A',\n    scope: false,\n    link: (scope, el) => {\n      let _pendingOperation;\n      scope.$parent.$watch('recordId', (key) => {\n        let attachment = new Katrid.Services.Model('ir.attachment', scope);\n        // scope.$parent.attachments = [];\n        clearTimeout(_pendingOperation);``\n        _pendingOperation = setTimeout(() => {\n          attachment.search({ params: { model: scope.action.model.name, object_id: key }, count: false })\n          .then(res => {\n            let r = null;\n            if (res && res.data)\n              r = res.data;\n            scope.$apply(() => scope.attachments = r );\n          });\n        }, 1000);\n\n      });\n    }\n  }));\n\n  uiKatrid.directive('action', ['$compile', ($compile) => ({\n    restrict: 'E',\n    priority: 99,\n    link: (scope, el, attrs) => {\n      console.log('define action', attrs.ngClick);\n      let div = el.closest('div.data-form');\n      let actions = div.find('.dropdown-menu-actions');\n      let name = attrs.name;\n      let label = el.html();\n      let html = `<li><a href=\"javascript:void(0)\">${label}</a></li>`;\n      let newItem = $(html);\n      newItem.click(() => {\n        if (attrs.object) scope.model.rpc(attrs.object, [scope.$parent.record.id]);\n        //scope.$eval(attrs.ngClick);\n      });\n      actions.append(newItem);\n      el.remove();\n    }\n  })]);\n\n  class CardView {\n    constructor() {\n      this.restrict = 'E';\n      this.scope = false;\n    }\n\n    controller($scope, element, attrs) {\n      console.log('controller started');\n      $scope.dataSource.autoLoadGrouping = true;\n\n      $scope.cardShowAddGroupDlg = (event) => {\n        $scope.cardAddGroupDlg = true;\n        setTimeout(() => $(event.target).closest('.card-add-group').find('input').focus(), 10);\n      };\n\n      $scope.cardAddGroup = (event, name) => {\n        let gname = $(event.target).closest('.card-add-group').data('group-name');\n        let field = $scope.action.view.fields[gname];\n        let svc = new Katrid.Services.Model(field.model);\n        console.log('the name is', name);\n        svc.createName(name)\n        .done((res) => {\n          console.log(res);\n        });\n      };\n\n      $scope.cardAddItem = (event, name) => {\n        if (name) {\n          let ctx = {};\n          let g = $(event.target).closest('.card-group');\n          ctx['default_' + g.data('group-name')] = g.data('sequence-id');\n          scope.model.createName(name, ctx)\n          .done((res) => {\n            if (res.ok) {\n              let id = res.result[0];\n              scope.model.getById(id)\n              .done((res) => {\n                if (res.ok) {\n                  let s = angular.element(event.target).scope();\n                  let g = s.group;\n                  s.$apply(() => {\n                    g.records.push(res.result.data[0]);\n                  });\n                }\n              })\n            }\n          });\n        }\n        $scope.kanbanHideAddGroupItemDlg(event);\n      };\n\n    }\n  }\n\n})();\n","(function () {\n\n  let WIDGET_COUNT = 0;\n\n  let DEFAULT_COLS = {\n    'BooleanField': 3,\n    'DecimalField': 3,\n    'FloatField': 3,\n    'DateField': 3,\n    'DateTimeField': 3,\n    'IntegerField': 3,\n    'SmallIntegerField': 3,\n    'TimeField': 3,\n    'CharField': 3,\n    'OneToManyField': 12\n  };\n\n  class Field {\n    static get tag() {\n      return 'input';\n    }\n\n    constructor(scope, attrs, field, element) {\n      this.attrs = attrs;\n      this.scope = scope;\n      this.templAttrs = {};\n      this.wAttrs = {};\n      this.field = field;\n      this.element = element;\n      this.content = element.html();\n      // this.inline = scope.inline;\n      this.spanPrefix = '';\n\n      // Check if field depends from another\n      if ((field.depends != null) && field.depends.length)\n        scope.dataSource.addFieldWatcher(field);\n\n      if (attrs.ngShow)\n        this.templAttrs['ng-show'] = attrs.ngShow;\n\n      if (attrs.ngReadonly || field.readonly)\n        this.templAttrs['ng-readonly'] = attrs.ngReadonly || field.readonly;\n\n      if (field.attrs)\n        for (let k of field.attrs) {\n          let v = field.attrs[k];\n          if (k.startsWith('container') || ((k === 'ng-show') && !attrs.ngShow)) {\n            this.templAttrs[k] = v;\n          }\n        }\n\n      if (attrs.ngFieldChange) {\n        this.wAttrs['ng-change'] = attrs.ngFieldChange;\n      }\n\n      let cols = attrs.cols;\n\n      if (!cols) {\n        if (field.type === 'CharField')\n          if (field.max_length && (field.max_length < 30)) cols = 3;\n        if (!cols)\n          cols = DEFAULT_COLS[field.type] || 6;\n      }\n\n      this.col = cols;\n      this.classes = ['form-field'];\n\n      // track field changes\n      if (field.onchange)\n        scope.$watch();\n    }\n\n    fieldChangeEvent() {\n\n    }\n\n    get caption() {\n      return this.element.attr('label') || this.field.caption;\n    }\n\n    renderTo(templTag, inplaceEditor=false, cls='') {\n      let templAttrs = [];\n      for (let [k, v] of Object.entries(this.templAttrs))\n        templAttrs.push(k + '=' + '\"' + v + '\"');\n\n      if (inplaceEditor)\n        return `<${templTag} class=\"${cls}\" ${templAttrs.join('')}>${this.template(this.scope, this.element, this.attrs, this.field)}</${templTag}>`;\n\n      return `<${templTag} class=\"${this.field.type} section-field-${this.field.name} form-group\" ${templAttrs.join('')}>` +\n            this.template(this.scope, this.element, this.attrs, this.field) +\n            `</${templTag}>`\n    }\n\n    get ngModel() {\n      return `record.${this.field.name}`;\n    }\n\n    get id() {\n      if (!this._id)\n        this._id = ++WIDGET_COUNT;\n      return `katrid-input-${this._id.toString()}`;\n    }\n\n    widgetAttrs() {\n      let v;\n      const r = this.wAttrs;\n      if (this.field.required) {\n        r['required'] = null;\n      }\n\n      r['ng-model'] = this.ngModel;\n      if (this.field.attrs) {\n        for (let attr of Object.keys(this.field.attrs)) {\n          v = this.field.attrs[attr];\n          if (!attr.startsWith('container-') && (attr !== 'ng-show') && (attr !== 'ng-readonly')) {\n            r[attr] = v;\n          }\n        }\n      }\n\n      if (!_.isUndefined(this.attrs.$attr))\n      for (let attr of Object.keys(this.attrs.$attr)) {\n        let attrName = this.attrs.$attr[attr];\n        if (!attrName.startsWith('container-') && (attr !== 'ngShow') && (attr !== 'ngReadonly')) {\n          v = this.attrs[attr];\n          if (attrName.startsWith('field-')) {\n            attrName = attrName.substr(6, attrName.length - 6);\n          } else if (attrName === 'class')\n            this.classes.push(v);\n          r[attrName] = v;\n        }\n      }\n\n      if ((this.attrs.readonly != null) || this.field.readonly)\n        r['readonly'] = '';\n\n      if (this.classes)\n        r['class'] = this.classes.join(' ');\n\n      return r;\n    }\n\n    _getWidgetAttrs(scope, el, attrs, field) {\n      let html = '';\n      const attributes = this.widgetAttrs(scope, el, attrs, field);\n      for (let att in attributes) {\n        const v = attributes[att];\n        html += ` ${att}`;\n        if (v || (v === false)) {\n          if (_.isString(v) && (v.indexOf('\"') > -1)) {\n            html += `='${v}'`;\n          } else {\n            html += `=\"${v}\"`;\n          }\n        }\n      }\n      if (this.placeholder)\n        html += ` placeholder=\"${this.placeholder}\" `;\n\n      return html;\n    }\n\n    innerHtml() {\n      return '';\n    }\n\n    labelTemplate() {\n      const placeholder = '';\n      const label = this.caption;\n      if (this.attrs.nolabel === 'placeholder') {\n        this.placeholder = label;\n        return '';\n      } else if (!_.isUndefined(this.attrs.nolabel))\n        return '';\n      return `<label for=\"${this.id}\" class=\"form-label\">${label}</label>`;\n    }\n\n    get emptyText() {\n      if (this.inplaceEditor)\n        return '';\n      return '--';\n    }\n\n    get readOnlyClass() {\n      if (this.inplaceEditor || this.spanPrefix === '::')\n        return 'grid-field-readonly';\n      return 'form-field-readonly';\n    }\n\n    spanTemplate(scope, el, attrs, field) {\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}record.${this.field.name}.toString() || '${this.emptyText}' }}</span>`;\n    }\n\n    widgetTemplate() {\n      let html = `<${this.constructor.tag} id=\"${this.id}\" name=\"${this.field.name}\" ${this._getWidgetAttrs()}>`;\n      const inner = this.innerHtml();\n      if (inner)\n        html += inner + `</${this.constructor.tag}>`;\n      return html;\n    }\n\n    template() {\n      let label = '';\n      let span = this.spanTemplate();\n      if (!this.inplaceEditor) {\n        label = this.labelTemplate();\n        // span =\n      }\n      let widget = this.widgetTemplate();\n      if (this.inline === 'inline')\n        widget = `<div ng-if=\"dataSource.changing && dataSource.recordIndex === $index\">${widget}</div>`;\n      return `<div>${label}${span}${widget}</div>`;\n    }\n\n    link(scope, el, attrs, $compile, field) {\n      // Add watcher for field dependencies\n      if (field.depends) {\n        return (() => {\n          const result = [];\n          for (let dep of Array.from(field.depends)) {\n            if (!Array.from(scope.dataSource.fieldChangeWatchers).includes(dep)) {\n              scope.dataSource.fieldChangeWatchers.push(dep);\n              result.push(scope.$watch(`record.${dep}`, function(newValue, oldValue) {\n                // Ignore if dataSource is not in changing state\n                if ((newValue !== oldValue) && scope.dataSource.changing) {\n                  return scope.model.onFieldChange(dep, scope.record)\n                  .done(scope.dataSource.onFieldChange);\n                }\n              }));\n            }\n          }\n          return result;\n        })();\n      }\n    }\n\n    th() {\n      let cls = `${this.field.type} list-column`;\n      let lbl = this.element.attr('label') || `{{view.fields.${this.field.name}.caption}}`;\n      return `<th class=\"${cls}\" name=\"${this.field.name}\"><span>${lbl}</span></th>`;\n    }\n\n    _gridEditor(cls) {\n      return this.renderTo('section', true, cls);\n    }\n\n    _tdContent() {\n      return this.spanTemplate();\n    }\n\n    _td(cls) {\n      let content;\n      if (this.inplaceEditor)\n        content = this._gridEditor(cls);\n      else {\n        this.spanPrefix = '::';\n        content = this.spanTemplate();\n      }\n      return `<td class=\"${cls}\">${ content }</td>`;\n    }\n\n    td() {\n      if (this.content)\n        return this.content;\n      return this._td(`${this.field.type} field-${this.field.name}`);\n\n      let colHtml = this.element.html();\n      let s;\n      let fieldInfo = this.field;\n      let name = fieldInfo.name;\n      let editor = '';\n      if ((gridEditor === 'tabular') && html) editor = html;\n      if (colHtml) {\n        s = `<td><a data-id=\"{{::record.${name}[0]}}\">${colHtml}</a>${editor}</td>`;\n      } else if (fieldInfo.type === 'ForeignKey') {\n        s = `<td><a data-id=\"{{::row.${name}[0]}}\">{{row.${name}[1]}}</a>${editor}</td>`;\n      } else if  (fieldInfo._listChoices) {\n        s = `<td class=\"${cls}\">{{::view.fields.${name}._listChoices[row.${name}]}}${editor}</td>`;\n      } else if (fieldInfo.type === 'BooleanField') {\n        s = `<td class=\"bool-text ${cls}\">{{::row.${name} ? '${Katrid.i18n.gettext('yes')}' : '${Katrid.i18n.gettext('no')}'}}${editor}</td>`;\n      } else if (fieldInfo.type === 'IntegerField') {\n        s = `<td class=\"${cls}\">{{::row.${name}|number}}${editor}</td>`;\n      } else if (fieldInfo.type === 'DecimalField') {\n        let decimalPlaces = this.element.attr('decimal-places') || 2;\n        s = `<td class=\"${cls}\">{{::row.${name}|number:${ decimalPlaces } }}${editor}</td>`;\n      } else if (fieldInfo.type === 'DateField') {\n        s = `<td class=\"${cls}\">{{::row.${name}|date:'${Katrid.i18n.gettext('yyyy-mm-dd').replace(/[m]/g, 'M')}'}}${editor}</td>`;\n      } else if (fieldInfo.type === 'DateTimeField') {\n        s = `<td class=\"${cls}\">{{::row.${name}|date:'${Katrid.i18n.gettext('yyyy-mm-dd').replace(/[m]/g, 'M')}'}}${editor}</td>`;\n      } else {\n        s = `<td>{{ ::row.${name} }}</td>`;\n      }\n      return s;\n    }\n  }\n\n\n  class InputWidget extends Field {\n    static get tag() {\n      return 'input input-field';\n    }\n\n    constructor() {\n      super(...arguments);\n      this.classes.push('form-control');\n    }\n\n    get type() {\n      return 'text';\n    }\n\n    widgetTemplate1() {\n      let html;\n      if (this.constructor.tag.startsWith('input')) {\n        html = `<${this.tag} id=\"${attrs._id}\" type=\"${type}\" name=\"${attrs.name}\" ${this._getWidgetAttrs(scope, el, attrs, field)}>`;\n      } else {\n        html = `<${this.tag} id=\"${attrs._id}\" name=\"${attrs.name}\" ${this._getWidgetAttrs(scope, el, attrs, field)}>`;\n      }\n      const inner = this.innerHtml(scope, el, attrs, field);\n      if (inner) {\n        html += inner + `</${this.tag}>`;\n      }\n      return html;\n    }\n\n    widgetTemplate() {\n      let type = this.type;\n      const prependIcon = this.attrs.icon;\n      let html = `<${this.constructor.tag} id=\"${this.id}\" type=\"${this.type}\" name=\"${this.field.name}\" ${this._getWidgetAttrs()}>`;\n      if (prependIcon)\n        return `<label class=\"prepend-icon\"><i class=\"icon ${prependIcon}\"></i>${html}</label>`;\n\n      const inner = this.innerHtml();\n      if (inner)\n        html += inner + `</${this.constructor.tag}>`;\n\n      return html;\n    }\n  }\n\n\n  class StringField extends InputWidget {\n    widgetAttrs() {\n      const attributes = super.widgetAttrs();\n      if (this.field.maxLength)\n        attributes['maxlength'] = this.field.maxLength.toString();\n\n      return attributes;\n    }\n  }\n\n\n  class NumericField extends InputWidget {\n    static get tag() {\n      return 'input decimal';\n    }\n\n    get type() {\n      if (Katrid.settings.ui.isMobile)\n        return 'number';\n      return 'text';\n    }\n\n    spanTemplate() {\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}(record.${this.field.name}|number) || '${this.emptyText}' }}</span>`;\n    }\n  }\n\n\n  class IntegerField extends NumericField {\n    static get tag() {\n      return 'input decimal decimal-places=\"0\"';\n    }\n  }\n\n\n  class TimeField extends InputWidget {\n    get type() {\n      return 'time';\n    }\n  }\n\n\n  class SelectionField extends InputWidget {\n    static get tag() {\n      return 'select';\n    }\n\n    spanTemplate() {\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}view.fields.${this.field.name}.displayChoices[record.${this.field.name}] || '${this.emptyText}' }}</span>`;\n    }\n\n    innerHtml() {\n      return `<option ng-repeat=\"choice in view.fields.${this.field.name}.choices\" value=\"{{choice[0]}}\">{{choice[1]}}</option>`;\n    }\n  }\n\n\n  class ForeignKey extends Field {\n    static get tag() {\n      return 'input foreignkey';\n    }\n\n    spanTemplate() {\n      let allowOpen = true;\n      if (((this.attrs.allowOpen != null) && (this.attrs.allowOpen === 'false')) || ((this.attrs.allowOpen == null) && this.field.attrs && (this.field.attrs['allow-open'] === false)))\n        allowOpen = false;\n\n      if (!allowOpen || this.inList)\n        return `<span class=\"${this.readOnlyClass}\"><a href=\"javascript:void(0)\">{{ ${this.spanPrefix}record.${this.field.name}[1] || '${this.emptyText}' }}</a></span>`;\n\n      return `<span class=\"${this.readOnlyClass}\"><a href=\"#/action/${ this.field.model }/view/?id={{ ${this.spanPrefix}record.${this.field.name}[0] }}\" ng-click=\"action.openObject('${ this.field.model }', record.${this.field.name}[0], $event, '${ this.field.caption }')\">{{ ${this.spanPrefix}record.${this.field.name}[1] }}</a><span ng-if=\"!record.${this.field.name}[1]\">--</span></span>`;\n    }\n\n    get type() {\n      return 'hidden';\n    }\n\n    _tdContent() {\n      return `{{record.${this.field.name}[1]}}`;\n    }\n  }\n\n\n  class TextField extends StringField {\n    static get tag() {\n      return 'textarea';\n    }\n  }\n\n  class XmlField extends TextField {\n    constructor(...args) {\n      super(...args);\n      console.log('cols', this.cols);\n    }\n  }\n\n\n  class FloatField extends NumericField {\n    static get tag() {\n      if (Katrid.settings.ui.isMobile)\n        return 'input';\n      return 'input decimal';\n    }\n\n    get type() {\n      if (Katrid.settings.ui.isMobile)\n        return 'number';\n      return 'text';\n    }\n\n    spanTemplate() {\n      let decimalPlaces = this.attrs.decimalPlaces || 2;\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}(record.${this.field.name}|number:${ decimalPlaces }) || '${this.emptyText}' }}</span>`;\n    }\n\n    _tdContent() {\n      let filter;\n      let decimalPlaces = this.element.attr('decimal-places');\n      if (decimalPlaces)\n        filter `number:${ decimalPlaces }`;\n      else\n        filter = `numberFormat:${this.element.attr('max-digits') || 6}`;\n      return `{{::record.${this.field.name}|${filter} }}`;\n    }\n  }\n\n\n  class DecimalField extends FloatField {\n    spanTemplate() {\n      let maxDigits = this.attrs.maxDigits;\n      let fmt = 'number';\n      if (maxDigits)\n        fmt = 'numberFormat';\n      else\n        maxDigits = this.attrs.decimalPlaces || 2;\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}(record.${this.field.name}|${ fmt }:${ maxDigits }) || '${this.emptyText}' }}</span>`;\n    }\n\n    _tdContent(cls) {\n      let maxDigits = this.element.attr('max-digits');\n      if (maxDigits)\n        return `<td class=\"${cls}\">{{::record.${this.field.name}|numberFormat:${ maxDigits } }}${this._gridEditor()}</td>`;\n      else {\n        maxDigits = 2;\n        return `{{::record.${this.field.name}|number:${ maxDigits } }}`;\n      }\n    }\n  }\n\n\n  class DateField extends TextField {\n    static get tag() {\n      return 'input date-input';\n    }\n\n    get type() {\n      return 'date';\n    }\n\n    spanTemplate() {\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}(record.${this.field.name}|date:'${Katrid.i18n.gettext('yyyy-mm-dd').replace(/[m]/g, 'M')}') || '${this.emptyText}' }}</span>`;\n    }\n\n    // widgetTemplate() {\n    //   return `<div class=\"input-group date\" ng-show=\"dataSource.changing\">${ super.widgetTemplate() }<div class=\"input-group-append\"><button class=\"btn btn-default\" type=\"button\"><span class=\"fa fa-calendar\"></span></button></div></div>`;\n    // }\n\n    _tdContent(cls) {\n      return `{{::record.${this.field.name}|date:'${Katrid.i18n.gettext('yyyy-MM-dd')}'}}`;\n    }\n  }\n\n\n  class DateTimeField extends TextField {\n    static get tag() {\n      return 'input date-input';\n    }\n\n    get type() {\n      return 'datetime-local';\n    }\n\n    spanTemplate() {\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}(record.${this.field.name}|date:'${Katrid.i18n.gettext('yyyy-MM-dd hh:mma')}') || '${this.emptyText}' }}</span>`;\n    }\n  }\n\n\n  class OneToManyField extends Field {\n    static get tag() {\n      return 'grid';\n    }\n\n    spanTemplate() {\n      return '';\n    }\n\n    innerHtml() {\n      return this.content;\n      let html = his.element.html();\n      if (html)\n        return html;\n      return '';\n    }\n\n  }\n\n\n  class ManyToManyField extends Field {\n    static get tag() {\n      return 'input foreignkey multiple';\n    }\n\n    spanTemplate() {\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}record.${this.field.name}|m2m }}</span>`;\n    }\n\n    get type() {\n      return 'hidden';\n    }\n  }\n\n\n  class BooleanField extends InputWidget {\n    spanTemplate() {\n      return `<span class=\"${this.readOnlyClass} bool-text\">\n  {{${this.spanPrefix}record.${this.field.name} ? '${Katrid.i18n.gettext('yes')}' : '${Katrid.i18n.gettext('no')}'}}\n  </span>`;\n    }\n\n    get type() {\n      return 'checkbox';\n    }\n\n    _td(cls) {\n      return super._td('bool-text ' + cls);\n    }\n\n    widgetTemplate() {\n      let html = super.widgetTemplate();\n      html = `<label class=\"checkbox\" ng-show=\"dataSource.changing\">${html}`;\n      if (this.field.help_text) {\n        html += this.field.help_text;\n      } else {\n        html += this.field.caption;\n      }\n      html += '<i></i></label>';\n      return html;\n    }\n\n    labelTemplate() {\n      if (this.field.help_text)\n        return super.labelTemplate();\n      return `<label for=\"${ this.id }\" class=\"form-label form-label-checkbox\"><span>${ this.caption }</span>&nbsp;</label>`;\n    }\n  }\n\n\n  class FileField extends InputWidget {\n    static get tag() {\n      return 'input file-reader';\n    }\n\n    get type() {\n      return 'file';\n    }\n  }\n\n\n  class ImageField extends FileField {\n    static get tag() {\n      return 'input file-reader accept=\"image/*\"';\n    }\n\n    spanTemplate() { return ''; }\n\n    widgetTemplate() {\n      let html = super.widgetTemplate();\n      let imgSrc = this.attrs.ngEmptyImage || (this.attrs.emptyImage && (\"'\" + this.attrs.emptyImage + \"'\")) || \"'/static/web/assets/img/no-image.png'\";\n      html = `<div class=\"image-box image-field\">\n  <img ng-src=\"{{ record.${this.field.name} || ${imgSrc} }}\" />\n    <div class=\"text-right image-box-buttons\">\n    <button class=\"btn btn-default\" type=\"button\" title=\"${Katrid.i18n.gettext('Change')}\" onclick=\"$(this).closest('.image-box').find('input').trigger('click')\"><i class=\"fa fa-pencil\"></i></button>\n    <button class=\"btn btn-default\" type=\"button\" title=\"${Katrid.i18n.gettext('Clear')}\" ng-click=\"record[this.field.name] = null\"><i class=\"fa fa-trash\"></i></button>\n    </div>\n      ${html}</div>`;\n      return html;\n    }\n  }\n\n\n  class PasswordField extends InputWidget {\n\n    get type() {\n      return 'password';\n    }\n\n    spanTemplate() {\n      return `<span class=\"form-field-readonly\">*******************</span>`;\n    }\n  }\n\n\n  class SortableField extends Field {\n    constructor(...args) {\n      super(...args);\n      this.col = null;\n    }\n    static get tag() {\n      return 'sortable-field';\n    }\n\n\n    get type() {\n      return 'hidden';\n    }\n\n    _td(cls) {\n      return `<td onclick=\"event.preventDefault();event.stopPropagation();\" class=\"list-column-sortable\">${ this.spanTemplate() }</td>`;\n    }\n\n    th() {\n      return `<th class=\"list-column-sortable\" name=\"${this.field.name}\"></th>`;\n    }\n\n    spanTemplate() {\n      return `<sortable-field id=\"${this.id}\" name=\"${this.field.name}\" ng-model=\"record.${this.field.name}\"/>`;\n    }\n  }\n\n  Object.assign(this.Katrid.UI.Widgets,\n    {\n      Field,\n      InputWidget,\n      StringField,\n      IntegerField,\n      SelectionField,\n      ForeignKey,\n      TextField,\n      DecimalField,\n      FloatField,\n      DateField,\n      DateTimeField,\n      TimeField,\n      BooleanField,\n      OneToManyField,\n      ManyToManyField,\n      FileField,\n      PasswordField,\n      ImageField,\n      SortableField,\n      XmlField,\n      input: InputWidget,\n      string: StringField,\n      integer: IntegerField,\n      selection: SelectionField,\n      text: TextField,\n      decimal: DecimalField,\n      float: FloatField,\n      file: FileField,\n      boolean: BooleanField,\n      password: PasswordField,\n      image: ImageField,\n      sortable: SortableField,\n    }\n  );\n})();\n","(function() {\n\n  let uiKatrid = Katrid.UI.uiKatrid;\n\n  uiKatrid.controller('TabsetController', [\n    '$scope',\n    function ($scope) {\n      const ctrl = this;\n      const tabs = (ctrl.tabs = ($scope.tabs = []));\n\n      ctrl.select = function (selectedTab) {\n        angular.forEach(tabs, function (tab) {\n          if (tab.active && (tab !== selectedTab)) {\n            tab.active = false;\n            tab.onDeselect();\n          }\n        });\n        selectedTab.active = true;\n        selectedTab.onSelect();\n      };\n\n      ctrl.addTab = function (tab) {\n        tabs.push(tab);\n        // we can't run the select function on the first tab\n        // since that would select it twice\n        if (tabs.length === 1) {\n          tab.active = true;\n        } else if (tab.active) {\n          ctrl.select(tab);\n        }\n      };\n\n      ctrl.removeTab = function (tab) {\n        const index = tabs.indexOf(tab);\n        //Select a new tab if the tab to be removed is selected and not destroyed\n        if (tab.active && (tabs.length > 1) && !destroyed) {\n          //If this is the last tab, select the previous tab. else, the next tab.\n          const newActiveIndex = index === (tabs.length - 1) ? index - 1 : index + 1;\n          ctrl.select(tabs[newActiveIndex]);\n        }\n        tabs.splice(index, 1);\n      };\n\n      var destroyed = undefined;\n      $scope.$on('$destroy', function () {\n        destroyed = true;\n      });\n    }\n  ]);\n\n  uiKatrid.directive('tabset', () =>\n    ({\n      restrict: 'EA',\n      transclude: true,\n      replace: true,\n      scope: {\n        type: '@'\n      },\n      controller: 'TabsetController',\n      template: `<div class=\"tabset\"><div class=\\\"clearfix\\\"></div>\\n` +\n      \"  <div class=\\\"nav nav-{{type || 'tabs'}}\\\" ng-class=\\\"{'nav-stacked': vertical, 'nav-justified': justified}\\\" ng-transclude></div>\\n\" +\n      \"  <div class=\\\"tab-content\\\">\\n\" +\n      \"    <div class=\\\"tab-pane\\\" \\n\" +\n      \"         ng-repeat=\\\"tab in tabs\\\" \\n\" +\n      `         ng-class=\"{active: tab.active}\">` +\n      `<div class=\"col-12\"><div class=\"row\" tab-content-transclude=\"tab\"></div></div>` +\n      \"    </div>\\n\" +\n      \"  </div>\\n\" +\n      \"</div>\\n\",\n      link(scope, element, attrs) {\n        scope.vertical = angular.isDefined(attrs.vertical) ? scope.$parent.$eval(attrs.vertical) : false;\n        return scope.justified = angular.isDefined(attrs.justified) ? scope.$parent.$eval(attrs.justified) : false;\n      }\n    })\n  );\n\n\n  uiKatrid.directive('tab', [\n    '$parse',\n    $parse =>\n      ({\n        require: '^tabset',\n        restrict: 'EA',\n        replace: true,\n        template: `<a class=\"nav-item nav-link\" href ng-click=\"select()\" tab-heading-transclude ng-class=\"{active: active, disabled: disabled}\">{{heading}}</a>`,\n        transclude: true,\n        scope: {\n          active: '=?',\n          heading: '@',\n          onSelect: '&select',\n          onDeselect: '&deselect'\n        },\n        controller() {\n          //Empty controller so other directives can require being 'under' a tab\n        },\n        compile(elm, attrs, transclude) {\n          return function (scope, elm, attrs, tabsetCtrl) {\n            scope.$watch('active', function (active) {\n              if (active) {\n                tabsetCtrl.select(scope);\n              }\n            });\n            scope.disabled = false;\n            if (attrs.disabled) {\n              scope.$parent.$watch($parse(attrs.disabled), function (value) {\n                scope.disabled = !!value;\n              });\n            }\n\n            scope.select = function () {\n              if (!scope.disabled) {\n                scope.active = true;\n              }\n            };\n\n            tabsetCtrl.addTab(scope);\n            scope.$on('$destroy', function () {\n              tabsetCtrl.removeTab(scope);\n            });\n            //We need to transclude later, once the content container is ready.\n            //when this link happens, we're inside a tab heading.\n            scope.$transcludeFn = transclude;\n          };\n        }\n\n      })\n\n  ]);\n\n  uiKatrid.directive('tabHeadingTransclude', [() =>\n    ({\n      restrict: 'A',\n      require: '^tab',\n      link(scope, elm, attrs, tabCtrl) {\n        scope.$watch('headingElement', function (heading) {\n          if (heading) {\n            elm.html('');\n            elm.append(heading);\n          }\n        });\n      }\n    })\n\n  ]);\n\n\n  uiKatrid.directive('tabContentTransclude', function () {\n\n    const isTabHeading = node => node.tagName && (node.hasAttribute('tab-heading') || node.hasAttribute('data-tab-heading') || (node.tagName.toLowerCase() === 'tab-heading') || (node.tagName.toLowerCase() === 'data-tab-heading'));\n\n    return {\n      restrict: 'A',\n      require: '^tabset',\n      link(scope, elm, attrs) {\n        const tab = scope.$eval(attrs.tabContentTransclude);\n        //Now our tab is ready to be transcluded: both the tab heading area\n        //and the tab content area are loaded.  Transclude 'em both.\n        tab.$transcludeFn(tab.$parent, function (contents) {\n          angular.forEach(contents, function (node) {\n            if (isTabHeading(node)) {\n              //Let tabHeadingTransclude know.\n              tab.headingElement = node;\n            } else {\n              elm.append(node);\n            }\n          });\n        });\n      }\n\n    };\n  });\n\n}).call(this);\n","(function () {\n  let uiKatrid = Katrid.UI.uiKatrid;\n\n  uiKatrid.directive('datePicker', ['$filter', $filter => ({\n    restrict: 'A',\n    require: '?ngModel',\n    link(scope, el, attrs, controller) {\n      // TODO localize the date format\n      let mask = '99/99/9999';\n      let format = attrs.datePicker || 'L';\n      if (format === 'L LT')\n        mask = '99/99/9999 99:99';\n      el.inputmask({\n        mask,\n        insertMode: false,\n      });\n      let calendar = $(el.parent()).datetimepicker({\n        useCurrent: false,\n        format,\n        icons: {\n          time: 'fa fa-clock',\n        },\n      })\n      .on('dp.change', function (evt) {\n        calendar.datetimepicker('hide');\n      })\n      .on('dp.hide', function (evt) {\n        controller.$setDirty();\n        controller.$setViewValue(el.val());\n      });\n      el.on('focus', () => el.select());\n\n      controller.$render = function () {\n        if (controller.$modelValue) {\n          calendar.datetimepicker('date', moment.utc(controller.$modelValue));\n        } else\n          el.val('');\n      };\n\n      el.on('blur', () => {\n        let v = moment(el.val(), format);\n        if (v.isValid())\n          controller.$modelValue = v.format('YYYY-MM-DD');\n        else\n          controller.$modelValue = null;\n      });\n\n      controller.$parsers.push(value => {\n        let v = moment(el.val(), format);\n        if (v.isValid()) {\n          if (format === 'L')\n            return v.format('YYYY-MM-DD');\n          else if (format === 'L LT')\n            return v.format('YYYY-MM-DD HH:mm');\n        }\n        return null;\n      });\n\n      // el.on('click', () => setTimeout(() => $(el).select()));\n      // controller.$formatters.push(function (value) {\n      //   if (value) {\n      //     const dt = new Date(value);\n      //     // calendar.datepicker('setDate', dt);\n      //     return $filter('date')(value, dateFmt);\n      //   }\n      //   return value;\n      // });\n\n      // controller.$render = function () {\n      //   if (_.isDate(controller.$viewValue)) {\n      //     const v = $filter('date')(controller.$viewValue, dateFmt);\n      //     return el.val(v);\n      //   } else {\n      //     return el.val(controller.$viewValue);\n      //   }\n      // };\n\n    }\n  })]);\n\n  uiKatrid.directive('timePicker', ['$filter', $filter => ({\n    restrict: 'A',\n    require: '?ngModel',\n    link(scope, el, attrs, controller) {\n      // TODO localize the time format\n      let mask = '99:99';\n      el.inputmask({\n        mask,\n        insertMode: false,\n      });\n      el.on('focus', () => el.select());\n\n    }\n  })]);\n\n})();\n","(function () {\n\n  class Comments {\n    constructor(scope) {\n      this.scope = scope;\n      this.model = this.scope.$parent.model;\n\n      this.scope.$parent.$watch('recordId', key => {\n        this.items = null;\n        this.scope.loading = Katrid.i18n.gettext('Loading...');\n        clearTimeout(this._pendingOperation);\n        this._pendingOperation = setTimeout(() => {\n          this._pendingOperation = null;\n          this.masterChanged(key);\n          return this.scope.$apply(() => {\n            return this.scope.loading = null;\n          });\n        }\n        , 1000);\n      });\n\n      this.items = [];\n    }\n\n    async masterChanged(key) {\n      if (key) {\n        const svc = new Katrid.Services.Model('mail.message');\n        if (this.scope.$parent.record)\n        return svc.post('get_messages', { args: [this.scope.$parent.record.messages] })\n        .then(res => {\n          this.items = res;\n          this.scope.$apply();\n        });\n      }\n    }\n\n    async _sendMesage(msg, attachments) {\n      if (attachments)\n        attachments = attachments.map((obj) => obj.id);\n      let msgs = await this.model.post('post_message', { args: [[this.scope.$parent.recordId]], kwargs: { content: msg, content_subtype: 'html', format: true, attachments: attachments } });\n      this.scope.message = '';\n      this.items = msgs.concat(this.items);\n      this.scope.$apply();\n      this.scope.files = null;\n      this.scope.hideEditor();\n    }\n\n    postMessage(msg) {\n      if (this.scope.files.length) {\n        let files = [];\n        for (let f of this.scope.files) files.push(f.file);\n        var me = this;\n        Katrid.Services.Attachments.upload({files: files}, this.scope)\n        .done((res) => {\n          me._sendMesage(msg, res);\n        });\n      } else\n        this._sendMesage(msg);\n    }\n  }\n\n\n  Katrid.UI.uiKatrid.directive('comments', () =>\n    ({\n      restrict: 'E',\n      scope: {},\n      replace: true,\n      template: '<div class=\"content\"><div class=\"comments\"><mail-comments/></div></div>',\n      link(scope, element, attrs) {\n        if (element.closest('.modal-dialog').length)\n          element.remove();\n        else\n          $(element).closest('.form-view[ng-form=form]').children('.content:first').append(element);\n      }\n    })\n  );\n\n  Katrid.UI.uiKatrid.directive('mailComments', () =>\n    ({\n      restrict: 'E',\n      controller: ['$scope', ($scope) => {\n        $scope.comments = new Comments($scope);\n        $scope.files = [];\n\n        $scope.showEditor = () => {\n          $($scope.el).find('#mail-editor').show();\n          $($scope.el).find('#mail-msgEditor').focus();\n        };\n\n        $scope.hideEditor = () => {\n          $($scope.el).find('#mail-editor').hide();\n        };\n\n        $scope.attachFile = (file) => {\n          for (let f of file.files)\n            $scope.files.push({\n              name: f.name,\n              type: f.type,\n              file: f\n            });\n          $scope.$apply();\n        };\n\n        $scope.deleteFile = (idx) => {\n          $scope.files.splice(idx, 1);\n        }\n      }],\n      replace: true,\n      link(scope, element, attrs) {\n        scope.el = element;\n      },\n\n      template() {\n        return `\n  <div class=\"container\">\n          <h3>${Katrid.i18n.gettext('Comments')}</h3>\n          <div class=\"form-group\">\n          <button class=\"btn btn-outline-secondary\" ng-click=\"showEditor();\">${Katrid.i18n.gettext('New message')}</button>\n          <button class=\"btn btn-outline-secondary\">${Katrid.i18n.gettext('Log an internal note')}</button>\n          </div>\n          <div id=\"mail-editor\" style=\"display: none;\">\n            <div class=\"form-group\">\n              <textarea id=\"mail-msgEditor\" class=\"form-control\" ng-model=\"message\"></textarea>\n            </div>\n            <div class=\"form-group\">\n              <button class=\"btn btn-default\" type=\"button\" onclick=\"$(this).next().click()\"><i class=\"fa fa-paperclip\"></i></button>\n              <input class=\"input-file-hidden\" type=\"file\" multiple onchange=\"angular.element(this).scope().attachFile(this)\">\n            </div>\n            <div class=\"form-group\" ng-show=\"files.length\">\n              <ul class=\"list-inline attachments-area\">\n                <li ng-repeat=\"file in files\" ng-click=\"deleteFile($index)\" title=\"${ Katrid.i18n.gettext('Delete this attachment') }\">{{ file.name }}</li>\n              </ul>\n            </div>\n            <div class=\"from-group\">\n              <button class=\"btn btn-primary\" ng-click=\"comments.postMessage(message)\">${Katrid.i18n.gettext('Send')}</button>\n            </div>\n          </div>\n  \n          <hr>\n  \n          <div ng-show=\"loading\">{{ loading }}</div>\n          <div class=\"comment media col-sm-12\" ng-repeat=\"comment in comments.items\">\n            <div class=\"media-left\">\n              <img src=\"/static/web/assets/img/avatar.png\" class=\"avatar rounded\">\n            </div>\n            <div class=\"media-body\">\n              <strong>{{ ::comment.author_name }}</strong> - <span class=\"timestamp text-muted\" title=\"$\\{ ::comment.date_time|moment:'LLLL'}\"> {{::comment.date_time|moment}}</span>\n              <div class=\"clearfix\"></div>\n              <div class=\"form-group\">\n                {{::comment.content}}\n              </div>\n              <div class=\"form-group\" ng-if=\"comment.attachments\">\n                <ul class=\"list-inline\">\n                  <li ng-repeat=\"file in comment.attachments\"><a href=\"/web/content/$\\{ ::file.id }/?download\">{{ ::file.name }}</a></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n    </div>`;\n      }\n    })\n  );\n\n\n  class MailFollowers {}\n\n\n  class MailComments extends Katrid.UI.Widgets.Widget {\n    static initClass() {\n      this.prototype.tag = 'mail-comments';\n    }\n\n    spanTemplate(scope, el, attrs, field) {\n      return '';\n    }\n  }\n  MailComments.initClass();\n\n\n  Katrid.UI.Widgets.MailComments = MailComments;\n\n})();\n","(function () {\n  class BaseTemplate {\n\n    getSettingsDropdown(viewType) {\n      if (viewType === 'form') {\n        return `<ul class=\"dropdown-menu pull-right\">\n    <li>\n      <a href=\"javascript:void(0);\" ng-click=\"action.showDefaultValueDialog()\">${ Katrid.i18n.gettext('Set Default') }</a>\n    </li>\n  </ul>`;\n      }\n    }\n\n\n    getSetDefaultValueDialog() {\n      return `\\\n  <div class=\"modal fade\" id=\"set-default-value-dialog\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"${ Katrid.i18n.gettext('Close') }\"><span aria-hidden=\"true\">&times;</span></button>\n          <h4 class=\"modal-title\">${ Katrid.i18n.gettext('Set Default') }</h4>\n        </div>\n        <div class=\"modal-body\">\n          <select class=\"form-control\" id=\"id-set-default-value\">\n            <option ng-repeat=\"field in view.fields\">{{ field.caption }} = {{ record[field.name] }}</option>\n          </select>\n          <div class=\"radio\">\n            <label><input type=\"radio\" name=\"public\">${ Katrid.i18n.gettext('Only me') }</label>\n          </div>\n          <div class=\"radio\">\n            <label><input type=\"radio\" name=\"public\">${ Katrid.i18n.gettext('All users') }</label>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\">${ Katrid.i18n.gettext('Save') }</button>\n          <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">${ Katrid.i18n.gettext('Cancel') }</button>\n        </div>\n      </div>\n    </div>\n  </div>\\\n  `;\n    }\n\n    static get cssListClass() {\n      return 'table table-striped table-bordered table-condensed table-hover display responsive nowrap dataTable no-footer dtr-column';\n    }\n\n    renderList(scope, element, attrs, rowClick, parentDataSource, showSelector=true) {\n      let ths = '<th ng-show=\"dataSource.groups.length\"></th>';\n      let tfoot = false;\n      let totals = [];\n      let cols = `<td ng-show=\"dataSource.groups.length\" class=\"group-header\">\n  <div ng-show=\"record._group\">\n  <span class=\"fa fa-fw fa-caret-right\"\n    ng-class=\"{'fa-caret-down': record._group.expanded, 'fa-caret-right': record._group.collapsed}\"></span>\n    {{::record._group.__str__}} ({{::record._group.count }})</div></td>`;\n      if (showSelector) {\n        ths += `<th class=\"list-record-selector\"><input type=\"checkbox\" ng-click=\"action.selectToggle($event.currentTarget)\" onclick=\"$(this).closest('table').find('td.list-record-selector input').prop('checked', $(this).prop('checked'))\"></th>`;\n        cols += `<td class=\"list-record-selector\" onclick=\"event.stopPropagation();\"><input title=\"teste\" type=\"checkbox\" ng-click=\"action.selectToggle($event.currentTarget)\" onclick=\"if (!$(this).prop('checked')) $(this).closest('table').find('th.list-record-selector input').prop('checked', false)\"></td>`;\n      }\n\n      for (let col of Array.from(element.children())) {\n        let colHtml = col.outerHTML;\n        col = $(col);\n        let name = col.attr('name');\n        if (!name) {\n          cols += `<td>${col.html()}</td>`;\n          ths += \"<th><span>${col.attr('label')}</span></th>\";\n          continue;\n        }\n\n        let total = col.attr('total');\n        if (total) {\n          totals.push([name, total]);\n          tfoot = true;\n        } else totals.push(total);\n\n        name = col.attr('name');\n        const fieldInfo = scope.view.fields[name];\n\n        if ((col.attr('visible') === 'False') || (fieldInfo.visible === false))\n          continue;\n\n        // if (fieldInfo.choices) {\n        //   fieldInfo._listChoices = {};\n        //   for (let choice of Array.from(fieldInfo.choices)) {\n        //     fieldInfo._listChoices[choice[0]] = choice[1];\n        //   }\n        // }\n\n        let _widget = fieldInfo.createWidget(col.attr('widget'), scope, col, col);\n        _widget.inList = true;\n        _widget.inplaceEditor = Boolean(scope.inline);\n        ths += _widget.th(col.attr('label'));\n\n        cols += _widget.td(scope.inline, colHtml, col);\n      }\n      if (parentDataSource) {\n        ths += '<th class=\"list-column-delete\" ng-show=\"parent.dataSource.changing && !dataSource.readonly\">';\n        cols += '<td class=\"list-column-delete\" ng-show=\"parent.dataSource.changing && !dataSource.readonly\" ng-click=\"removeItem($index);$event.stopPropagation();\"><i class=\"fa fa-trash-o\"></i></td>';\n      }\n      if ((rowClick == null)) {\n        rowClick = 'action.listRowClick($index, row, $event)';\n      }\n\n      if (tfoot)\n        tfoot = `<tfoot><tr>${ totals.map(t => (t ? `<td class=\"text-right\"><strong><ng-total field=\"${ t[0] }\" type=\"${ t[1] }\"></ng-total></ strong></td>` : '<td class=\"borderless\"></td>')).join('') }</tr></tfoot>`;\n      else\n        tfoot = '';\n      let gridClass = ' grid';\n      if (scope.inline)\n        gridClass += ' inline-editor';\n      return `<table class=\"${this.constructor.cssListClass}${gridClass}\">\n  <thead><tr>${ths}</tr></thead>\n  <tbody>\n  <tr ng-repeat=\"record in records | limitTo:totalDisplayed\" ng-click=\"${rowClick}\" ng-class=\"{'group-header': record._hasGroup, 'form-data-changing': (dataSource.changing && dataSource.recordIndex === $index), 'form-data-readonly': !(dataSource.changing && dataSource.recordIndex === $index)}\" ng-form=\"grid-row-form-{{$index}}\" id=\"grid-row-form-{{$index}}\">${cols}</tr>\n  </tbody>\n  ${ tfoot }\n  </table>\n  <a href=\"javascript:void(0)\" ng-show=\"records.length > totalDisplayed\" ng-click=\"totalDisplayed = totalDisplayed + 1000\">${ Katrid.i18n.gettext('View more...') }</a>\n  `;\n    }\n\n    renderGrid(scope, element, attrs, rowClick) {\n      const tbl = this.renderList(scope, element, attrs, rowClick, true, false);\n      let buttons;\n      if (attrs.inline == 'inline')\n        buttons = `\n<button class=\"btn btn-xs btn-info\" ng-click=\"addItem()\" ng-show=\"parent.dataSource.changing && !dataSource.changing\" type=\"button\">${Katrid.i18n.gettext('Add')}</button>\n<button class=\"btn btn-xs btn-info\" ng-click=\"addItem()\" ng-show=\"dataSource.changing\" type=\"button\">${Katrid.i18n.gettext('Save')}</button>\n<button class=\"btn btn-xs btn-info\" ng-click=\"cancelChanges()\" ng-show=\"dataSource.changing\" type=\"button\">${Katrid.i18n.gettext('Cancel')}</button>\n`;\n      else\n        buttons = `\n<button class=\"btn btn-xs btn-info\" ng-click=\"addItem()\" ng-show=\"parent.dataSource.changing\" type=\"button\">${Katrid.i18n.gettext('Add')}</button>\n<button class=\"btn btn-xs btn-outline-secondary float-right\" ng-click=\"pasteData()\" ng-show=\"parent.dataSource.changing\" type=\"button\" title=\"${Katrid.i18n.gettext('Paste')}\">\n<i class=\"fa fa-clipboard\"></i>\n</button>\n`;\n      return `<div style=\"overflow-x: auto;\"><div ng-show=\"!dataSource.readonly\">\n  ${buttons}\n  </div><div class=\"row inline-input-dialog\" ng-show=\"dataSource.changing\"/>${tbl}</div>`;\n    }\n\n    windowDialog(scope) {\n      console.log('window dialog', scope);\n      return `\\\n  <div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n          <h4 class=\"modal-title\" id=\"myModalLabel\">\n          {{dialogTitle}}\n          {{action.info.display_name}}</h4>\n        </div>\n        <div class=\"modal-body\">\n    <div class=\"modal-dialog-body\" ng-class=\"{'form-data-changing': dataSource.changing}\"></div>\n  <div class=\"clearfix\"></div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" type=\"button\" ng-click=\"dataSource.saveAndClose()\" ng-show=\"dataSource.changing\">${Katrid.i18n.gettext('Save')}</button>\n          <button type=\"button\" class=\"btn btn-default\" type=\"button\" data-dismiss=\"modal\" ng-show=\"dataSource.changing\">${Katrid.i18n.gettext('Cancel')}</button>\n          <button type=\"button\" class=\"btn btn-default\" type=\"button\" data-dismiss=\"modal\" ng-show=\"!dataSource.changing\">${Katrid.i18n.gettext('Close')}</button>\n        </div>\n      </div>\n    </div>\n  </div>\\\n  `;\n    }\n\n    renderReportDialog(scope) {\n      return `<div ng-controller=\"ReportController\">\n  <form id=\"report-form\" method=\"get\" action=\"/web/reports/report/\">\n    <div class=\"data-heading panel panel-default\">\n      <div class=\"panel-body\">\n      <h2>{{ report.name }}</h3>\n      <div class=\"toolbar\">\n        <button class=\"btn btn-primary\" type=\"button\" ng-click=\"report.preview()\"><span class=\"fa fa-print fa-fw\"></span> ${ Katrid.i18n.gettext('Preview') }</button>\n  \n        <div class=\"btn-group\">\n          <button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                  aria-expanded=\"false\">${ Katrid.i18n.gettext('Export')  } <span class=\"caret\"></span></button>\n          <ul class=\"dropdown-menu\">\n            <li><a ng-click=\"Katrid.Reports.Reports.preview()\">PDF</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('docx')\">Word</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('xlsx')\">Excel</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('pptx')\">PowerPoint</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('csv')\">CSV</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('txt')\">${ Katrid.i18n.gettext('Text File') }</a></li>\n          </ul>\n        </div>\n  \n        <div class=\"btn-group\">\n          <button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                  aria-expanded=\"false\">${ Katrid.i18n.gettext('My reports')  } <span class=\"caret\"></span></button>\n          <ul class=\"dropdown-menu\">\n            <li><a ng-click=\"Katrid.Reports.Reports.preview()\">PDF</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('docx')\">Word</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('xlsx')\">Excel</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('pptx')\">PowerPoint</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('csv')\">CSV</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('txt')\">${ Katrid.i18n.gettext('Text File') }</a></li>\n          </ul>\n        </div>\n  \n      <div class=\"pull-right btn-group\">\n        <button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                aria-expanded=\"false\"><i class=\"fa fa-gear fa-fw\"></i></button>\n        <ul class=\"dropdown-menu\">\n          <li><a href=\"javascript:void(0)\" ng-click=\"report.saveDialog()\">${ Katrid.i18n.gettext('Save') }</a></li>\n          <li><a href=\"#\">${ Katrid.i18n.gettext('Load') }</a></li>\n        </ul>\n      </div>\n  \n      </div>\n    </div>\n    </div>\n    <div class=\"col-sm-12\">\n      <table class=\"col-sm-12\" style=\"margin-top: 20px; display:none;\">\n        <tr>\n          <td colspan=\"2\" style=\"padding-top: 8px;\">\n            <label>${ Katrid.i18n.gettext('My reports') }</label>\n  \n            <select class=\"form-control\" ng-change=\"action.userReportChanged(action.userReport.id)\" ng-model=\"action.userReport.id\">\n                <option value=\"\"></option>\n                <option ng-repeat=\"rep in userReports\" value=\"{{ rep.id }}\">{{ rep.name }}</option>\n            </select>\n          </td>\n        </tr>\n      </table>\n    </div>\n  <div id=\"report-params\">\n  <div id=\"params-fields\" class=\"col-sm-12 form-group\">\n    <div class=\"checkbox\"><label><input type=\"checkbox\" ng-model=\"paramsAdvancedOptions\"> ${ Katrid.i18n.gettext('Advanced options') }</label></div>\n    <div ng-show=\"paramsAdvancedOptions\">\n      <div class=\"form-group\">\n        <label>${ Katrid.i18n.gettext('Printable Fields') }</label>\n        <input type=\"hidden\" id=\"report-id-fields\"/>\n      </div>\n      <div class=\"form-group\">\n        <label>${ Katrid.i18n.gettext('Totalizing Fields') }</label>\n        <input type=\"hidden\" id=\"report-id-totals\"/>\n      </div>\n    </div>\n  </div>\n  \n  <div id=\"params-sorting\" class=\"col-sm-12 form-group\">\n    <label class=\"control-label\">${ Katrid.i18n.gettext('Sorting') }</label>\n    <select multiple id=\"report-id-sorting\"></select>\n  </div>\n  \n  <div id=\"params-grouping\" class=\"col-sm-12 form-group\">\n    <label class=\"control-label\">${ Katrid.i18n.gettext('Grouping') }</label>\n    <select multiple id=\"report-id-grouping\"></select>\n  </div>\n  \n  <div class=\"clearfix\"></div>\n  \n  </div>\n    <hr>\n      <table class=\"col-sm-12\">\n        <tr>\n          <td class=\"col-sm-4\">\n            <select class=\"form-control\" ng-model=\"newParam\">\n              <option value=\"\">--- ${ Katrid.i18n.gettext('FILTERS') } ---</option>\n              <option ng-repeat=\"field in report.fields\" value=\"{{ field.name }}\">{{ field.label }}</option>\n            </select>\n          </td>\n          <td class=\"col-sm-8\">\n            <button\n                class=\"btn btn-default\" type=\"button\"\n                ng-click=\"report.addParam(newParam)\">\n              <i class=\"fa fa-plus fa-fw\"></i> ${ Katrid.i18n.gettext('Add Parameter') }\n            </button>\n          </td>\n        </tr>\n      </table>\n  <div class=\"clearfix\"></div>\n  <hr>\n  <div id=\"params-params\">\n    <div ng-repeat=\"param in report.params\" ng-controller=\"ReportParamController\" class=\"row form-group\">\n      <div class=\"col-sm-12\">\n      <div class=\"col-sm-4\">\n        <label class=\"control-label\">{{param.label}}</label>\n        <select ng-model=\"param.operation\" class=\"form-control\" ng-change=\"param.setOperation(param.operation)\">\n          <option ng-repeat=\"op in param.operations\" value=\"{{op.id}}\">{{op.text}}</option>\n        </select>\n      </div>\n      <div class=\"col-sm-8\" id=\"param-widget\"></div>\n      </div>\n    </div>\n  </div>\n  </form>\n  </div>\\\n  `;\n    }\n\n  }\n\n\n  Katrid.UI.utils = {\n    BaseTemplate,\n    Templates: new BaseTemplate()\n  };\n\n})();\n","(function() {\n\n  class NumPad {\n    constructor($compile) {\n      this.restrict = 'A';\n      this.require = 'ngModel';\n      this.scope = {};\n      this.$compile = $compile;\n    }\n    link(scope, el, attrs, ngModel) {\n\n      el.bind('click', () => {\n        console.log('numpad click');\n        let templ = this.$compile(Katrid.app.getTemplate('ui.numpad.pug'))(scope);\n        scope.val = parseFloat(ngModel.$modelValue || 0);\n        scope.$apply();\n        let modal = $(templ).modal();\n        modal.on('hidden.bs.modal', function() {\n          $(this).remove();\n        });\n\n        let comma = false;\n        let frac = '';\n\n        scope.done = () => {\n          scope.$parent.record[ngModel.$name] = scope.val.toString();\n          if (attrs.ngChange)\n            scope.$parent.$eval(attrs.ngChange);\n          ngModel.$setDirty();\n          modal.modal('hide');\n        };\n\n        scope.cancel = () => {\n          modal.modal('hide');\n        };\n\n        scope.buttonClick = (num) => {\n          let s = scope.val.toFixed(2).toString().replace('.', '');\n          if (num === 'bs') {\n            s = s.substr(0, s.length-1);\n            if (s)\n              scope.val = parseFloat(s) / 100;\n            else\n              scope.val = 0;\n          }\n          else if (num === '0')\n            scope.val *= 10;\n          else\n            scope.val = parseFloat(s + num) / 100;\n        }\n      });\n\n\n    }\n  }\n\n  Katrid.UI.uiKatrid.directive('numpadInput', ['$compile', NumPad]);\n\n})();\n","(function() {\n\n  Katrid.UI.uiKatrid\n  .directive('codeEditor', [function () {\n    return {\n      restrict: 'EA',\n      require: 'ngModel',\n      link: function (scope, elm, attrs, ngModel) {\n\n        let editor;\n\n        require.config({\n          paths: {\n            vs: '/static/web/monaco/min/vs',\n          }\n        });\n\n\n        console.log('set language', attrs.language);\n        require(['vs/editor/editor.main'], function () {\n          editor = monaco.editor.create(elm[0], {\n            value: '',\n            language: attrs.language || 'xml',\n            minimap: {\n              enabled: false,\n            },\n            automaticLayout: true,\n          });\n\n          editor.getModel().onDidChangeContent(evt => {\n            ngModel.$setViewValue(editor.getValue());\n          });\n\n          ngModel.$render = function () {\n            setTimeout(() => {\n              editor.setValue(ngModel.$viewValue);\n            }, 300);\n          };\n\n        });\n\n      }\n    };\n  }]);\n\n})();\n","(function () {\n\n  class Alerts {\n    static success(msg) {\n      return toastr['success'](msg);\n    }\n\n    static warn(msg) {\n      return toastr['warning'](msg);\n    }\n\n    static error(msg) {\n      return toastr['error'](msg);\n    }\n  }\n\n  class WaitDialog {\n    static show() {\n      $('#loading-msg').show();\n    }\n\n    static hide() {\n      $('#loading-msg').hide();\n    }\n  }\n\n  class Dialog extends Katrid.UI.Views.BaseView {\n    constructor(scope, options) {\n      super(scope);\n      this.templateUrl = 'dialog.base';\n      this.scope.isDialog = true;\n    }\n\n    render() {\n      return $(Katrid.app.getTemplate(this.templateUrl).replace('<!-- replace-content -->', this.content));\n    }\n\n    show() {\n      if (!this.el) {\n        this.el = $(this.render());\n        this.root = this.el.find('.modal-dialog-body');\n        this.el.find('form').first().addClass('row');\n        this.$compile(this.el)(this.scope);\n      }\n      this.el.modal('show')\n      .on('shown.bs.modal', () => Katrid.UI.uiKatrid.setFocus(this.el.find('.form-field').first()));\n      return this.el;\n    }\n}\n\n  class Window extends Dialog {\n    constructor(options) {\n      super(options.scope, options);\n      this.scope._ = this.scope.$parent._;\n      this.scope.parentAction = this.scope.action;\n      this.scope.views = {\n        form: options.view\n      };\n      this.dialogTitle = (options && options.title) || Katrid.i18n.gettext('Create: ');\n      this.scope.view = this.view = options.view;\n      this.scope.model = options.model;\n      this.options = options;\n    }\n\n    async createNew(config) {\n      let field = this.options.field;\n\n      this.scope.$setDirty = (field) => {\n        const control = this.scope.form[field];\n        if (control) {\n          control.$setDirty();\n        }\n      };\n\n      let view = this.scope.view;\n      let elScope = this.scope;\n      elScope.views = { form: view };\n      elScope.isDialog = true;\n      let caption = this.dialogTitle;\n\n      this.action = this.scope.action = {\n        scope: this.scope,\n        context: {},\n      };\n      let dataSource = this.action.dataSource = this.scope.dataSource = new Katrid.Data.DataSource(this.scope, this.action);\n\n      let formView = new Katrid.UI.Views.FormView(\n        this.action, this.view, { dialog: true, templateUrl: 'view.form.dialog.modal.jinja2' }\n      );\n      let el = formView.render();\n      let form = el.find('form:first');\n      elScope.root = form;\n      this.action.$element = form;\n\n      form.addClass('row');\n      el.modal('show').on('shown.bs.modal', () => Katrid.UI.uiKatrid.setFocus(el.find('.form-field').first()))\n      .on('hidden.bs.modal', function() {\n        $(this).modal('dispose').remove();\n      });\n\n      this.scope.form = form.controller('form');\n      this.scope.formElement = form;\n      if (field) {\n        let evt = this.scope.$on('saveAndClose', async (event, targetScope, data) => {\n          if (this.scope === targetScope) {\n            if (_.isArray(data) && data.length) {\n              data = await this.scope.$parent.model.getFieldChoices(field.name, null, {ids: data});\n              let vals = {};\n              let res = data.items[0];\n              vals[field.name] = res;\n              this.scope.$parent.action.dataSource.setValues(vals);\n              if (this.options.sel)\n                this.options.sel.select2('data', { id: res[0], text: res[1] });\n            }\n            // unhook event\n            evt();\n          }\n        });\n      }\n\n      return new Promise(async (resolve, reject) => {\n        setTimeout(async () => {\n          // check if there's a creation name\n          let kwargs, defaultValues;\n          if (config) {\n            if (config.creationName)\n              kwargs = { creation_name: name };\n            if (config.defaultValues)\n              defaultValues = config.defaultValues;\n          }\n          await dataSource.insert(true, defaultValues, kwargs);\n          this.scope.$apply();\n          resolve(el);\n        });\n\n      });\n\n    };\n  }\n\n  Katrid.UI.Dialogs = {\n    Alerts,\n    WaitDialog,\n    Dialog,\n    Window\n  };\n\n})();\n","(function () {\n\n  Katrid.UI.uiKatrid.directive(\"foreignkey\", ['$compile', '$controller', ($compile, $controller) => ({\n    restrict: \"A\",\n    require: \"ngModel\",\n    link(scope, el, attrs, controller) {\n      let serviceName;\n      let sel = el;\n      let _shown = false;\n      const field = scope.view.fields[attrs.name];\n      el.addClass(\"form-field\");\n      if (attrs.serviceName) serviceName = attrs;\n      else if (scope.action && scope.action.model) serviceName = scope.action.model.name;\n      else serviceName = attrs.foreignkey;\n      const newItem = function () {\n      };\n      const newEditItem = function () {\n      };\n      let _timeout = null;\n\n      let config = {\n        allowClear: true,\n        query(query) {\n          // evaluate domain attribute\n          let domain = field.domain;\n          if (domain && _.isString(domain))\n            domain = scope.$eval(domain);\n\n          // make params\n          let data = {\n            args: [query.term],\n            kwargs: {\n              count: 1,\n              page: query.page,\n              domain: domain,\n              name_fields: attrs.nameFields && attrs.nameFields.split(\",\") || null\n            }\n          };\n          const f = () => {\n            let svc;\n            if (scope.model) svc = scope.model.getFieldChoices(field.name, query.term, data.kwargs);\n            else svc = new Katrid.Services.Model(field.model).searchName(data);\n            svc.then(res => {\n              let data = res.items;\n              const r = data.map(item => ({\n                id: item[0],\n                text: item[1]\n              }));\n              const more = query.page * Katrid.settings.services.choicesPageLimit < res.count;\n              if (!multiple && !more) {\n                let msg;\n                const v = sel.data(\"select2\").search.val();\n                if ((attrs.allowCreate && attrs.allowCreate !== \"false\" || attrs.allowCreate == null) && v) {\n                  msg = Katrid.i18n.gettext('Create <i>\"%s\"</i>...');\n                  r.push({\n                    id: newItem,\n                    text: msg\n                  })\n                }\n              }\n              return query.callback({\n                results: r,\n                more: more\n              })\n            })\n          };\n          if (_timeout) clearTimeout(_timeout);\n          _timeout = setTimeout(f, 400)\n        },\n        ajax: {\n          url: `/api/rpc/${serviceName}/get_field_choices/`,\n          contentType: \"application/json\",\n          dataType: \"json\",\n          type: \"POST\"\n        },\n        formatSelection(val) {\n          if (val.id === newItem || val.id === newEditItem) return Katrid.i18n.gettext(\"Creating...\");\n          return val.text\n        },\n        formatResult(state) {\n          const s = sel.data(\"select2\").search.val();\n          if (state.id === newItem) {\n            state.str = s;\n            return `<strong>${sprintf(state.text, s)}</strong>`\n          } else if (state.id === newEditItem) {\n            state.str = s;\n            return `<strong>${sprintf(state.text, s)}</strong>`\n          }\n          return state.text\n        },\n        initSelection(el, cb) {\n          let v = controller.$modelValue;\n          if (multiple) {\n            v = v.map(obj => ({\n              id: obj[0],\n              text: obj[1]\n            }));\n            return cb(v)\n          } else if (_.isArray(v)) {\n            return cb({\n              id: v[0],\n              text: v[1]\n            })\n          }\n        }\n      };\n\n      let allowCreateEdit = attrs.noCreateEdit;\n      allowCreateEdit = _.isUndefined(allowCreateEdit) || !Boolean(allowCreateEdit);\n\n      let {\n        multiple: multiple\n      } = attrs;\n      if (multiple) {\n        config[\"multiple\"] = true\n      }\n      sel = sel.select2(config);\n\n      let createNew = () => {\n        sel.select2('close');\n        let service = new Katrid.Services.Model(field.model);\n        return service.getViewInfo({\n          view_type: \"form\"\n        }).then(function (res) {\n          let title = _.sprintf(Katrid.i18n.gettext('Create: %(title)s'), {title: field.caption});\n          let options = {\n            scope: scope.$new(true),\n            $controller: $controller,\n            sel: sel, field: field,\n            title: title,\n            view: res,\n            model: service,\n            action: scope.action,\n          };\n          let wnd = new Katrid.UI.Dialogs.Window(options);\n          wnd.createNew();\n        })\n      };\n\n      if (allowCreateEdit)\n        sel.parent().find('div.select2-container>div.select2-drop')\n        .append(`<div style=\"padding: 4px;\"><button type=\"button\" class=\"btn btn-link btn-sm\">${Katrid.i18n.gettext('Create New...')}</button></div>`)\n        .find('button').click(createNew);\n\n\n      sel.on(\"change\", async e => {\n        let v = e.added;\n        if (v && v.id === newItem) {\n          let service = new Katrid.Services.Model(field.model);\n          try {\n            let res = await service.createName(v.str);\n            let vals = {};\n            vals[field.name] = res;\n            scope.dataSource.setValues(vals);\n            sel.select2('data', {id: res[0], text: res[1]});\n          } catch (err) {\n            let res = await service.getViewInfo({\n              view_type: \"form\"\n            });\n            let title = _.sprintf(Katrid.i18n.gettext('Create: %(title)s'), {title: field.caption});\n            let options = {\n              scope: scope.$new(true),\n              $controller: $controller,\n              sel: sel, field: field,\n              title: title,\n              view: res,\n              model: service,\n              action: scope.action,\n            };\n            let wnd = new Katrid.UI.Dialogs.Window(options);\n            wnd.createNew({creationName: v.str});\n            sel.select2('data', null);\n          }\n        } else if (v && v.id === newEditItem) {\n        } else if (multiple && e.val.length) {\n          return controller.$setViewValue(e.val)\n        } else {\n          controller.$setDirty();\n          if (v) {\n            return controller.$setViewValue([v.id, v.text])\n          } else {\n            return controller.$setViewValue(null)\n          }\n        }\n      }).on(\"select2-open\", () => {\n        if (!_shown) {\n          _shown = true;\n          let parentModal = el.closest(\"div.modal\");\n          if (parentModal.length) parentModal.on(\"hide.bs.modal\", () => sel.select2(\"destroy\"))\n        }\n      });\n      controller.$parsers.push(value => {\n        if (value) {\n          if (_.isArray(value)) return value;\n          else if (_.isObject(value)) return [value.id, value.text];\n          else return value\n        }\n        return null\n      });\n      if (!multiple) scope.$watch(attrs.ngModel, (newValue, oldValue) => sel.select2(\"val\", newValue));\n      return controller.$render = function () {\n        if (multiple) {\n          if (controller.$viewValue) {\n            const v = Array.from(controller.$viewValue).map(obj => obj[0]);\n            sel.select2(\"val\", v)\n          }\n        }\n        if (controller.$viewValue) {\n          return sel.select2(\"val\", controller.$viewValue[0])\n        } else {\n          return sel.select2(\"val\", null)\n        }\n      }\n    }\n  })]);\n\n\n  Katrid.UI.uiKatrid.filter('m2m', () =>\n    function (input) {\n      if (_.isArray(input))\n        return input.map((obj) => obj ? obj[1] : null).join(', ');\n    }\n  );\n\n\n})();\n","(function() {\n\n  Katrid.UI.uiKatrid.directive('statusField', ['$compile', ($compile) =>\n    ({\n      restrict: 'A',\n      priority: 1,\n      replace: true,\n      link(scope, element, attrs, controller) {\n        const field = scope.view.fields[attrs.name];\n        scope.choices = field.choices;\n        if (!attrs.readonly) {\n          scope.itemClick = () => console.log('status field item click');\n        }\n        element.closest('header').prepend(element);\n      },\n      template(element, attrs) {\n        return sprintf(Katrid.app.$templateCache.get('view.field.StatusField'), { fieldName: attrs.name });\n      }\n    })\n\n  ]);\n\n})();\n","(function() {\n\n  Katrid.UI.uiKatrid.directive('sortableField', ['$compile', '$timeout', ($compile, $timeout) =>\n    ({\n      restrict: 'E',\n      require: 'ngModel',\n      replace: true,\n      scope: {},\n      link: {\n        post: function (scope, el, attrs) {\n          let tbl = el.closest('tbody');\n          let fixHelperModified = function (e, tr) {\n              let $originals = tr.children();\n              let $helper = tr.clone();\n              $helper.children().each(function (index) {\n                $(this).width($originals.eq(index).width())\n              });\n              return $helper;\n            },\n            updateIndex = function (e, ui) {\n              $('td.list-column-sortable', ui.item.parent()).each(function (i) {\n                // $(this).html(i + 1);\n              });\n            };\n\n          tbl.sortable({\n            helper: fixHelperModified,\n            stop: updateIndex\n          }).disableSelection();\n        }\n      },\n      template(element, attrs) {\n        return sprintf(Katrid.$templateCache.get('view.field.SortableField'), { fieldName: attrs.name });\n      }\n    })\n\n  ]);\n\n})();\n","/**\n * jQuery number plug-in 2.1.3\n * Copyright 2012, Digital Fusion\n * Licensed under the MIT license.\n * http://opensource.teamdf.com/license/\n *\n * A jQuery plugin which implements a permutation of phpjs.org's number_format to provide\n * simple number formatting, insertion, and as-you-type masking of a number.\n *\n * @author\tSam Sehnert\n * @docs\thttp://www.teamdf.com/web/jquery-number-format-redux/196/\n */\n(function($){\n\n\t\"use strict\";\n\n\t/**\n\t * Method for selecting a range of characters in an input/textarea.\n\t *\n\t * @param int rangeStart\t\t\t: Where we want the selection to start.\n\t * @param int rangeEnd\t\t\t\t: Where we want the selection to end.\n\t *\n\t * @return void;\n\t */\n\tfunction setSelectionRange( rangeStart, rangeEnd )\n\t{\n\t\t// Check which way we need to define the text range.\n\t\tif( this.createTextRange )\n\t\t{\n\t\t\tvar range = this.createTextRange();\n\t\t\t\trange.collapse( true );\n\t\t\t\trange.moveStart( 'character',\trangeStart );\n\t\t\t\trange.moveEnd( 'character',\t\trangeEnd-rangeStart );\n\t\t\t\trange.select();\n\t\t}\n\n\t\t// Alternate setSelectionRange method for supporting browsers.\n\t\telse if( this.setSelectionRange )\n\t\t{\n\t\t\tthis.focus();\n\t\t\tthis.setSelectionRange( rangeStart, rangeEnd );\n\t\t}\n\t}\n\n\t/**\n\t * Get the selection position for the given part.\n\t *\n\t * @param string part\t\t\t: Options, 'Start' or 'End'. The selection position to get.\n\t *\n\t * @return int : The index position of the selection part.\n\t */\n\tfunction getSelection( part )\n\t{\n\t\tvar pos\t= this.value.length;\n\n\t\t// Work out the selection part.\n\t\tpart = ( part.toLowerCase() == 'start' ? 'Start' : 'End' );\n\n\t\tif( document.selection ){\n\t\t\t// The current selection\n\t\t\tvar range = document.selection.createRange(), stored_range, selectionStart, selectionEnd;\n\t\t\t// We'll use this as a 'dummy'\n\t\t\tstored_range = range.duplicate();\n\t\t\t// Select all text\n\t\t\t//stored_range.moveToElementText( this );\n\t\t\tstored_range.expand('textedit');\n\t\t\t// Now move 'dummy' end point to end point of original range\n\t\t\tstored_range.setEndPoint( 'EndToEnd', range );\n\t\t\t// Now we can calculate start and end points\n\t\t\tselectionStart = stored_range.text.length - range.text.length;\n\t\t\tselectionEnd = selectionStart + range.text.length;\n\t\t\treturn part == 'Start' ? selectionStart : selectionEnd;\n\t\t}\n\n\t\telse if(typeof(this['selection'+part])!=\"undefined\")\n\t\t{\n\t\t \tpos = this['selection'+part];\n\t\t}\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Substitutions for keydown keycodes.\n\t * Allows conversion from e.which to ascii characters.\n\t */\n\tvar _keydown = {\n\t\tcodes : {\n\t\t\t188 : 44,\n      110 : 44,\n      108 : 44,\n\t\t\t109 : 45,\n\t\t\t190 : 46,\n\t\t\t191 : 47,\n\t\t\t192 : 96,\n\t\t\t220 : 92,\n\t\t\t222 : 39,\n\t\t\t221 : 93,\n\t\t\t219 : 91,\n\t\t\t173 : 45,\n\t\t\t187 : 61, //IE Key codes\n\t\t\t186 : 59, //IE Key codes\n\t\t\t189 : 45, //IE Key codes\n        },\n        shifts : {\n\t\t\t96 : \"~\",\n\t\t\t49 : \"!\",\n\t\t\t50 : \"@\",\n\t\t\t51 : \"#\",\n\t\t\t52 : \"$\",\n\t\t\t53 : \"%\",\n\t\t\t54 : \"^\",\n\t\t\t55 : \"&\",\n\t\t\t56 : \"*\",\n\t\t\t57 : \"(\",\n\t\t\t48 : \")\",\n\t\t\t45 : \"_\",\n\t\t\t61 : \"+\",\n\t\t\t91 : \"{\",\n\t\t\t93 : \"}\",\n\t\t\t92 : \"|\",\n\t\t\t59 : \":\",\n\t\t\t39 : \"\\\"\",\n\t\t\t44 : \"<\",\n\t\t\t46 : \">\",\n\t\t\t47 : \"?\"\n        }\n    };\n\n\t/**\n\t * jQuery number formatter plugin. This will allow you to format numbers on an element.\n\t *\n\t * @params proxied for format_number method.\n\t *\n\t * @return : The jQuery collection the method was called with.\n\t */\n\t$.fn.number = function( number, decimals, dec_point, thousands_sep ){\n\n\t    // Enter the default thousands separator, and the decimal placeholder.\n\t    thousands_sep\t= (typeof thousands_sep === 'undefined') ? ',' : thousands_sep;\n\t    dec_point\t\t= (typeof dec_point === 'undefined') ? '.' : dec_point;\n\t    decimals\t\t= (typeof decimals === 'undefined' ) ? 0 : decimals;\n\n\t    // Work out the unicode character for the decimal placeholder.\n\t    var u_dec\t\t\t= ('\\\\u'+('0000'+(dec_point.charCodeAt(0).toString(16))).slice(-4)),\n\t    \tregex_dec_num\t= new RegExp('[^-'+u_dec+'0-9]','g'),\n\t    \tregex_dec\t\t= new RegExp(u_dec,'g');\n\n\t    // If we've specified to take the number from the target element,\n\t    // we loop over the collection, and get the number.\n\t    if( number === true )\n\t    {\n\t    \t// If this element is a number, then we add a keyup\n\t    \tif( this.is('input:text') )\n\t    \t{\n\t    \t\t// Return the jquery collection.\n\t    \t\treturn this.on({\n\n\t    \t\t\t/**\n\t    \t\t\t * Handles keyup events, re-formatting numbers.\n\t    \t\t\t *\n\t    \t\t\t * @param object e\t\t\t: the keyup event object.s\n\t    \t\t\t *\n\t    \t\t\t * @return void;\n\t    \t\t\t */\n\t    \t\t\t'keydown.format' : function(e){\n\n\n\t    \t\t\t\t// Define variables used in the code below.\n\t    \t\t\t\tvar $this\t= $(this),\n\t    \t\t\t\t\tdata\t= $this.data('numFormat'),\n\t    \t\t\t\t\tcode\t= (e.keyCode ? e.keyCode : e.which),\n\t\t\t\t\t\t\tchara\t= '', //unescape(e.originalEvent.keyIdentifier.replace('U+','%u')),\n\t    \t\t\t\t\tstart\t= getSelection.apply(this,['start']),\n\t    \t\t\t\t\tend\t\t= getSelection.apply(this,['end']),\n\t    \t\t\t\t\tval\t\t= '',\n\t    \t\t\t\t\tsetPos\t= false;\n\n              if (e.key === '-') {\n              \tif ($this.val() === 0)\n              \t\tdata.negative = true;\n              \telse {\n              \t  data.negative = false;\n                  if (this.value.includes('-'))\n                    this.value = this.value.substr(1, this.value.length - 1);\n                  else\n                    this.value = '-' + this.value;\n                }\n                $this.val(this.value);\n                e.preventDefault();\n                return;\n              }\n\n\t    \t\t\t\t// Webkit (Chrome & Safari) on windows screws up the keyIdentifier detection\n\t    \t\t\t\t// for numpad characters. I've disabled this for now, because while keyCode munging\n\t    \t\t\t\t// below is hackish and ugly, it actually works cross browser & platform.\n\n//\t    \t\t\t\tif( typeof e.originalEvent.keyIdentifier !== 'undefined' )\n//\t    \t\t\t\t{\n//\t    \t\t\t\t\tchara = unescape(e.originalEvent.keyIdentifier.replace('U+','%u'));\n//\t    \t\t\t\t}\n//\t    \t\t\t\telse\n//\t    \t\t\t\t{\n\t    \t\t\t\t\tif (_keydown.codes.hasOwnProperty(code)) {\n\t\t\t\t\t            code = _keydown.codes[code];\n\t\t\t\t\t        }\n\t\t\t\t\t        if (!e.shiftKey && (code >= 65 && code <= 90)){\n\t\t\t\t\t        \tcode += 32;\n\t\t\t\t\t        } else if (!e.shiftKey && (code >= 69 && code <= 105)){\n\t\t\t\t\t        \tcode -= 48;\n\t\t\t\t\t        } else if (e.shiftKey && _keydown.shifts.hasOwnProperty(code)){\n\t\t\t\t\t            //get shifted keyCode value\n\t\t\t\t\t            chara = _keydown.shifts[code];\n\t\t\t\t\t        }\n\n\t\t\t\t\t        if( chara == '' ) chara = String.fromCharCode(code);\n//\t    \t\t\t\t}\n\n\n\n\t    \t\t\t\t// Stop executing if the user didn't type a number key, a decimal character, or backspace.\n\t    \t\t\t\tif( code !== 8 && chara != dec_point && !chara.match(/[0-9]/) )\n\t    \t\t\t\t{\n\t    \t\t\t\t\t// We need the original keycode now...\n\t    \t\t\t\t\tvar key = (e.keyCode ? e.keyCode : e.which);\n\t    \t\t\t\t\tif( // Allow control keys to go through... (delete, etc)\n\t    \t\t\t\t\t\tkey == 46 || key == 8 || key == 9 || key == 27 || key == 13 ||\n\t    \t\t\t\t\t\t// Allow: Ctrl+A, Ctrl+R\n\t    \t\t\t\t\t\t( (key == 65 || key == 82 ) && ( e.ctrlKey || e.metaKey ) === true ) ||\n\t    \t\t\t\t\t\t// Allow: Ctrl+V, Ctrl+C\n\t    \t\t\t\t\t\t( (key == 86 || key == 67 ) && ( e.ctrlKey || e.metaKey ) === true ) ||\n\t    \t\t\t\t\t\t// Allow: home, end, left, right\n\t    \t\t\t\t\t\t( (key >= 35 && key <= 39) )\n\t\t\t\t\t\t\t){\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// But prevent all other keys.\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\treturn false;\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// The whole lot has been selected, or if the field is empty...\n\t    \t\t\t\tif( start == 0 && end == this.value.length || $this.val() == 0 )\n\t    \t\t\t\t{\n\t    \t\t\t\t\tif( code === 8 )\n\t    \t\t\t\t\t{\n\t\t    \t\t\t\t\t// Blank out the field, but only if the data object has already been instanciated.\n\t    \t\t\t\t\t\tstart = end = 1;\n\t    \t\t\t\t\t\tthis.value = '';\n\n\t    \t\t\t\t\t\t// Reset the cursor position.\n\t\t    \t\t\t\t\tdata.init = (decimals>0?-1:0);\n\t\t    \t\t\t\t\tdata.c = (decimals>0?-(decimals+1):0);\n\t\t    \t\t\t\t\tsetSelectionRange.apply(this, [0,0]);\n\t\t    \t\t\t\t}\n\t\t    \t\t\t\telse if( chara === dec_point )\n\t\t    \t\t\t\t{\n\t\t    \t\t\t\t\tstart = end = 1;\n\t\t    \t\t\t\t\tthis.value = '0'+ dec_point + (new Array(decimals+1).join('0'));\n\n\t\t    \t\t\t\t\t// Reset the cursor position.\n\t\t    \t\t\t\t\tdata.init = (decimals>0?1:0);\n\t\t    \t\t\t\t\tdata.c = (decimals>0?-(decimals+1):0);\n\t\t    \t\t\t\t}\n\t\t    \t\t\t\telse if( this.value.length === 0 )\n\t\t    \t\t\t\t{\n\t\t    \t\t\t\t\t// Reset the cursor position.\n\t\t    \t\t\t\t\tdata.init = (decimals>0?-1:0);\n\t\t    \t\t\t\t\tdata.c = (decimals>0?-(decimals):0);\n\t\t    \t\t\t\t}\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// Otherwise, we need to reset the caret position\n\t    \t\t\t\t// based on the users selection.\n\t    \t\t\t\telse\n\t    \t\t\t\t{\n\t    \t\t\t\t\tdata.c = end-this.value.length;\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// If the start position is before the decimal point,\n\t    \t\t\t\t// and the user has typed a decimal point, we need to move the caret\n\t    \t\t\t\t// past the decimal place.\n\t    \t\t\t\tif( decimals > 0 && chara == dec_point && start == this.value.length-decimals-1 )\n\t    \t\t\t\t{\n\t    \t\t\t\t\tdata.c++;\n\t    \t\t\t\t\tdata.init = Math.max(0,data.init);\n\t    \t\t\t\t\te.preventDefault();\n\n\t    \t\t\t\t\t// Set the selection position.\n\t    \t\t\t\t\tsetPos = this.value.length+data.c;\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// If the user is just typing the decimal place,\n\t    \t\t\t\t// we simply ignore it.\n\t    \t\t\t\telse if( chara == dec_point )\n\t    \t\t\t\t{\n\t    \t\t\t\t\tdata.init = Math.max(0,data.init);\n\t    \t\t\t\t\te.preventDefault();\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// If hitting the delete key, and the cursor is behind a decimal place,\n\t    \t\t\t\t// we simply move the cursor to the other side of the decimal place.\n\t    \t\t\t\telse if( decimals > 0 && code == 8 && start == this.value.length-decimals )\n\t    \t\t\t\t{\n\t    \t\t\t\t\te.preventDefault();\n\t    \t\t\t\t\tdata.c--;\n\n\t    \t\t\t\t\t// Set the selection position.\n\t    \t\t\t\t\tsetPos = this.value.length+data.c;\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// If hitting the delete key, and the cursor is to the right of the decimal\n\t    \t\t\t\t// (but not directly to the right) we replace the character preceeding the\n\t    \t\t\t\t// caret with a 0.\n\t    \t\t\t\telse if( decimals > 0 && code == 8 && start > this.value.length-decimals )\n\t    \t\t\t\t{\n\t    \t\t\t\t\tif( this.value === '' ) return;\n\n\t    \t\t\t\t\t// If the character preceeding is not already a 0,\n\t    \t\t\t\t\t// replace it with one.\n\t    \t\t\t\t\tif( this.value.slice(start-1, start) != '0' )\n\t    \t\t\t\t\t{\n\t    \t\t\t\t\t\tval = this.value.slice(0, start-1) + '0' + this.value.slice(start);\n\t    \t\t\t\t\t\t$this.val(val.replace(regex_dec_num,'').replace(regex_dec,dec_point));\n\t    \t\t\t\t\t}\n\n\t    \t\t\t\t\te.preventDefault();\n\t    \t\t\t\t\tdata.c--;\n\n\t    \t\t\t\t\t// Set the selection position.\n\t    \t\t\t\t\tsetPos = this.value.length+data.c;\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// If the delete key was pressed, and the character immediately\n\t    \t\t\t\t// before the caret is a thousands_separator character, simply\n\t    \t\t\t\t// step over it.\n\t    \t\t\t\telse if( code == 8 && this.value.slice(start-1, start) == thousands_sep )\n\t    \t\t\t\t{\n\t    \t\t\t\t\te.preventDefault();\n\t    \t\t\t\t\tdata.c--;\n\n\t    \t\t\t\t\t// Set the selection position.\n\t    \t\t\t\t\tsetPos = this.value.length+data.c;\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// If the caret is to the right of the decimal place, and the user is entering a\n\t    \t\t\t\t// number, remove the following character before putting in the new one.\n\t    \t\t\t\telse if(\n\t    \t\t\t\t\tdecimals > 0 &&\n\t    \t\t\t\t\tstart == end &&\n\t    \t\t\t\t\tthis.value.length > decimals+1 &&\n\t    \t\t\t\t\tstart > this.value.length-decimals-1 && isFinite(+chara) &&\n\t\t    \t\t\t\t!e.metaKey && !e.ctrlKey && !e.altKey && chara.length === 1\n\t    \t\t\t\t)\n\t    \t\t\t\t{\n\t    \t\t\t\t\t// If the character preceeding is not already a 0,\n\t    \t\t\t\t\t// replace it with one.\n\t    \t\t\t\t\tif( end === this.value.length )\n\t    \t\t\t\t\t{\n\t    \t\t\t\t\t\tval = this.value.slice(0, start-1);\n\t    \t\t\t\t\t}\n\t    \t\t\t\t\telse\n\t    \t\t\t\t\t{\n\t    \t\t\t\t\t\tval = this.value.slice(0, start)+this.value.slice(start+1);\n\t    \t\t\t\t\t}\n\n\t    \t\t\t\t\t// Reset the position.\n\t    \t\t\t\t\tthis.value = val;\n\t    \t\t\t\t\tsetPos = start;\n\t    \t\t\t\t}\n\n\t    \t\t\t\tif (setPos === false && code === 44 && chara === dec_point)\n\t    \t\t\t\t\tsetPos = this.value.indexOf(dec_point) + 1;\n\n\t    \t\t\t\t// If we need to re-position the characters.\n\t    \t\t\t\tif( setPos !== false )\n\t    \t\t\t\t{\n\t    \t\t\t\t\tsetSelectionRange.apply(this, [setPos, setPos]);\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// Store the data on the element.\n\t    \t\t\t\t$this.data('numFormat', data);\n\n\t    \t\t\t},\n\n\t    \t\t\t/**\n\t    \t\t\t * Handles keyup events, re-formatting numbers.\n\t    \t\t\t *\n\t    \t\t\t * @param object e\t\t\t: the keyup event object.s\n\t    \t\t\t *\n\t    \t\t\t * @return void;\n\t    \t\t\t */\n\t    \t\t\t'keyup.format' : function(e){\n\n\t    \t\t\t\t// Store these variables for use below.\n\t    \t\t\t\tvar $this\t= $(this),\n\t    \t\t\t\t\tdata\t= $this.data('numFormat'),\n\t    \t\t\t\t\tcode\t= (e.keyCode ? e.keyCode : e.which),\n\t    \t\t\t\t\tstart\t= getSelection.apply(this,['start']),\n\t    \t\t\t\t\tsetPos;\n\n\t    \t\t\t\t// Stop executing if the user didn't type a number key, a decimal, or a comma.\n\t    \t\t\t\tif( this.value === '' || (code < 48 || code > 57) && (code < 96 || code > 105 ) && code !== 8 )\n\t    \t\t\t\t  return;\n\n\t    \t\t\t\t// Re-format the textarea.\n\t    \t\t\t\t$this.val($this.val());\n\n\t    \t\t\t\tif( decimals > 0 )\n\t    \t\t\t\t{\n\t\t    \t\t\t\t// If we haven't marked this item as 'initialised'\n\t\t    \t\t\t\t// then do so now. It means we should place the caret just\n\t\t    \t\t\t\t// before the decimal. This will never be un-initialised before\n\t\t    \t\t\t\t// the decimal character itself is entered.\n\t\t    \t\t\t\tif( data.init < 1 )\n\t\t    \t\t\t\t{\n\t\t    \t\t\t\t\tstart\t\t= this.value.length-decimals-( data.init < 0 ? 1 : 0 );\n\t\t    \t\t\t\t\tdata.c\t\t= start-this.value.length;\n\t\t    \t\t\t\t\tdata.init\t= 1;\n\n\t\t    \t\t\t\t\t$this.data('numFormat', data);\n\t\t    \t\t\t\t}\n\n\t\t    \t\t\t\t// Increase the cursor position if the caret is to the right\n\t\t    \t\t\t\t// of the decimal place, and the character pressed isn't the delete key.\n\t\t    \t\t\t\telse if( start > this.value.length-decimals && code != 8 )\n\t\t    \t\t\t\t{\n\t\t    \t\t\t\t\tdata.c++;\n\n\t\t    \t\t\t\t\t// Store the data, now that it's changed.\n\t\t    \t\t\t\t\t$this.data('numFormat', data);\n\t\t    \t\t\t\t}\n\t    \t\t\t\t}\n\n\t    \t\t\t\t//console.log( 'Setting pos: ', start, decimals, this.value.length + data.c, this.value.length, data.c );\n\n\t    \t\t\t\t// Set the selection position.\n\t    \t\t\t\tsetPos = this.value.length+data.c;\n\t    \t\t\t\tif (((this.value.length - setPos) === data.decimals) && (String.fromCharCode(code) !== data.dec_point)) {\n                setPos -= 1;\n                console.log('set pos', data.dec_point, code, String.fromCharCode(code));\n              }\n\t    \t\t\t\tsetSelectionRange.apply(this, [setPos, setPos]);\n\t    \t\t\t},\n\n\t    \t\t\t/**\n\t    \t\t\t * Reformat when pasting into the field.\n\t    \t\t\t *\n\t    \t\t\t * @param object e \t\t: jQuery event object.\n\t    \t\t\t *\n\t    \t\t\t * @return false : prevent default action.\n\t    \t\t\t */\n\t    \t\t\t'paste.format' : function(e){\n\n\t    \t\t\t\t// Defint $this. It's used twice!.\n\t    \t\t\t\tvar $this\t\t= $(this),\n\t    \t\t\t\t\toriginal\t= e.originalEvent,\n\t    \t\t\t\t\tval\t\t= null;\n\n\t\t\t\t\t\t// Get the text content stream.\n\t\t\t\t\t\tif (window.clipboardData && window.clipboardData.getData) { // IE\n\t\t\t\t\t\t\tval = window.clipboardData.getData('Text');\n\t\t\t\t\t\t} else if (original.clipboardData && original.clipboardData.getData) {\n\t\t\t\t\t\t\tval = original.clipboardData.getData('text/plain');\n\t\t\t\t\t\t}\n\n\t    \t\t\t\t// Do the reformat operation.\n\t    \t\t\t\t$this.val(val);\n\n\t    \t\t\t\t// Stop the actual content from being pasted.\n\t    \t\t\t\te.preventDefault();\n\t    \t\t\t\treturn false;\n\t    \t\t\t}\n\n\t    \t\t})\n\n\t    \t\t// Loop each element (which isn't blank) and do the format.\n    \t\t\t.each(function(){\n\n    \t\t\t\tvar $this = $(this).data('numFormat',{\n    \t\t\t\t\tc\t\t\t\t: -(decimals+1),\n    \t\t\t\t\tdecimals\t\t: decimals,\n    \t\t\t\t\tthousands_sep\t: thousands_sep,\n    \t\t\t\t\tdec_point\t\t: dec_point,\n    \t\t\t\t\tregex_dec_num\t: regex_dec_num,\n    \t\t\t\t\tregex_dec\t\t: regex_dec,\n    \t\t\t\t\tinit\t\t\t: false\n    \t\t\t\t});\n\n    \t\t\t\t// Return if the element is empty.\n    \t\t\t\tif( this.value === '' ) return;\n\n    \t\t\t\t// Otherwise... format!!\n    \t\t\t\t$this.val($this.val());\n    \t\t\t});\n\t    \t}\n\t    \telse\n\t    \t{\n\t\t    \t// return the collection.\n\t\t    \treturn this.each(function(){\n\t\t    \t\tvar $this = $(this), num = +$this.text().replace(regex_dec_num,'').replace(regex_dec,'.');\n\t\t    \t\t$this.number( !isFinite(num) ? 0 : +num, decimals, dec_point, thousands_sep );\n\t\t    \t});\n\t    \t}\n\t    }\n\n\t    // Add this number to the element as text.\n\t    return this.text( $.number.apply(window,arguments) );\n\t};\n\n\t//\n\t// Create .val() hooks to get and set formatted numbers in inputs.\n\t//\n\n\t// We check if any hooks already exist, and cache\n\t// them in case we need to re-use them later on.\n\tvar origHookGet = null, origHookSet = null;\n\n\t// Check if a text valHook already exists.\n\tif( $.isPlainObject( $.valHooks.text ) )\n\t{\n\t    // Preserve the original valhook function\n\t    // we'll call this for values we're not\n\t    // explicitly handling.\n\t    if( $.isFunction( $.valHooks.text.get ) ) origHookGet = $.valHooks.text.get;\n\t    if( $.isFunction( $.valHooks.text.set ) ) origHookSet = $.valHooks.text.set;\n\t}\n\telse\n\t{\n\t    // Define an object for the new valhook.\n\t    $.valHooks.text = {};\n\t}\n\n\t/**\n\t * Define the valHook to return normalised field data against an input\n\t * which has been tagged by the number formatter.\n\t *\n\t * @param object el\t\t\t: The raw DOM element that we're getting the value from.\n\t *\n\t * @return mixed : Returns the value that was written to the element as a\n\t *\t\t\t\t   javascript number, or undefined to let jQuery handle it normally.\n\t */\n\t$.valHooks.text.get = function( el ){\n\n\t\t// Get the element, and its data.\n\t\tvar $this\t= $(el), num,\n\t\t\tdata\t= $this.data('numFormat');\n\n        // Does this element have our data field?\n        if( !data )\n        {\n            // Check if the valhook function already existed\n            if( $.isFunction( origHookGet ) )\n            {\n                // There was, so go ahead and call it\n                return origHookGet(el);\n            }\n            else\n            {\n                // No previous function, return undefined to have jQuery\n                // take care of retrieving the value\n                return undefined;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Remove formatting, and return as number.\n\t\t\tif( el.value === '' ) return '';\n\n\t\t\t// Convert to a number.\n\t\t\tnum = +(el.value\n\t\t\t\t.replace( data.regex_dec_num, '' )\n\t\t\t\t.replace( data.regex_dec, '.' ));\n\n\t\t\t// If we've got a finite number, return it.\n\t\t\t// Otherwise, simply return 0.\n\t\t\t// Return as a string... thats what we're\n\t\t\t// used to with .val()\n\t\t\treturn ''+( isFinite( num ) ? num : 0 );\n\t\t}\n\t};\n\n\t/**\n\t * A valhook which formats a number when run against an input\n\t * which has been tagged by the number formatter.\n\t *\n\t * @param object el\t\t: The raw DOM element (input element).\n\t * @param float\t\t\t: The number to set into the value field.\n\t *\n\t * @return mixed : Returns the value that was written to the element,\n\t *\t\t\t\t   or undefined to let jQuery handle it normally.\n\t */\n\t$.valHooks.text.set = function( el, val )\n\t{\n\t\t// Get the element, and its data.\n\t\tvar $this\t= $(el),\n\t\t\tdata\t= $this.data('numFormat');\n\n\t\t// Does this element have our data field?\n\t\tif( !data )\n\t\t{\n\n\t\t    // Check if the valhook function already exists\n\t\t    if( $.isFunction( origHookSet ) )\n\t\t    {\n\t\t        // There was, so go ahead and call it\n\t\t        return origHookSet(el,val);\n\t\t    }\n\t\t    else\n\t\t    {\n\t\t        // No previous function, return undefined to have jQuery\n\t\t        // take care of retrieving the value\n\t\t        return undefined;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Otherwise, don't worry about other valhooks, just run ours.\n\t\t\treturn el.value = $.number( val, data.decimals, data.dec_point, data.thousands_sep );\n\t\t}\n\t};\n\n\t/**\n\t * The (modified) excellent number formatting method from PHPJS.org.\n\t * http://phpjs.org/functions/number_format/\n\t *\n\t * @modified by Sam Sehnert (teamdf.com)\n\t *\t- don't redefine dec_point, thousands_sep... just overwrite with defaults.\n\t *\t- don't redefine decimals, just overwrite as numeric.\n\t *\t- Generate regex for normalizing pre-formatted numbers.\n\t *\n\t * @param float number\t\t\t: The number you wish to format, or TRUE to use the text contents\n\t *\t\t\t\t\t\t\t\t  of the element as the number. Please note that this won't work for\n\t *\t\t\t\t\t\t\t\t  elements which have child nodes with text content.\n\t * @param int decimals\t\t\t: The number of decimal places that should be displayed. Defaults to 0.\n\t * @param string dec_point\t\t: The character to use as a decimal point. Defaults to '.'.\n\t * @param string thousands_sep\t: The character to use as a thousands separator. Defaults to ','.\n\t *\n\t * @return string : The formatted number as a string.\n\t */\n\t$.number = function( number, decimals, dec_point, thousands_sep ){\n\t\t// Set the default values here, instead so we can use them in the replace below.\n\t\tthousands_sep\t= (typeof thousands_sep === 'undefined') ? ',' : thousands_sep;\n\t\tdec_point\t\t= (typeof dec_point === 'undefined') ? '.' : dec_point;\n\t\tdecimals\t\t= !isFinite(+decimals) ? 0 : Math.abs(decimals);\n\n\t\t// Work out the unicode representation for the decimal place and thousand sep.\n\t\tvar u_dec = ('\\\\u'+('0000'+(dec_point.charCodeAt(0).toString(16))).slice(-4));\n\t\tvar u_sep = ('\\\\u'+('0000'+(thousands_sep.charCodeAt(0).toString(16))).slice(-4));\n\n\t\t// Fix the number, so that it's an actual number.\n\t\tnumber = (number + '')\n\t\t\t.replace('\\.', dec_point) // because the number if passed in as a float (having . as decimal point per definition) we need to replace this with the passed in decimal point character\n\t\t\t.replace(new RegExp(u_sep,'g'),'')\n\t\t\t.replace(new RegExp(u_dec,'g'),'.')\n\t\t\t.replace(new RegExp('[^0-9+\\-Ee.]','g'),'');\n\n\t\tvar n = !isFinite(+number) ? 0 : +number,\n\t\t    s = '',\n\t\t    toFixedFix = function (n, decimals) {\n\t\t        var k = Math.pow(10, decimals);\n\t\t        return '' + Math.round(n * k) / k;\n\t\t    };\n\n\t\t// Fix for IE parseFloat(0.55).toFixed(0) = 0;\n\t\ts = (decimals ? toFixedFix(n, decimals) : '' + Math.round(n)).split('.');\n\t\tif (s[0].length > 3) {\n\t\t    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, thousands_sep);\n\t\t}\n\t\tif ((s[1] || '').length < decimals) {\n\t\t    s[1] = s[1] || '';\n\t\t    s[1] += new Array(decimals - s[1].length + 1).join('0');\n\t\t}\n\t\treturn s.join(dec_point);\n\t}\n\n})(jQuery);\n","(function() {\n\n  class Total {\n    constructor($filter) {\n      this.restrict = 'E';\n      this.scope = false;\n      this.replace = true;\n      this.$filter = $filter;\n    }\n\n    template(el, attrs) {\n      if (attrs.expr[0] === \"'\")\n        return `<span>${ attrs.expr.substring(1, attrs.expr.length - 1) }</span>`;\n      else\n        return `<span ng-bind=\"total$${attrs.field}|number:2\"></span>`;\n    }\n\n    link(scope, element, attrs, controller) {\n      if (attrs.expr[0] !== \"'\")\n        scope.$watch(`records`, (newValue) => {\n          let total = 0;\n          newValue.map((r) => total += parseFloat(r[attrs.field]));\n          scope['total$' + attrs.field] = total;\n          scope.parent['total$' + scope.fieldName + '$' + attrs.field] = total;\n        });\n    }\n  }\n\n  Katrid.UI.uiKatrid.directive('ngTotal', ['$filter', Total]);\n\n})();\n","(function () {\n\n  class Dashboard extends Katrid.UI.Views.ClientView {\n    async render() {\n      // get the linked view for the client action\n      let model = new Katrid.Services.Model('ir.action.client');\n      let res = await model.rpc('get_view', [this.action.info.id]);\n      if (res.content) {\n        return Katrid.Core.$compile(res.content)(this.action.scope);\n      }\n    }\n  }\n\n  class DashboardComponent extends Katrid.UI.Widgets.Component {\n    constructor($compile) {\n      super();\n      this.$compile = $compile;\n      this.restrict = 'E';\n      this.scope = false;\n    }\n\n    async link(scope, el, attrs, controller) {\n      let dashboardId = attrs.dashboardId;\n    }\n  }\n\n\n  let dataGroup = function (data, groups, total) {\n    let res = [];\n    let row = data[0];\n    let x = [];\n    let grps = {};\n    let c = 0;\n\n    for (let group of groups) {\n      let g = [];\n\n      if (c === 0)\n        g.push(groups[0]);\n\n      for (let row of data) {\n        let v = row[group];\n        if ((c > 0) && !(v in grps)) {\n          g = [v];\n          grps[v] = g;\n          for (let z of x)\n            g.push(0);\n        } else if (c > 0)\n          g = grps[v];\n        if (c > 0)\n          g[x.indexOf(row[groups[0]])] = row[total || 'total'] || 0;\n        else if (!g.includes(v))\n          g.push(v);\n      }\n      if (c === 0) {\n        x = g;\n        grps[groups[0]] = g;\n      } else {\n\n      }\n      c++;\n    }\n    res = Object.values(grps);\n    console.log(res);\n    return res;\n  };\n\n\n  class ChartComponent extends Katrid.UI.Widgets.Component {\n    constructor() {\n      super();\n    }\n\n    async link(scope, el, attrs) {\n      let res, chart, sql;\n\n      // find by a query child element\n      let q = el.find('query');\n      if (q.length) {\n        q.remove();\n        sql = q.text();\n      }\n\n      console.log('init chart');\n\n      let groups;\n      if (attrs.groups)\n        groups = attrs.groups.split(',');\n\n      let observe = async (url) => {\n\n        if (sql)\n          res = await Katrid.Services.Query.executeSql(sql);\n        else {\n          res = await fetch(url).then(res => res.json());\n        }\n        console.log(url);\n\n        let data = res.data;\n        let cfg = {\n          bindto: el[0],\n          data: {},\n          color: {\n            pattern: Katrid.UI.Dashboard.colorPatterns,\n          },\n        };\n\n        let hasData = false;\n\n        let type = el.attr('type');\n\n        if (type)\n          cfg.data.type = type;\n\n        if (groups) {\n          data = dataGroup(data, groups);\n          let vals = [];\n          for (let i = 1; i < data.length; i++)\n            vals.push(data[i][0]);\n          hasData = true;\n        }\n        else if (_.isArray(data) && data.length) {\n          let cols = Object.keys(data[0]);\n          cfg.data.columns = data.map(obj => [obj[cols[0]], obj[cols[1]]]);\n          hasData = true;\n        }\n\n        if (hasData)\n          chart = c3.generate(cfg);\n      };\n\n      if (attrs.urlParams) {\n        let urlParams = attrs.urlParams;\n        // TODO add list support\n        scope.$watch(attrs.urlParams, observe);\n      } else\n        observe();\n      attrs.$observe('url', observe);\n    }\n  }\n\n\n  class Query extends Katrid.UI.Widgets.Component {\n    constructor() {\n      super();\n      this.priority = 200;\n      this.scope = false;\n    }\n\n    link(scope, el, attrs) {\n      let ds = new DataSource(el, scope);\n      el.remove();\n      return;\n      if (!attrs.name)\n        throw Error('Query name attribute is required!');\n      let instance = scope[attrs.name] = {loading: false, data: null};\n      // find query by url\n      let url = el.data('url');\n      if (url) {\n        console.log('find query by url', url);\n        $.get(url)\n        .then(res => {\n          instance.loading = false;\n          let data = res.data.map((row) => (_.object(res.fields, row)));\n          scope.$apply(() => instance.data = data);\n        });\n        return;\n      }\n\n      let r;\n      let sqlQuery = el.html();\n      let inMemory = 'inMemory' in attrs;\n      if (inMemory) {\n        let dataBind = el.data('bind');\n        let dataBindField = el.data('bind-field');\n        if (dataBind) {\n          scope.$parent.$watch(dataBind, function (newValue, oldValue) {\n            if (_.isArray(newValue) && newValue.length && _.isObject(newValue[0]))\n              console.log(alasql(sqlQuery, [newValue]));\n          });\n        } else if (dataBindField) {\n          // add watcher for the bind fields\n          let fnBind = function (newValue, oldValue) {\n            let fieldLog = scope.dataSource.$fieldLog[dataBindField];\n            if (fieldLog) {\n              let data = fieldLog.value;\n\n              if (_.isArray(data) && data.length && _.isObject(data[0])) {\n                instance = alasql(sqlQuery, [data]);\n              }\n            }\n          };\n          if (_.isString(dataBindField))\n            dataBindField = [dataBindField];\n          for (let field of dataBindField)\n            scope.$parent.$watch('$fieldLog.' + field + '.count', fnBind);\n        }\n      } else {\n        instance.loading = true;\n        if (_.isUndefined(attrs.url))\n          r = Katrid.Services.Query.read(attrs.queryId);\n        else\n          r = $.get(attrs.url);\n        r.then(res => {\n          instance.loading = false;\n          let data = res.data.map((row) => (_.object(res.fields, row)));\n          scope.$apply(() => instance.data = data);\n        });\n      }\n      el.remove();\n    }\n  }\n\n\n  Katrid.Actions.ClientAction.register('dashboard', Dashboard);\n\n  Katrid.UI.uiKatrid.directive('dashboard', ['$compile', DashboardComponent]);\n  Katrid.UI.uiKatrid.directive('chart', ChartComponent);\n  Katrid.UI.uiKatrid.directive('query', Query);\n\n\n  class Field {\n    constructor(el) {\n      this.el = el;\n    }\n\n    th() {\n      let caption = this.el.attr('caption') || this.el.attr('name');\n      let cls = this.el.attr('class');\n      let title = this.el.attr('header-title');\n      let attrs = '';\n      if (!title)\n        title = '';\n      let headerClick = this.el.attr('on-header-click');\n      if (cls)\n        attrs += 'class =\"' + cls + '\"';\n      if (headerClick)\n        attrs += ' ng-click=\"' + headerClick + '\"';\n      return `<th title=\"${title}\" ${attrs}>${caption}</th>`;\n    }\n\n    td() {\n      let format = this.el.attr('format');\n      if (format) {\n        format = '|' + format;\n        console.log('format', format);\n      } else\n        format = '';\n      let title = this.el.attr('title');\n      if (!title)\n        title = '';\n      let ngClass = this.el.attr('ng-class');\n      let cls = this.el[0].className;\n      let content = this.el.html();\n      if (!content)\n        content = `\\${ record.${this.name}${format} }`;\n      return `<td title='${title}' class=\"${cls}\">${content}</td>`;\n    }\n\n    tfoot() {\n      let total = this.total;\n      if (total)\n        total = '${grid.total(\"' + this.name + '\")}';\n      else if (this.footer)\n        total = this.footer;\n      else\n        total = '';\n      let cls = this.el[0].className;\n      return `<td class=\"${cls}\">${total}</td>`;\n    }\n\n    get name() {\n      return this.el.attr('name');\n    }\n\n    get footer() {\n      return this.el.attr('footer');\n    }\n\n    get total() {\n      return this.el.attr('total');\n    }\n  }\n\n\n  Katrid.UI.uiKatrid.directive('tableView', () => ({\n    restrict: 'E',\n    scope: false,\n    template(el, attrs) {\n      let fields = [];\n      for (let fld of el.find('field'))\n        fields.push(new Field($(fld)));\n      return Katrid.app.getTemplate('dashboard.table.jinja2', {fields, el, attrs});\n    }\n  }));\n\n\n  class DataSource {\n    constructor(el, scope) {\n      this.$el = el;\n      this.controls = [];\n      this.$counter = 0;\n      this.$scope = scope;\n      this.name = el.attr('name');\n      if (this.name)\n        scope[this.name] = this;\n      this.sql = this.$el.html();\n      this.url = el.data('url');\n      setTimeout(() => this.execute(), 100);\n    }\n\n    async execute() {\n      this.$loading = true;\n      try {\n        let res;\n        if (this.url) {\n          res = await fetch(this.url)\n          .then(res => res.json());\n        } else if (this.sql)\n          res = await Katrid.Services.Query.executeSql(this.sql);\n        this.$counter++;\n        this.data = res.data;\n        this.$scope.$apply();\n        this.onChange();\n      } finally {\n        this.$loading = false;\n      }\n    }\n\n    onChange() {\n      for (let control of this.controls)\n        control.$render(this.data);\n    }\n\n  }\n\n\n  class DashboardWidget {\n    constructor(opts) {\n      if (_.isString(opts.el))\n        this.$el = $(opts.el);\n      else\n        this.$el = opts.el;\n      this.$scope = opts.scope;\n      this.$sourceScope = opts.sourceScope || opts.scope;\n      this.$loading = false;\n      this.create(opts);\n\n      if (_.isString(this.dataSource)) {\n        let ds = this.$sourceScope[this.dataSource];\n        if (ds) {\n          ds.controls.push(this);\n          if (ds.$counter)\n            this.$render(ds.data);\n        }\n      }\n\n    }\n\n    create(opts) {\n      this.dataSource = opts.dataSource || this.$el.data('source');\n      this.caption = opts.caption || this.$el.attr('caption');\n    }\n\n    $render(data) {\n\n    }\n  }\n\n\n  class Chart extends DashboardWidget {\n    constructor(opts) {\n      super(opts);\n      this.backButton = $(`<button style=\"position: absolute; left: 0; top: 0;\" class=\"btn btn-outline-secondary btn-sm back-button\">${_.gettext('Back')}</button>`);\n      this.backButton.hide();\n      this.$el.prepend(this.backButton);\n    }\n\n    groupBy(data, group, totals) {\n      if (data.length === 0)\n        return [];\n      let res = [];\n      let firstRow = data[0];\n      let sql = 'select ';\n      let groups = group;\n      if (_.isArray(groups))\n        groups = groups.join(',');\n      else if (_.isNumber(group))\n        groups = Object.keys(firstRow)[group];\n      sql += groups;\n      if (_.isArray(totals))\n        for (let total of totals)\n          sql += ',' + 'sum(' + total + ') as ' + total;\n      else if (_.isString((totals)))\n        sql += `,sum(${totals}) as ${totals}`;\n      else if (_.isNumber(totals)) {\n        totals = Object.keys(firstRow)[totals];\n        sql += ',sum(' + totals + ') as ' + totals;\n      }\n      sql += ' from ? group by ';\n      sql += groups;\n      console.log(sql);\n      res = alasql(sql, [data]);\n      return res;\n    }\n\n    create(opts) {\n      super.create(opts);\n      this.x = opts.x;\n      this.y = opts.y;\n      this.keys = opts.keys;\n      this.type = opts.type;\n      this.axis = opts.axis;\n      this.legend = opts.legend;\n      this.onclick = opts.onclick;\n      this.columns = opts.columns;\n      this.grid = opts.grid;\n      this.labels = opts.labels;\n      this.pie = opts.pie;\n\n      if (!this.columns && !this.keys && _.isUndefined(this.x) && _.isUndefined(this.y)) {\n        this.x = 0;\n        this.y = 1;\n      }\n    }\n\n    $render(data) {\n      this.$data = data;\n      if (this.columns)\n        this.$columns = this.columns;\n      else\n        this.$columns = this.groupBy(data, this.x, this.y).map(obj => Object.values(obj));\n\n      let size = {\n        width: this.$el.parent().width(),\n      };\n\n      this.$chart = c3.generate({\n        bindto: this.$el[0],\n        data: {\n          columns: this.$columns,\n          type: this.type,\n          onclick: this.onclick,\n          labels: this.labels,\n        },\n        color: {\n          pattern: ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5']\n        },\n        pie: this.pie,\n        size,\n        grid: this.grid,\n        legend: this.legend,\n        axis: this.axis,\n      });\n\n      this.$chart.$chart = this;\n    }\n\n    query(sql, params) {\n      return alasql(sql, params);\n    }\n  }\n\n\n  class GridView extends DashboardWidget {\n    constructor(opts) {\n      super(opts);\n      this._groupBy = [];\n      let groupBy = this.$el.attr('group-by');\n      if (groupBy)\n        this._groupBy = groupBy.split(',');\n      this.totals = [];\n\n\n      this.fields = [];\n      for (let fld of this.$el.find('field')) {\n        let field = new Field($(fld));\n        this.fields.push(field);\n        if (field.total)\n          this.totals.push(field.name);\n      }\n\n      this.$scope.grid = this;\n\n      let templ = Katrid.app.getTemplate('dashboard.grid.jinja2', {\n        self: this,\n        fields: this.fields\n      });\n      templ = Katrid.Core.$compile(templ)(this.$scope);\n      this.$el.html(templ);\n    }\n\n    get groupBy() {\n      return this._groupBy;\n    }\n\n    set groupBy(groupBy) {\n      this._groupBy = groupBy;\n      if (this._lastData)\n        this.$render(this._lastData);\n    }\n\n    total(attr) {\n      console.log('calc attr', attr);\n      let r = 0;\n      if (this._lastData)\n        for (let row of this._lastData)\n          r += row[attr];\n      return r;\n    }\n\n    $render(data) {\n      // render loaded data\n      this._lastData = data;\n      if (!data)\n        data = [];\n      if (this.groupBy.length) {\n        data = groupBy(data, this.groupBy, this.totals, this.fields[0].name);\n      }\n      this.$scope.records = this._renderGroup(data);\n    }\n\n    _renderGroup(data) {\n      let r = [];\n      for (let row of data) {\n        r.push(row);\n        if (row.$group)\n          r = r.concat(this._renderGroup(row.$children));\n      }\n      return r;\n    }\n  }\n\n  function groupBy(data, member, totals, to) {\n    let r = {};\n    for (let row of data) {\n      let v = row[member];\n      let group = r[v];\n      if (!group) {\n        group = r[v] = {$children: []};\n        for (let total of totals)\n          group[total] = 0;\n      }\n      group.$children.push(row);\n      group.$group = true;\n      group[to] = v;\n      for (let total of totals)\n        group[total] += row[total];\n    }\n    return Object.values(r);\n  }\n\n  class GridRow {\n    constructor(grid, row, el) {\n      this.row = row;\n    }\n\n  }\n\n  class GroupRow extends GridRow {\n\n  }\n\n\n  Katrid.UI.uiKatrid.directive('gridView', () => ({\n    restrict: 'E',\n    scope: {},\n    // template(el, attrs) {\n    //   let fields = [];\n    //   for (let fld of el.find('field'))\n    //     fields.push(new Field($(fld)));\n    //   let query = el.find('query');\n    //   if (query.length)\n    //     query = query[0].outerHTML;\n    //   else\n    //     query = '';\n    //   return Katrid.app.getTemplate('dashboard.grid.jinja2', {fields, el, attrs, query});\n    // },\n\n    async link(scope, el, attrs) {\n      let grid = new GridView({el, scope, sourceScope: scope.$parent});\n      return;\n      scope.loading = false;\n      let res, sql;\n      let query = el.find('query');\n      if (attrs.source) {\n        console.log('data source is', attrs.source);\n      } else if (query.length) {\n        sql = query.text();\n        query.remove();\n\n        if (sql) {\n          scope.loading = true;\n          scope.$apply();\n          res = await Katrid.Services.Query.executeSql(sql);\n          scope.loading = false;\n        }\n\n        if (res) {\n          scope.records = res.data;\n          scope.$apply();\n        }\n      }\n    }\n  }));\n\n\n  Katrid.UI.uiKatrid.filter('duration', () => {\n    return (input, unit, format) => {\n      if (!format)\n        format = 'HH:mm:ss';\n      if (input) {\n        if ((unit === 'seconds') && (_.isString(input)))\n          input = parseInt(input);\n        let fmt = moment.duration(input, unit).format(format);\n        if (fmt.length === 5)\n          fmt = '00:' + fmt;\n        return fmt;\n      }\n      return input;\n    }\n  });\n\n\n  Katrid.UI.Dashboard = {\n    Chart,\n    colorPatterns: [\n      '#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5',\n      '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'\n    ],\n  };\n\n\n})();\n","(function() {\n\n  class Telegram {\n    static async export(report, format) {\n      console.log('export telegram');\n      let templ = Katrid.app.$templateCache.get('reportbot.dialog.contacts');\n      let modal = $(templ);\n      $('body').append(modal);\n\n      let sel = modal.find('#id-reportbot-select-contacts');\n      let partners = new Katrid.Services.Model('res.partner');\n      let res = await partners.post('get_telegram_contacts');\n      if (res) {\n        if (res)\n          res.map(c => sel.append(`<option value=\"${ c[0] }\">${ c[1] }</option>`));\n        sel.select2();\n      }\n      modal.find('#id-btn-ok').click(async () => {\n\n        let svc = new Katrid.Services.Model('telegram.pending');\n        format = 'pdf';\n        const params = report.getUserParams();\n        let res = svc.post('export_report', { args: [report.info.id], kwargs: { contacts: sel.val(), format, params } });\n        if (res.ok) console.log('ok');\n      });\n      modal.modal();\n      return true;\n\n    }\n  }\n\n  Katrid.Reports.Telegram = Telegram;\n})();\n","(function () {\n\n  class QueryManager {\n    constructor(app) {\n      this.app = app;\n      this.$scope = app.$scope.$new();\n      this.$scope.queryChange = (query) => this.queryChange(query);\n      this.$scope.search = {};\n      let me = this;\n      this.action = this.$scope.action = {\n        context: {},\n        views: {},\n        async saveSearch(search) {\n          let svc = new Katrid.Services.Model('ui.filter');\n          let data = {};\n          Object.assign(data, search);\n          data.query = me.$scope.query.id;\n          if (search.name === null) {\n            search.name = prompt('Query name', 'current query namne');\n            search.is_default = false;\n            search.is_shared = true;\n          }\n          if (search.name)\n            await svc.write([data])\n        },\n        setSearchParams(params) {\n          me.$scope.search.params = params;\n          me.refresh(me.query);\n        },\n        switchView(viewType) {\n          console.log('set view type', viewType);\n        },\n        orderBy(field) {\n          if (me.$scope.ordering === field)\n            me.$scope.reverse = !me.$scope.reverse;\n          else {\n            me.$scope.ordering = field;\n            me.$scope.reverse = false;\n          }\n        }\n      };\n    }\n\n    getFilter(field) {\n      if (field.type === 'DateField')\n        return \"|date:'shortDate'\";\n      else if (field.type === 'DateTimeField')\n        return \"|date:'short'\";\n      else if (field.type === 'IntegerField')\n        return \"|number:0\";\n      return \"\";\n    }\n\n    getSearchView(query) {\n      let s;\n      if (query.params)\n        s = query.params;\n      else {\n        s = `<search>`;\n        for (let f of query.fields)\n          s += `<field name=\"${f.name}\"/>`;\n        s += '</search>';\n      }\n      // prepare fields to view\n      let fields = {};\n      for (let f of query.fields)\n        fields[f.name] = Katrid.Data.Fields.Field.fromInfo(f);\n      this.fields = fields;\n      return {content: s, fields};\n    }\n\n    async queryChange(query) {\n      this.$scope.search = {\n        viewMoreButtons: true,\n      };\n      this.query = query;\n      let res = await this.refresh(query);\n      // render the result on table\n      // transform result to list of objects\n      query.fields = res.fields;\n      this.action.search = this.getSearchView(query);\n      this.action.fieldList = Object.values(this.fields);\n      this.$scope.action.views.search = this.$scope.action.search;\n      this.renderSearch();\n      this.renderTable(res);\n      this.$scope.$apply();\n    }\n\n    async refresh(query) {\n      let res = await Katrid.Services.Query.read({ id: query.id, details: true, params: this.$scope.search.params });\n      for (let f of res.fields)\n        f.filter = this.getFilter(f);\n      let _toObject = (fields, values) => {\n        let r = {}, i = 0;\n        for (let f of fields) {\n          r[f.name] = values[i];\n          i++;\n        }\n        return r;\n      };\n      this.$scope.records = res.data.map(row => _toObject(res.fields, row));\n      this.$scope.$apply();\n      return res;\n    }\n\n    renderSearch() {\n      let el = this.app.getTemplate('query.manager.search.jinja2');\n      el = Katrid.Core.$compile(el)(this.$scope);\n      this.$element.find('#query-search-view').html(el);\n    }\n\n    async render() {\n      let templ = this.app.getTemplate('query.manager.jinja2');\n      templ = Katrid.Core.$compile(templ)(this.$scope);\n      this.$element = templ;\n      let queries = await Katrid.Services.Query.all();\n      this.$scope.queries = queries.data;\n      this.app.$element.html(templ);\n      this.$scope.$apply();\n    }\n\n    renderTable(data) {\n      let templ = this.app.getTemplate('query.manager.table.jinja2', {\n        self: this, query: this.$scope.query, records: this.records, fields: Object.values(this.fields),\n      });\n      templ = Katrid.Core.$compile(templ)(this.$scope);\n      initColumn(templ);\n      this.$element.find('#query-manager-result').html(templ);\n    }\n  }\n\n  // register the plugin\n  Katrid.Core.plugins.register((app) => {\n    // register event listener\n    $(app).on('hashchange', (event, hash) => {\n      if (hash.startsWith('#/app/query.manager/')) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        app.$scope.$parent.currentMenu = { name: 'Query Manager' };\n\n        let q = new QueryManager(app);\n        q.render();\n      }\n    });\n  });\n\n\n  function initColumn(table) {\n    // $('.checkbox-menu').sortable();\n  }\n\n  function reorder(index1, index2) {\n    $('table tr').each(function () {\n      var tr = $(this);\n      var td1 = tr.find(`td:eq(${index1})`);\n      var td2 = tr.find(`td:eq(${index2})`);\n      td1.detach().insertAfter(td2);\n    });\n  }\n\n\n})();\n","(function () {\n\n  class FileManager {\n    constructor(opts) {\n      this.$element = opts.el;\n      this.$scope = opts.scope;\n      this.service = this.$element.attr('service');\n\n      $.get(this.service)\n      .then(res => {\n        this.$scope.dirs = res.content.filter(obj => obj.type === 'dir');\n        this.$scope.files = res.content.filter(obj => obj.type === 'file');\n        this.$scope.items = res.content;\n        this.$scope.levels[this.$scope.level] = this.$scope.items;\n        this.$scope.$apply();\n      });\n    }\n\n    getPath(item) {\n      let url = item.name;\n      let parent = item.parent;\n      while (parent) {\n        url = parent.name + '/' + url;\n        parent = parent.parent;\n      }\n      return url;\n    }\n\n    expand(item) {\n      let url = this.getPath(item);\n      url = this.service + '?path=' + url;\n      $.get(url)\n        .then(res => {\n          this.$scope.items = res.content;\n          this.$scope.dirs = res.content.filter(obj => obj.type === 'dir');\n          this.$scope.files = res.content.filter(obj => obj.type === 'file');\n          res.content.map(obj => obj.parent = item);\n          this.$scope.levels[this.$scope.level] = this.$scope.items;\n          this.$scope.$apply();\n        });\n    }\n  }\n\n  Katrid.UI.uiKatrid.directive('fileManager', () => ({\n    restrict: 'E',\n    scope: {},\n    templateUrl: 'file-manager.jinja2',\n    link(scope, el) {\n      scope.level = 0;\n      scope.levels = {};\n      let fm = new FileManager({ el, scope });\n      scope.expand = item => {\n        scope.level++;\n        scope.currentItem = item;\n        fm.expand(item);\n        scope.currentPath = fm.getPath(item);\n      };\n\n      scope.backTo = level => {\n        scope.level = level;\n        console.log('back to', level);\n        scope.items = scope.levels[scope.level];\n        scope.dirs = scope.items.filter(obj => obj.type === 'dir');\n        scope.files = scope.items.filter(obj => obj.type === 'file');\n        scope.currentPath = fm.getPath(scope.items[0]);\n      };\n\n      scope.uploadFile = file => {\n        console.log('current path', scope.currentPath);\n        Katrid.Services.Upload.uploadTo('/pwapec/file-manager/upload/?path=' + (scope.currentPath || ''), file)\n          .then(() => {\n            fm.expand(scope.currentItem);\n          });\n      };\n    }\n  }));\n\n})();\n"]}