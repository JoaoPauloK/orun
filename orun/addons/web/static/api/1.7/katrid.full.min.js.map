{"version":3,"sources":["../../../../../../js/src/core/index.js","../../../../../../js/src/designer/index.js","../../../../../../js/src/core/katrid.js","../../../../../../js/src/core/app.js","../../../../../../js/src/utils/index.js","../../../../../../js/src/utils/i18n.js","../../../../../../js/src/io/services.js","../../../../../../js/src/data/index.js","../../../../../../js/src/data/record.js","../../../../../../js/src/data/datasource.js","../../../../../../js/src/data/fields.js","../../../../../../js/src/ui/index.js","../../../../../../js/src/ui/actions.js","../../../../../../js/src/ui/actions.client.js","../../../../../../js/src/ui/actions.window.js","../../../../../../js/src/ui/templates.js","../../../../../../js/src/ui/actions.report.js","../../../../../../js/src/ui/reports.js","../../../../../../js/src/ui/widgets.js","../../../../../../js/src/ui/views.js","../../../../../../js/src/ui/views.info.js","../../../../../../js/src/ui/grid.js","../../../../../../js/src/ui/filters.js","../../../../../../js/src/ui/search.js","../../../../../../js/src/ui/components.js","../../../../../../js/src/ui/fields.js","../../../../../../js/src/ui/tabs.js","../../../../../../js/src/ui/fields.date.js","../../../../../../js/src/ui/mail.js","../../../../../../js/src/ui/ui.templ.js","../../../../../../js/src/ui/numpad.js","../../../../../../js/src/ui/code-editor.js","../../../../../../js/src/ui/dialogs.js","../../../../../../js/src/ui/fields.foreignkey.js","../../../../../../js/src/ui/fields.status.js","../../../../../../js/src/ui/fields.sortable.js","../../../../../../js/src/ui/jquery.number.js","../../../../../../js/src/ui/grid.totals.js","../../../../../../js/src/ui/dashboard.js","../../../../../../js/src/ui/telegram.js","../../../../../../js/src/plugins/query.manager.js","../../../../../../js/src/plugins/file-manager.js"],"names":["Katrid","Core","_","emptyText","LocalSettings","[object Object]","localSettings","searchMenuVisible","parseInt","localStorage","value","_isMobile","check","a","navigator","userAgent","vendor","window","opera","test","substr","settings","additionalModules","server","servicesProtocol","io","connect","ui","isMobile","dateInputMask","defaultView","goToDefaultViewAfterCancelInsert","goToDefaultViewAfterCancelEdit","horizontalForms","services","choicesPageLimit","speech","enabled","plugins","callbacks","app","cb","this","callback","push","socketio","document","domain","location","port","Menu","$","on","event","preventDefault","target","actionClick","attr","parent","hide","children","removeAttr","hash","loadPage","WebApplication","opts","menu","actionManager","Actions","ActionManager","title","self","loadingTimeout","overlayTimeout","loadingMsg","overlay","setTimeout","show","clearTimeout","ajaxStart","ajaxStop","item","data","clear","each","idx","el","params","menu_id","action","param","trigger","addEventListener","fetch","templates","then","res","text","ngApp","angular","module","run","$templateCache","UI","Templates","config","$locationProvider","$interpolateProvider","hashPrefix","startSymbol","endSymbol","controller","$scope","$compile","$location","$element","init","element","bootstrap","reset","evt","Event","isPropagationStopped","currentMenu","startsWith","split","URLSearchParams","k","v","entries","$parent","id","name","onHashChange","tpl","context","get","endsWith","ctx","Object","assign","env","render","Application","Error","login","async","username","password","multidb","db","Services","post","redirect","error","messages","type","message","$apply","href","$hashId","mixin","obj","iterable","member","r","row","isNumber","Number","isNaN","length","sum","call","globals","i18n","languageCode","formats","catalog","initialize","plural","pluralidx","n","boolean","count","gettext","ngettext","gettext_noop","pgettext","npgettext","interpolate","get_format","sprintf","initialized","merge","Array","from","map","key","s","singular","indexOf","fmt","named","replace","match","String","slice","shift","formatType","requestManager","requestId","requests","reqId","def","Deferred","console","log","isString","JSON","parse","resolve","Service","url","scope","URL","searchParams","append","response","$fetch","method","credentials","body","stringify","headers","content-type","json","Settings","emit","channel","service","args","methName","rpcName","constructor","jsonrpc","Math","floor","random","request","req-id","req-method","Promise","reject","Accept","Content-Type","result","warn","info","forEach","msg","Dialogs","Alerts","success","catch","Model","kwargs","isArray","ids","fields","Data","Fields","Field","fromArray","fieldList","values","views","keys","ViewInfo","_prepareFields","field","term","status","responseText","alert","grouping","meth","open","isObject","join","Query","super","details","with_desc","as_dict","rpc","sql","model","offset","View","Attachments","destroy","file","FormData","recordId","f","files","ajax","processData","contentType","done","attachments","Auth","$post","Upload","form","record","dataSource","refresh","Record","state","raw","pending","modified","submitted","$record","pk","RecordState","destroyed","setModified","splice","rec","created","$setDirty","_pendingChanges","fieldName","addChild","child","oldValue","newValue","propKey","fieldByName","toJSON","compare","onChange","$encode","_info","dispatchEvent","jQuery","extend","toObject","initClass","createRecord","Proxy","receiver","OneToManyField","set","Reflect","SubRecords","recs","DataSourceState","inserting","browsing","editing","loading","inactive","DEFAULT_REQUEST_INTERVAL","DataSource","readonly","$modifiedRecords","_recordIndex","recordCount","loadingRecord","_masterSource","_pageIndex","pageLimit","offsetLimit","requestInterval","pendingRequest","modifiedData","uploading","_state","fieldWatchers","$fieldLog","pageIndex","page","search","_params","_fields","view","loadingAction","_loadingAction","changing","switchView","$emit","save","closest","modal","copy","insert","setValues","records","findById","_page","invalidate","elForm","errorMsgs","elfield","errorType","$error","$name","_validateForm","find","addClass","caption","raiseError","$invalid","errors","formElement","uiKatrid","setFocus","timeout","masterSource","_clearTimeout","limit","req","groups","finally","group","groupings","_loadGroup","index","rows","$params","concat","groupBy","groupName","paramValue","__str__","$expanded","$group","$level","$hasChildren","recordIndex","newIndex","_canceled","master","getModifiedData","_id","ds","ret","deleted","$deleted","undefined","$modified","$modifiedData","_getModified","getNestedData","autoRefresh","$form","validate","beforeSubmit","$eval","write","viewType","$setPristine","$setUntouched","fld","msgs","subField","focus","vals","$created","_getNested","apply","_get","getById","defaultValues","loadDefaults","oldRecs","getDefaults","display_name","defaults","default","ngDefaultValues","default_values","isFunction","isUndefined","fromJSON","Date","_modifiedFields","includes","pendingMasterId","$broadcast","moveBy","p","$children","_chain","collapse","_applyResponse","control","setDirty","$destroy","cols","visible","cssClass","helpText","help_text","required","onchange","nolabel","displayChoices","object","choices","template","list","StringField","fromInfo","$el","attrs","attributes","camelCase","trim","toLowerCase","b","c","toUpperCase","ngReadonly","ngShow","ngIf","ngClass","html","getTemplate","invisible","validAttributes","ngFieldChange","hasChoices","maxLength","max_length","paramTemplate","toString","val","widget","Widgets","defaultCondition","condition","arguments","DateField","moment","format","getAttributes","DateTimeField","NumericField","parseFloat","ForeignKey","TextField","PasswordField","IntegerField","FloatField","DecimalField","decimalPlaces","decimal_places","TimeField","childByName","addRecord","ManyToManyField","XmlField","JsonField","PythonCodeField","BooleanField","ImageField","noImageUrl","ngSrc","ngEmptyImage","emptyImage","keyCode","BACKSPACE","COMMA","DELETE","DOWN","END","ENTER","ESCAPE","HOME","LEFT","PAGE_DOWN","PAGE_UP","PERIOD","RIGHT","SPACE","TAB","UP","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","Action","actionType","_context","$container","addAction","removeAction","remove","empty","act","action_type","dispatchAction","stopPropagation","ctrlKey","breadcrumb","back","isDialog","execute","ViewAction","svc","content","UrlAction","currentAction","mainAction","$attach","refreshBreadcrumb","i","path","oldAction","actionId","actionInfo","createScope","load","$new","_breadcrumb","bc","isLeaf","ClientAction","registry","tag","prototype","Views","ActionView","renderTo","btn","templateUrl","ClientView","WindowAction","viewMode","view_mode","viewModes","$on","onDataStateChange","afterCancel","history","allowedParams","view_type","oldParams","getContext","sel","selection","active_id","active_ids","_currentPath","$$path","_currentParams","$state","go","getCurrentTitle","$$search","confirm","configId","getViewInfo","Window","compile","createNew","searchModes","filter","makeUrl","lastViewType","h","templ","detach","appendTo","loadViews","toolbar","lastUrl","_viewType","destroyChildren","q","parseJSON","arg","expandGroup","collapseGroup","viewAction","confirmation","prompt","_doViewAction","promptValue","doViewAction","action_name","download","createElement","click","currentTarget","ReportAction","dispatchBindingAction","groupHeaderClick","autoReport","ok","Utils","getSetDefaultValueDialog","core","_selection","selectionLength","att","Loader","templateCache","$cache","src","noCache","nunjucks","Environment","autoescape","oldGet","prepare","loadTemplates","PRE_LOADED_TEMPLATES","put","tagName","innerHTML","base","op","templateLst","readTemplates","preProcess","getAttribute","root","DOMParser","parseFromString","firstChild","registerTemplate","tmpl","katridReportViewer","userReport","report","user_report","Reports","renderDialog","_counter","currentReport","currentUserReport","repName","Report","Params","Labels","exact","in","contains","startswith","endswith","gt","lt","between","isnull","filters","groupables","sortables","totals","Telegram","export","container","operation","value1","value2","sorting","xml","dataTypeDict","date","datetime","customizableReport","advancedOptions","label","groupable","sortable","total","autoCreate","modelChoices","getUserParams","dataType","addParam","paramName","Param","flds","aggs","result1","select2","tags","result2","result3","elParams","loaded","userParams","static","containment","start","update","renderFields","renderSorting","renderGrouping","renderParams","Operations","DefaultOperations","CharField","ModelChoices","SelectionField","TypeOperations","secondField","serviceName","multiple","defaultValue","defaultOperation","operations","getOperations","exclude","createControls","operationTemplate","xmlReport","loadFromXml","loadParams","setOperation","Widget","Component","compileButtons","sendFileCounter","sendFile","idSendFile","directive","restrict","transclude","BaseView","getTemplateContext","setContent","btns","buttons","View2","viewInfo","fieldEl","FormView","dialog","headerEl","header","parents","replaceWith","renderField","outerHTML","first","List","$observe","newViews","inline","prepend","$loaded","totalDisplayed","_cachedViews","_changeCount","dataSet","isList","inlineEditor","hasOwnProperty","gridDialog","str","charAt","substring","_incChanges","addItem","$attr","showDialog","edit","cancelChanges","setState","openItem","editItem","select","removeItem","$delete","$set","$setViewValue","$render","pasteData","cache","_queryForeignKeyField","getFieldChoices","items","txt","clipboard","readText","newObj","col","masterChanged","unhook","cancel","fn","me","gridEl","_destroyChildren","rowClick","ngRowClick","options","listOptions","formView","tr","thead","tfoot","ngTrClass","td","th","hasTotal","inplaceEditor","next","deleteRow","delRow","maxDigits","Intl","NumberFormat","maximumSignificantDigits","conditionsLabels","=","!=",">","<","conditionSuffix","like","not like",">=","<=","not in","SearchQuery","searchView","facet","addValue","renderFacets","SearchGroup","change","getParamValues","FacetView","separator","searchString","getDisplayValue","templateValue","SearchObject","display","onRemoveItem","query","loadItem","getParamValue","OR","FacetGroup","oldValues","_ref","_selected","SearchItem","SearchFilter","selected","removeValue","_doChange","SearchFilters","_facet","fromItem","_refresh","facets","SearchGroups","facetGrouping","groupLength","newItem","SearchResult","indent","selectItem","SearchField","_expanded","expandable","expanded","_loadChildren","$items","_value","addFacet","close","$filter","tempFilter","customFilter","fieldChange","conditionChange","controlVisible","isControlVisible","valueChange","searchValue","addCondition","applyFilter","selectAll","customSearchExpanded","SearchView","_viewMoreButtons","getItem","filterGroups","_groupLength","input","prop","fromGroup","fromField","which","move","customGroups","viewMoreButtons","setItem","getByName","subitem","removeClass","distance","fw","abs","prev","applyGroups","getParams","setSearchParams","shouldApply","SearchViewComponent","retrict","default_search","formCount","priority","ctrl","fieldAttributes","sectionAttrs","fcontrol","$ngModelController","$addControl","RegExp","require","nm","ngSum","$watch","$modelValue","bind","ngEnter","$event","ngEsc","Constructor","_enforceFocus","ajaxChoices","_timeout","cfg","allowClear","name_fields","nameFields","searchName","more","results","escapeMarkup","m","e","$viewValue","inputmask","decimal","inputDecimal","alias","groupSeparator","unmaskAsNumber","radixPoint","autoGroup","digitsOptional","placeholder","digits","$parsers","$formatters","toFixed","fromNow","link","accept","reader","FileReader","onload","readAsDataURL","setNow","toISOString","_focus","keypress","keydown","isDate","utc","regex","insertMode","connectWith","cardDraggable","cardItem","_domain","cardGroup","modelName","reorder","disableSelection","tooltip","delay","_pendingOperation","attachment","object_id","ngClick","actions","WIDGET_COUNT","DEFAULT_COLS","SmallIntegerField","templAttrs","wAttrs","spanPrefix","depends","addFieldWatcher","classes","templTag","cls","ngModel","attrName","widgetAttrs","readOnlyClass","_getWidgetAttrs","inner","innerHtml","span","spanTemplate","labelTemplate","widgetTemplate","dep","fieldChangeWatchers","onFieldChange","lbl","_gridEditor","_td","InputWidget","prependIcon","icon","FileField","imgSrc","SortableField","allowOpen","inList","string","integer","float","image","tabs","selectedTab","tab","active","onDeselect","onSelect","addTab","removeTab","newActiveIndex","vertical","isDefined","justified","$parse","heading","elm","tabsetCtrl","disabled","$transcludeFn","tabCtrl","tabContentTransclude","contents","node","hasAttribute","isTabHeading","headingElement","mask","datePicker","calendar","datetimepicker","useCurrent","icons","time","isValid","comments","content_subtype","hideEditor","upload","_sendMesage","showEditor","attachFile","deleteFile","MailComments","BaseTemplate","cssListClass","parentDataSource","showSelector","ths","colHtml","fieldInfo","_widget","createWidget","Boolean","t","gridClass","tbl","renderList","utils","ngChange","buttonClick","num","editor","paths","vs","language","monaco","create","minimap","automaticLayout","getModel","onDidChangeContent","getValue","setValue","Dialog","toastr","WaitDialog","parentAction","dialogTitle","elScope","targetScope","creationName","creation_name","$controller","_shown","foreignkey","newEditItem","allowCreate","formatSelection","allowCreateEdit","noCreateEdit","added","createName","err","parentModal","itemClick","$timeout","helper","$originals","$helper","clone","width","eq","stop","setSelectionRange","rangeStart","rangeEnd","createTextRange","range","moveStart","moveEnd","getSelection","part","pos","stored_range","selectionStart","selectionEnd","createRange","duplicate","expand","setEndPoint","_keydown","codes","188","110","108","109","190","191","192","220","222","221","219","173","187","186","189","shifts","96","49","50","51","52","53","54","55","56","57","48","45","61","91","93","92","59","39","44","46","47","number","decimals","dec_point","thousands_sep","u_dec","charCodeAt","regex_dec_num","regex_dec","is","keydown.format","$this","code","chara","end","setPos","negative","shiftKey","fromCharCode","metaKey","max","isFinite","altKey","keyup.format","paste.format","original","originalEvent","clipboardData","getData","origHookGet","origHookSet","isPlainObject","valHooks","u_sep","pow","round","toFixedFix","expr","dataGroup","x","grps","g","z","register","dashboardId","chart","observe","executeSql","source","bindto","color","pattern","Dashboard","colorPatterns","hasData","columns","c3","generate","urlParams","headerClick","className","footer","controls","$counter","$loading","DashboardWidget","$sourceScope","sourceScope","_groupBy","grid","_lastData","to","_renderGroup","unit","duration","Chart","backButton","firstRow","alasql","y","axis","legend","onclick","labels","pie","$data","$columns","size","$chart","partners","contacts","Designer","BaseDesigner","handles","startMove","moveSelection","stopMove","refreshSelection","deleteSelection","destroyHandles","top","left","_moveSelection","right","bottom","height","addGrabHandles","updateSelection","onSelectionChange","GrabHandleObject","createHandles","designer","dragging","dragObject","DragObject","surface","rect","getBoundingClientRect","handle","bottomLeft","css","middleLeft","topLeft","topRight","middleRight","bottomRight","topCenter","bottomCenter","_y","_x","screenY","screenX","setPointerCapture","pointerId","position","outerHeight","w","outerWidth","setPosition","releasePointerCapture","off","pageY","pageX","createHandle","_setGrabHandle","_dragging","mousedown","dragStart","mouseup","dragEnd","mousemove","drag","button","removeEventListener","queryChange","is_default","is_shared","ordering","reverse","getSearchView","renderSearch","renderTable","read","getFilter","_toObject","queries","all","level","levels","fm","dirs","getPath","currentItem","currentPath","backTo","uploadFile","uploadTo"],"mappings":"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","file":"katrid.full.min.js","sourcesContent":["\n// initialize the katrid namespace\nvar Katrid = {};\n","var Katrid;\n(function (Katrid) {\n    var UI;\n    (function (UI) {\n        var Designer;\n        (function (Designer) {\n            class BaseDesigner {\n                constructor(container) {\n                    this._selection = [];\n                    this.handles = [];\n                    container.addEventListener('keydown', (evt) => {\n                        switch (evt.key) {\n                            case 'ArrowUp':\n                            case 'ArrowRight':\n                            case 'ArrowDown':\n                            case 'ArrowLeft':\n                                this.startMove(evt);\n                                this.moveSelection(evt);\n                                break;\n                        }\n                    });\n                    container.addEventListener('keyup', (evt) => {\n                        switch (evt.key) {\n                            case 'ArrowUp':\n                            case 'ArrowRight':\n                            case 'ArrowDown':\n                            case 'ArrowLeft':\n                                this.stopMove(evt);\n                                this.refreshSelection(evt);\n                                break;\n                        }\n                    });\n                    container.addEventListener('keypress', (evt) => {\n                        if (evt.key === 'Delete') {\n                            evt.stopPropagation();\n                            this.deleteSelection();\n                        }\n                    });\n                }\n                deleteSelection() {\n                    for (let child of this.selection)\n                        child.$delete();\n                    this.destroyHandles();\n                }\n                moveSelection(evt) {\n                    let top = 0, right = 0, bottom = 0, left = 0;\n                    switch (evt.key) {\n                        case 'ArrowUp':\n                            top = -1;\n                            break;\n                        case 'ArrowRight':\n                            left = 1;\n                            break;\n                        case 'ArrowDown':\n                            top = 1;\n                            break;\n                        case 'ArrowLeft':\n                            left = -1;\n                            break;\n                    }\n                    this._moveSelection(top, right, bottom, left);\n                }\n                _moveSelection(top, right, bottom, left) {\n                    for (let sel of this.selection) {\n                        if (top)\n                            sel.top += top;\n                        if (right)\n                            sel.width += right;\n                        if (bottom)\n                            sel.height += bottom;\n                        if (left)\n                            sel.left += left;\n                    }\n                }\n                clearSelection() {\n                    this.destroyHandles();\n                    this.selection = [];\n                }\n                refreshSelection(evt) {\n                    this.selection = this._selection;\n                }\n                updateSelection() {\n                    this.destroyHandles();\n                    for (let sel of this.selection)\n                        this.addGrabHandles(sel);\n                }\n                get selection() {\n                    return this._selection;\n                }\n                set selection(value) {\n                    this._selection = value;\n                    this.updateSelection();\n                    this.onSelectionChange(value);\n                }\n                destroyHandles() {\n                    for (let h of this.handles)\n                        h.destroy();\n                    this.handles = [];\n                }\n                startMove(evt) {\n                    // start keyboard move\n                    this.destroyHandles();\n                }\n                stopMove(evt) {\n                    // stop keyboard move\n                    this.updateSelection();\n                }\n                onSelectionChange(value) {\n                    // on selection change event\n                }\n                addGrabHandles(obj) {\n                    // show grab handles to an object\n                    let handle = new GrabHandleObject(obj.el, this);\n                    handle.createHandles();\n                }\n            }\n            Designer.BaseDesigner = BaseDesigner;\n            class GrabHandleObject {\n                constructor(el, designer) {\n                    this.handles = [];\n                    this.dragging = false;\n                    this.el = el;\n                    this.designer = designer;\n                    // init object drag\n                    this.dragObject = new DragObject(el, designer.surface[0]);\n                }\n                createHandle() {\n                    let h = $('<label class=\"target-handle\"></label>');\n                    this.handles.push(h);\n                    return h;\n                }\n                setPosition() {\n                    let rect = this.el.getBoundingClientRect();\n                    let handle = this.bottomLeft;\n                    handle.css('left', rect.left - 3);\n                    handle.css('top', rect.bottom - 5);\n                    handle = this.middleLeft;\n                    handle.css('left', rect.left - 3);\n                    handle.css('top', rect.bottom - rect.height / 2 - 4);\n                    handle = this.topLeft;\n                    handle.css('left', rect.left - 3);\n                    handle.css('top', rect.top - 3);\n                    handle = this.topRight;\n                    handle.css('left', rect.right - 4);\n                    handle.css('top', rect.top - 3);\n                    handle = this.middleRight;\n                    handle.css('left', rect.right - 4);\n                    handle.css('top', rect.bottom - rect.height / 2 - 4);\n                    handle = this.bottomRight;\n                    handle.css('left', rect.right - 4);\n                    handle.css('top', rect.bottom - 5);\n                    handle = this.topCenter;\n                    handle.css('left', rect.right - rect.width / 2 - 4);\n                    handle.css('top', rect.top - 3);\n                    handle = this.bottomCenter;\n                    handle.css('left', rect.right - rect.width / 2 - 4);\n                    handle.css('top', rect.bottom - 5);\n                }\n                _setGrabHandle() {\n                    let handle = this.topLeft;\n                    let _y, _x;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let pos = el.position();\n                                el.css('left', (pos.left - x).toString() + 'px');\n                                el.css('top', pos.top - y);\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('height', h + y);\n                                el.css('width', (w + x).toString() + 'px');\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.topRight;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let parent = el.parent();\n                                let pos = el.position();\n                                el.css('top', pos.top - y);\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('height', h + y);\n                                el.css('width', w - x);\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].setPointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.bottomRight;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.pageY;\n                        _x = evt.pageX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = _y - evt.pageY;\n                                let x = _x - evt.pageX;\n                                let el = $(this.el);\n                                let parent = el.parent();\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('height', h - y);\n                                el.css('width', w - x);\n                                _y = evt.pageY;\n                                _x = evt.pageX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.middleLeft;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let pos = el.position();\n                                el.css('left', pos.left - x);\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('width', w + x);\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.middleRight;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let pos = el.position();\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('width', w - x);\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.bottomCenter;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let parent = el.parent();\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('height', h - y);\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.topCenter;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let parent = el.parent();\n                                let pos = el.position();\n                                el.css('top', pos.top - y);\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('height', h + y);\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                    handle = this.bottomLeft;\n                    handle.on('pointerdown', (evt) => {\n                        _y = evt.screenY;\n                        _x = evt.screenX;\n                        this.dragging = true;\n                        evt.stopPropagation();\n                        evt.preventDefault();\n                        handle[0].setPointerCapture(evt.pointerId);\n                        let _onmousemove = (evt) => {\n                            evt.preventDefault();\n                            if (this.dragging) {\n                                let y = evt.screenY;\n                                let x = evt.screenX;\n                                y = _y - y;\n                                x = _x - x;\n                                let el = $(this.el);\n                                let pos = el.position();\n                                let h = el.outerHeight();\n                                let w = el.outerWidth();\n                                el.css('height', h - y);\n                                el.css('left', pos.left - x);\n                                el.css('width', w + x);\n                                _y = evt.screenY;\n                                _x = evt.screenX;\n                                this.setPosition();\n                                el[0].dispatchEvent(new Event('designerresizing'));\n                            }\n                        };\n                        let _onmouseup = (evt) => {\n                            handle[0].releasePointerCapture(evt.pointerId);\n                            if (this.dragging) {\n                                evt.preventDefault();\n                                this.dragging = false;\n                                this.el.dispatchEvent(new Event('designerresized'));\n                                handle.off('pointermove');\n                                handle.off('pointerup');\n                            }\n                        };\n                        handle.on('pointermove', _onmousemove);\n                        handle.on('pointerup', _onmouseup);\n                    });\n                }\n                createHandles() {\n                    let handle;\n                    // bottom-left\n                    this.bottomLeft = handle = this.createHandle();\n                    handle.addClass('bottom-left');\n                    this.designer.surface.append(handle);\n                    // middle-left\n                    this.middleLeft = handle = this.createHandle();\n                    handle.addClass('middle-left');\n                    this.designer.surface.append(handle);\n                    // top-left\n                    this.topLeft = handle = this.createHandle();\n                    handle.addClass('top-left');\n                    this.designer.surface.append(handle);\n                    // top-right\n                    this.topRight = handle = this.createHandle();\n                    handle.addClass('top-right');\n                    this.designer.surface.append(handle);\n                    // middle-right\n                    this.middleRight = handle = this.createHandle();\n                    handle.addClass('middle-right');\n                    this.designer.surface.append(handle);\n                    // bottom-right\n                    this.bottomRight = handle = this.createHandle();\n                    handle.addClass('bottom-right');\n                    this.designer.surface.append(handle);\n                    // top-center\n                    this.topCenter = handle = this.createHandle();\n                    handle.addClass('top-center');\n                    this.designer.surface.append(handle);\n                    // bottom-center\n                    this.bottomCenter = handle = this.createHandle();\n                    handle.addClass('bottom-center');\n                    this.designer.surface.append(handle);\n                    this.designer.handles.push(this);\n                    this.setPosition();\n                    this._setGrabHandle();\n                }\n                destroy() {\n                    for (let h of this.handles)\n                        h.remove();\n                    this.handles = [];\n                    this.dragObject.destroy();\n                }\n            }\n            Designer.GrabHandleObject = GrabHandleObject;\n            class DragObject {\n                constructor(el, container) {\n                    this.el = el;\n                    this.container = container;\n                    this._dragging = false;\n                    this.el = el;\n                    this.mousedown = (evt) => this.dragStart(evt);\n                    this.mouseup = (evt) => this.dragEnd(evt);\n                    this.mousemove = (evt) => this.drag(evt);\n                    container.addEventListener('mousedown', this.mousedown);\n                    container.addEventListener('mouseup', this.mouseup);\n                    container.addEventListener('mousemove', this.mousemove);\n                }\n                dragStart(evt) {\n                    if ((evt.button === 0) && (evt.target === this.el)) {\n                        this._y = evt.screenY;\n                        this._x = evt.screenX;\n                        this.dragging = true;\n                    }\n                }\n                dragEnd(evt) {\n                    if (this.dragging) {\n                        this.dragging = false;\n                        this.el.dispatchEvent(new Event('designerdragend'));\n                    }\n                }\n                drag(evt) {\n                    if (this.dragging) {\n                        evt.preventDefault();\n                        evt.stopPropagation();\n                        let el = $(this.el);\n                        if (this.dragging) {\n                            let y = evt.screenY;\n                            let x = evt.screenX;\n                            y = this._y - y;\n                            x = this._x - x;\n                            let el = $(this.el);\n                            let pos = el.position();\n                            el.css('left', (pos.left - x).toString() + 'px');\n                            el.css('top', (pos.top - y).toString() + 'px');\n                            this._y = evt.screenY;\n                            this._x = evt.screenX;\n                        }\n                        this.el.dispatchEvent(new Event('designerdrag'));\n                    }\n                }\n                destroy() {\n                    this.container.removeEventListener('mousedown', this.mousedown);\n                    this.container.removeEventListener('mouseup', this.mouseup);\n                    this.container.removeEventListener('mousemove', this.mousemove);\n                }\n                get dragging() {\n                    return this._dragging;\n                }\n                set dragging(value) {\n                    if (value)\n                        this.el.dispatchEvent(new Event('designerdragstart'));\n                    this._dragging = value;\n                }\n            }\n            Designer.DragObject = DragObject;\n        })(Designer = UI.Designer || (UI.Designer = {}));\n    })(UI = Katrid.UI || (Katrid.UI = {}));\n})(Katrid || (Katrid = {}));\n","Katrid.Core = {};\n\n\n(function () {\n\n  _.emptyText = '--';\n\n  class LocalSettings {\n    static init() {\n      Katrid.localSettings = new LocalSettings();\n    }\n\n    constructor() {\n    }\n\n    get searchMenuVisible() {\n      return parseInt(localStorage.searchMenuVisible) === 1;\n    }\n\n    set searchMenuVisible(value) {\n      localStorage.searchMenuVisible = value ? 1 : 0;\n    }\n  }\n\n\n  const _isMobile = function isMobile() {\n    var check = false;\n    (function (a) {\n      if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true;\n    })(navigator.userAgent || navigator.vendor || window.opera);\n    return check;\n  }();\n\n  Katrid.settings = {\n    additionalModules: [],\n    server: '',\n    servicesProtocol: (typeof io !== 'undefined' && io !== null) && io.connect ? 'io' : 'http',\n\n    // Katrid Framework UI Settings\n    ui: {\n      isMobile: _isMobile,\n      dateInputMask: true,\n      defaultView: 'list',\n      goToDefaultViewAfterCancelInsert: true,\n      goToDefaultViewAfterCancelEdit: false,\n      horizontalForms: true\n    },\n\n    services: {\n      choicesPageLimit: 10\n    },\n\n    speech: {\n      enabled: false\n    }\n  };\n\n  Katrid.Core.LocalSettings = LocalSettings;\n\n  Katrid.Core.plugins = {\n    callbacks: [],\n    init(app) {\n      for (let cb of this.callbacks)\n        cb(app);\n    },\n    register(callback) {\n      this.callbacks.push(callback);\n    }\n  };\n\n  if (Katrid.settings.servicesProtocol === 'io') {\n    Katrid.socketio = io.connect(`//${document.domain}:${location.port}/rpc`);\n  }\n\n})();\n","(function() {\n\n  class Application {\n    constructor() {\n      throw Error('erro');\n    }\n  }\n\n  class Menu {\n    constructor(app) {\n      this.app = app;\n\n      $('.menu-item-action')\n      .on('click', event => {\n        event.preventDefault();\n        let target = $(event.target);\n        this.actionClick(target.attr('href'));\n        target.parent('.dropdown-menu').hide();\n      });\n      $('li.nav-item.dropdown').on('mouseenter', function() {\n        $(this).children('.dropdown-menu').removeAttr('style');\n      });\n    }\n\n    actionClick(hash) {\n      this.app.loadPage(hash, true);\n    }\n  }\n\n  class WebApplication {\n\n    constructor(opts) {\n      Katrid.app = this;\n      this.menu = new Menu(this);\n      this.actionManager = new Katrid.Actions.ActionManager();\n      this.title = opts.title;\n      this.plugins = [\n        'ui.katrid',\n        'ngSanitize',\n      ];\n\n      let self = this;\n      $(Katrid).on('app.ready', () => {\n\n        let loadingTimeout, overlayTimeout;\n        let loadingMsg = $('#loading-msg').hide();\n        let overlay = $('#overlay').hide();\n        $(Katrid).on('fetch.before', () => {\n          loadingTimeout = setTimeout(() => loadingMsg.show(), 400);\n          overlayTimeout = setTimeout(() => {\n            loadingMsg.hide();\n            overlay.show();\n          }, 2500);\n        })\n        .on('fetch.always', () => {\n          clearTimeout(loadingTimeout);\n          clearTimeout(overlayTimeout);\n          loadingMsg.hide();\n          overlay.hide();\n        });\n\n        // TODO replace jquery ajax by fetch api\n        $(document).ajaxStart(function() {\n          loadingTimeout = setTimeout(() => loadingMsg.show(), 400);\n          overlayTimeout = setTimeout(() => {\n            loadingMsg.hide();\n            overlay.show()\n          }, 2500);\n        })\n        .ajaxStop(function() {\n          clearTimeout(loadingTimeout);\n          clearTimeout(overlayTimeout);\n          loadingMsg.hide();\n          overlay.hide();\n        });\n\n        $('a.module-selector')\n        .on('click', function(event) {\n          event.preventDefault();\n          let item = $(this);\n          let params = {};\n          params.menu_id = item.data('menu-id');\n\n          // clear history\n          Katrid.app.actionManager.clear();\n          self.loadPage(item.attr('href'));\n        })\n        .each(function(idx, el) {\n          el = $(el);\n          let params = {};\n          params.menu_id = el.data('menu-id');\n          params.action = $(`.menu-item-action[data-parent-id=\"${params.menu_id}\"]:first`).data('action-id');\n          el.attr('href', '#/app/?' + $.param(params));\n        });\n\n        if (location.hash === '')\n          $('a.module-selector:first').trigger('click');\n        else\n          this.loadPage(location.hash);\n      });\n\n      window.addEventListener('hashchange', (event) => {\n        this.loadPage(location.hash);\n      });\n\n      // initialize sync resources\n      fetch(opts.templates || '/web/client/templates/')\n      .then(res => res.text())\n      .then((templates) => {\n        if (templates)\n          templates = '<templates>' + templates + '</templates>';\n\n        // initialize angular app (katrid module)\n        this.ngApp = angular.module('katridApp', this.plugins)\n        .run(['$templateCache', ($templateCache) => {\n          this.$templateCache = $templateCache;\n          Katrid.UI.templates = new Katrid.UI.Templates(this, templates);\n        }])\n        // config hash\n        .config(['$locationProvider', '$interpolateProvider', function ($locationProvider, $interpolateProvider) {\n          $locationProvider.hashPrefix('');\n          $interpolateProvider.startSymbol('${');\n          $interpolateProvider.endSymbol('}');\n        }]);\n\n        this.ngApp.controller('AppController', ['$scope', '$compile', '$location', function($scope, $compile, $location) {\n          Katrid.Core.$compile = $compile;\n          Katrid.app.$scope = $scope;\n          Katrid.app.$location = $location;\n          $scope._ = _;\n          Katrid.app.$element = $('#katrid-action-view');\n          $(Katrid).trigger('app.ready', [Katrid.app]);\n        }]);\n\n        this.ngApp.controller('ActionController', ['$scope', function($scope) {\n        }]);\n\n        Katrid.Core.plugins.init(this);\n        $(Katrid).trigger('loaded', [Katrid.app]);\n\n      });\n    }\n\n    static bootstrap(opts) {\n      let app = new WebApplication(opts);\n      $(Katrid).on('loaded', function() {\n        angular.element(function () {\n          angular.bootstrap(document, ['katridApp']);\n        });\n      });\n      return app;\n    }\n\n    async loadPage(hash, reset) {\n      let evt = $.Event('hashchange');\n      $(this).trigger(evt, [hash, reset]);\n      // check if any plugin has stopped the event flow\n      if (!evt.isPropagationStopped()) {\n        this.$scope.currentMenu = '';\n        // load the page content\n        if (hash.startsWith('#/app/?'))\n          hash = hash.split('#/app/?')[1];\n        hash = new URLSearchParams(hash);\n        let params = {};\n        for (let [k, v] of hash.entries())\n          params[k] = v;\n\n        if (params.menu_id)\n          $('a.module-selector');\n\n        if (!this.$scope.$parent.currentMenu || (params.menu_id && (this.$scope.$parent.currentMenu.id != params.menu_id))) {\n          this.$scope.$parent.currentMenu = { id: params.menu_id, name: $(`.module-selector[data-menu-id=\"${params.menu_id}\"]`).text() };\n        }\n\n        if (('action' in params) || ('model' in params))\n          await this.actionManager.onHashChange(params, reset);\n      }\n    }\n\n    getTemplate(tpl, context) {\n      let text = this.$templateCache.get(tpl);\n      if (tpl.endsWith('jinja2')) {\n        let ctx = {\n          _: _,\n        };\n        if (context)\n          Object.assign(ctx, context);\n        return Katrid.UI.Templates.env.render(tpl, ctx);\n      }\n      else if (tpl.endsWith('pug')) {\n        text = text(context);\n      }\n      return text;\n    }\n\n    static get context() {\n      return this.actionManager.context;\n    }\n\n  }\n\n  Katrid.Core.Application = Application;\n  Katrid.Core.WebApplication = WebApplication;\n\n})();\n\nangular.module('basicApp', [])\n.controller('LoginController', ['$scope', function($scope) {\n  $scope.login = async (username, password, multidb, db) => {\n    let res;\n    if (multidb)\n      res = await Katrid.Services.post('/web/db/', { db });\n    if ((multidb && res.redirect) || !multidb) {\n      res = await Katrid.Services.post('/web/login/', { username, password });\n      if (res.error) {\n        $scope.messages = [{ type: 'danger', message: res.message }];\n        $scope.$apply();\n      } else {\n        $scope.messages = [{ type: 'success', message: res.message }];\n        $scope.$apply();\n        setTimeout(() => window.location.href = res.redirect);\n      }\n    }\n  }\n}]);\n","(function () {\n\n  Katrid.$hashId = 0;\n\n  _.mixin({\n    hash(obj) {\n      if (!obj.$hashId) {\n        obj.$hashId = ++Katrid.$hashId;\n      }\n      return obj.$hashId;\n    }\n  });\n\n  _.mixin({\n    sum(iterable, member) {\n      let r = 0;\n      if (iterable)\n        for (let row of iterable) {\n          let v = row[member];\n          if (!_.isNumber(v))\n            v = Number(v);\n          if (_.isNaN(v))\n            v = 0;\n          r += v;\n        }\n      return r;\n    },\n    avg(iterable, member) {\n      if (iterable && iterable.length) {\n        let r = 0;\n        return _.sum(iterable, member) / iterable.length;\n      }\n    }\n  })\n\n}).call(this);\n","(function() {\n\n  const globals = this;\n\n  // Internationalization\n  Katrid.i18n = {\n    languageCode: 'pt-BR',\n    formats: {},\n    catalog: {},\n\n    initialize(plural, catalog, formats) {\n      Katrid.i18n.plural = plural;\n      Katrid.i18n.catalog = catalog;\n      Katrid.i18n.formats = formats;\n      if (plural) {\n        Katrid.i18n.pluralidx = function (n) {\n          if (plural instanceof boolean) {\n            if (plural) {\n              return 1;\n            } else {\n              return 0;\n            }\n          } else {\n            return plural;\n          }\n        };\n      } else {\n        Katrid.i18n.pluralidx = function (n) {\n          if (count === 1) {\n            return 0;\n          } else {\n            return 1;\n          }\n        };\n      }\n\n      globals.pluralidx = Katrid.i18n.pluralidx;\n      globals.gettext = Katrid.i18n.gettext;\n      globals.ngettext = Katrid.i18n.ngettext;\n      globals.gettext_noop = Katrid.i18n.gettext_noop;\n      globals.pgettext = Katrid.i18n.pgettext;\n      globals.npgettext = Katrid.i18n.npgettext;\n      globals.interpolate = Katrid.i18n.interpolate;\n      globals.get_format = Katrid.i18n.get_format;\n\n      _.mixin({\n        gettext: Katrid.i18n.gettext,\n        sprintf: sprintf,\n      });\n\n      return Katrid.i18n.initialized = true;\n    },\n\n    merge(catalog) {\n      return Array.from(catalog).map((key) =>\n        (Katrid.i18n.catalog[key] = catalog[key]));\n    },\n\n    gettext(s) {\n      const value = Katrid.i18n.catalog[s];\n      if (value != null) {\n        return value;\n      } else {\n        return s;\n      }\n    },\n\n    gettext_noop(s) {\n      return s;\n    },\n\n    ngettext(singular, plural, count) {\n      const value = Katrid.i18n.catalog[singular];\n      if (value != null) {\n        return value[Katrid.i18n.pluralidx(count)];\n      } else if (count === 1) {\n        return singular;\n      } else {\n        return plural;\n      }\n    },\n\n    pgettext(s) {\n      let value = Katrid.i18n.gettext(s);\n      if (value.indexOf('\\x04') !== -1) {\n        value = s;\n      }\n      return value;\n    },\n\n    npgettext(ctx, singular, plural, count) {\n      let value = Katrid.i18n.ngettext(ctx + '\\x04' + singular, ctx + '\\x04' + plural, count);\n      if (value.indexOf('\\x04') !== -1) {\n        value = Katrid.i18n.ngettext(singular, plural, count);\n      }\n      return value;\n    },\n\n    interpolate(fmt, obj, named) {\n      if (named) {\n        fmt.replace(/%\\(\\w+\\)s/g, match => String(obj[match.slice(2, -2)]));\n      } else {\n        fmt.replace(/%s/g, match => String(obj.shift()));\n      }\n\n      return {\n        get_format(formatType) {\n          const value = Katrid.i18n.formats[formatType];\n          if (value != null) {\n            return value;\n          } else {\n            return formatType;\n          }\n        }\n      };\n    }\n  };\n\n})();\n","(function () {\n\n  let requestManager;\n  class RequestManager {\n    constructor() {\n      this.requestId = 0;\n      this.requests = {};\n    }\n\n    request() {\n      const reqId = ++requestManager.requestId;\n      const def = new $.Deferred();\n      this.requests[reqId] = def;\n      def.requestId = reqId;\n      return def;\n    }\n  }\n\n\n  if (Katrid.socketio) {\n    requestManager = new RequestManager();\n\n    Katrid.socketio.on('connect', () => console.log(\"I'm connected!\"));\n\n    Katrid.socketio.on('api', function (data) {\n      if (_.isString(data)) {\n        data = JSON.parse(data);\n      }\n      const def = requestManager.requests[data['req-id']];\n      return def.resolve(data);\n    });\n  }\n\n\n  class Service {\n    static get url() { return '/api/rpc/' };\n\n    constructor(name, scope) {\n      this.name = name;\n    }\n\n    static $fetch(url, config, params) {\n      if (params) {\n        url = new URL(url);\n        Object.entries(params).map((k, v) => url.searchParams.append(k, v));\n      }\n      // send events\n      $(Katrid).trigger('fetch.before');\n      return fetch(url, config)\n      .then(response => {\n        $(Katrid).trigger('fetch.done');\n        return response;\n      });\n    }\n\n    static $post(url, data, params) {\n      return this.$fetch(url, {\n        method: 'POST',\n        credentials: \"same-origin\",\n        body: JSON.stringify(data),\n        headers: {\n          'content-type': 'application/json',\n        }\n      }, params)\n      .then(res => res.json());\n    }\n\n    delete(name, params, data) {\n    }\n\n    get(name, params) {\n      if (Katrid.Settings.servicesProtocol === 'ws') {\n        // Using websocket protocol\n        return Katrid.socketio.emit('api', {channel: 'rpc', service: this.name, method: name, data, args: params});\n      } else {\n        // Using http protocol\n        const methName = this.name ? this.name + '/': '';\n        const rpcName = Katrid.Settings.server + this.constructor.url + methName + name + '/';\n        return $.get(rpcName, params);\n      }\n    }\n\n    post(name, data, params) {\n      let context;\n      if (Katrid.app)\n        context = Katrid.app.context;\n      if (!data)\n        data = {};\n      if (context)\n        data.context = context;\n\n      data = {\n        jsonrpc: '2.0',\n        method: name,\n        params: data,\n        id: Math.floor(Math.random() * 1000 * 1000 * 1000)\n      };\n\n      // Check if protocol is socket.io\n      if (Katrid.settings.servicesProtocol === 'io') {\n        const def = requestManager.request();\n        Katrid.socketio.emit('api',\n          {\n            \"req-id\": def.requestId,\n            \"req-method\": 'POST',\n            service: this.name,\n            method: name,\n            data,\n            args: params\n          }\n        );\n        return def;\n\n        // Else, using ajax\n      } else {\n        const methName = this.name ? this.name + '/': '';\n        let rpcName = Katrid.settings.server + this.constructor.url + methName + name + '/';\n        if (params) {\n          rpcName += `?${$.param(params)}`;\n        }\n        return new Promise(\n          (resolve, reject) => {\n\n            fetch(rpcName, {\n              method: 'POST',\n              body: JSON.stringify(data),\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n              },\n            })\n            .then(res => res.json())\n            .then(res => {\n              if (res.error)\n                reject(res.error);\n              else {\n                if (res.result) {\n                  let messages;\n                  if (res.result.messages)\n                    messages = res.result.messages;\n                  else\n                    messages = [];\n                  if (res.result.message)\n                    messages.push(res.result.message);\n                  else if (res.result.warn)\n                    messages.push({ type: 'warn', message: res.result.warn });\n                  else if (res.result.info)\n                    messages.push({ type: 'info', message: res.result.info });\n                  else if (res.result.error)\n                    messages.push({ type: 'error', message: res.result.error });\n                  messages.forEach(function (msg) {\n                    if (_.isString(msg))\n                      Katrid.UI.Dialogs.Alerts.success(msg);\n                    else if (msg.type === 'warn')\n                      Katrid.UI.Dialogs.Alerts.warn(msg.message);\n                    else if (msg.type === 'info')\n                      Katrid.UI.Dialogs.Alerts.info(msg.message);\n                    else if ((msg.type === 'error') || (msg.type === 'danger'))\n                      Katrid.UI.Dialogs.Alerts.error(msg.message);\n                  });\n                }\n                resolve(res.result);\n              }\n            })\n            .catch(res => reject(res));\n          }\n        );\n      }\n    }\n  }\n\n\n  class Model extends Service {\n    searchName(name) {\n      if (_.isString(name))\n        name = { args: name };\n      return this.post('search_name', name);\n    }\n\n    createName(name) {\n      let kwargs = {name};\n      return this.post('create_name', { kwargs: kwargs });\n    }\n\n    search(data, params) {\n      return this.post('search', { kwargs: data }, params);\n    }\n\n    destroy(id) {\n      if (!_.isArray(id))\n        id = [id];\n      return this.post('destroy', { kwargs: {ids: id} });\n    }\n\n    getById(id) {\n      return this.post('get', { args: [id] });\n    }\n\n    getDefaults(kwargs) {\n      return this.post('get_defaults', { kwargs });\n    }\n\n    copy(id) {\n      return this.post('copy', { args: [id] });\n    }\n\n    static _prepareFields(res) {\n      if (res) {\n        res.fields = Katrid.Data.Fields.Field.fromArray(res.fields);\n        res.fieldList = Object.values(res.fields);\n        if (res.views) {\n          Object.values(res.views).map(v => v.fields = Katrid.Data.Fields.Field.fromArray(v.fields));\n          Object.keys(res.views).map(k => res.views[k] = new Katrid.UI.ViewInfo(res.views[k]));\n        }\n      }\n      return res;\n    }\n\n    getViewInfo(data) {\n      return this.post('get_view_info', { kwargs: data })\n      .then(this.constructor._prepareFields);\n    }\n\n    async loadViews(data) {\n      return this.post('load_views', { kwargs: data })\n      .then(this.constructor._prepareFields);\n    }\n\n    getFieldsInfo(data) {\n      return this.post('get_fields_info', { kwargs: data })\n      .then(this.constructor._prepareFields);\n    }\n\n    getFieldChoices(field, term, kwargs) {\n      return this.post('get_field_choices', { args: [ field, term ], kwargs: kwargs } );\n    }\n\n    doViewAction(data) {\n      return this.post('do_view_action', { kwargs: data });\n    }\n\n    write(data, params) {\n      return new Promise((resolve, reject) => {\n        this.post('write', {kwargs: {data}}, params)\n        .then((res) => {\n          Katrid.UI.Dialogs.Alerts.success(Katrid.i18n.gettext('Record saved successfully.'));\n          resolve(res);\n        })\n        .catch(res => {\n          if ((res.status === 500) && res.responseText)\n            alert(res.responseText);\n          else\n            Katrid.UI.Dialogs.Alerts.error(Katrid.i18n.gettext('Error saving record changes'));\n          reject(res);\n        });\n      });\n    }\n\n    groupBy(grouping, params) {\n      return this.post('group_by', { kwargs: { grouping, params } });\n    }\n\n    autoReport() {\n      return this.post('auto_report', { kwargs: {} });\n    }\n\n    rpc(meth, args, kwargs) {\n      // execute rpc\n      return new Promise((resolve, reject) => {\n        this.post(meth, { args: args, kwargs: kwargs })\n        .then(res => {\n          // open a document\n          if (res && res.open)\n            window.open(res.open);\n          resolve(res);\n        })\n        .catch(res => {\n          if (res.messages && _.isObject(res.messages))\n            for (let msg of Object.values(res.messages))\n              Katrid.UI.Dialogs.Alerts.error(msg.join('\\n'));\n          else\n            Katrid.UI.Dialogs.Alerts.error(res.message);\n          reject(res);\n        });\n      });\n    }\n  }\n\n\n  // Represents a server query\n  class Query extends Model {\n    constructor() {\n      super('ir.query');\n    }\n\n    static read(config) {\n      // read data from server\n      let details, id, params;\n      if (_.isObject(config)) {\n        details = config.details;\n        params = config.params;\n        id = config.id;\n      } else\n        id = config;\n      return (new Query()).post('read', { args: [id], kwargs: { with_desc: details, params, as_dict: config.as_dict } });\n    }\n\n    static all() {\n      return (new Query()).rpc('all');\n    }\n\n    static executeSql(sql) {\n      return (new Query()).post('execute_sql', { args: [sql] });\n    }\n  }\n\n\n  class Data extends Service {\n    static get url() { return '/web/data/' };\n\n    reorder(model, ids, field='sequence', offset=0) {\n      return this.post('reorder', { args: [ model, ids, field, offset ] });\n    }\n  }\n\n  class Attachments {\n    static destroy(id) {\n      let svc = new Model('ir.attachment');\n      svc.destroy(id);\n    }\n\n    static upload(file, scope=null) {\n      let data = new FormData();\n      if (scope === null) scope = angular.element(file).scope();\n      data.append('model', scope.model.name);\n      data.append('id', scope.recordId);\n      for (let f of file.files) data.append('attachment', f, f.name);\n      return $.ajax({\n        url: '/web/content/upload/',\n        type: 'POST',\n        data: data,\n        processData: false,\n        contentType: false\n      })\n      .done((res) => {\n        console.log('attachments', scope.attachments, scope);\n        if (!scope.attachments)\n          scope.attachments = [];\n        if (res)\n          for (let obj of res) scope.attachments.push(obj);\n        scope.$apply();\n      });\n    }\n  }\n\n  class View extends Model {\n    constructor() {\n      super('ui.view');\n    }\n\n    fromModel(model) {\n      return this.post('from_model', null, {model});\n    }\n  }\n\n\n  class Actions extends Model {\n    static load(action) {\n      let svc = new Model('ir.action');\n      return svc.post('load', { args: [action] });\n    }\n  }\n\n\n  class Auth extends Service {\n    static login(username, password) {\n      return this.$post('/web/login/', { username: username, password: password });\n    }\n  }\n\n  class Upload {\n    static sendFile(service, file) {\n      let form = new FormData();\n      form.append('files', file.files[0]);\n      let scope = angular.element(file).scope();\n      let url = `/web/file/upload/${scope.model.name}/${service}/`;\n      if (scope.record && scope.record.id)\n        form.append('id', scope.record.id);\n      // try to detect the current datasource to be refreshed if needed\n      let dataSource = scope.action.dataSource;\n      if (!dataSource) {\n        dataSource = scope.$parent.dataSource;\n        let s = scope.$parent;\n        while (s) {\n          dataSource = s.dataSource;\n          if (dataSource)\n            break;\n          s = scope.$parent;\n        }\n      }\n      $.ajax({\n        url: url,\n        data: form,\n        processData: false,\n        contentType: false,\n        type: 'POST',\n        success: (data) => {\n          dataSource.refresh();\n          Katrid.UI.Dialogs.Alerts.success('Operação realizada com sucesso.')\n        }\n      });\n    }\n\n    static uploadTo(url, file) {\n      let form = new FormData();\n      form.append('files', file.files[0]);\n      return $.ajax({\n        url: url,\n        data: form,\n        processData: false,\n        contentType: false,\n        type: 'POST',\n        success: (data) => {\n          Katrid.UI.Dialogs.Alerts.success('Arquivo enviado com sucesso!');\n        }\n      });\n    }\n  }\n\n  this.Katrid.Services = {\n    Data,\n    View,\n    data: new Data('', ),\n    Attachments,\n    Service,\n    Model,\n    Query,\n    Auth,\n    Upload,\n    Actions,\n    post(url, data) {\n      // post json data to server\n      return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n      }).then(res => res.json());\n    }\n  };\n\n})();\n\n","Katrid.Data = {};\n","(function() {\n\n  class Record {\n    constructor(data, dataSource, state) {\n      // current record data\n      this.raw = data;\n      // modified data only\n      this.data = {};\n      // original record\n      // this.old = jQuery.extend({}, data);\n      this.dataSource = dataSource;\n      this.pending = null;\n      this.modified = false;\n      this.children = [];\n      this.state = state;\n      this.submitted = false;\n      data.$record = this;\n    }\n\n    get scope() {\n      return this.dataSource.scope;\n    }\n\n    get pk() {\n      return this.raw.id;\n    }\n\n    $delete() {\n      this.state = RecordState.destroyed;\n      if (this.pk)\n        this.setModified();\n      else if (this.parent.children.indexOf(this) > -1)\n        this.parent.children.splice(this.parent.children.indexOf(this), 1);\n    }\n\n    _prepareRecord(rec, parent) {\n      console.log(rec.constructor.name);\n      return;\n      let getValue = (v) => {\n        if (_.isObject(v))\n          return this._prepareRecord(v, rec);\n        else if (_.isArray(v))\n          return v.map(obj => getValue(obj));\n        return v;\n      };\n\n      let res = {};\n      for (let [k, v] of Object.entries(rec)) {\n        // prevent circular json object\n        if (parent && _.isObject(v))\n          continue;\n        res[k] = getValue(v);\n        if (v)\n        console.log(v.constructor.name);\n      }\n      if (this.dataSource.parent && !parent) {\n        let field = this.dataSource.parent.scope.view.fields[this.dataSource.fieldName]._info.field;\n        res[field] = this.dataSource.parent.record.$record._prepareRecord(this.dataSource.parent.record);\n      }\n      return res;\n    }\n\n    setModified(field) {\n      if (!this.modified && (this.state !== RecordState.destroyed)) {\n        if (this.pk)\n          this.state = RecordState.modified;\n        else\n          this.state = RecordState.created;\n      }\n      if (field)\n        this.dataSource.$setDirty(field);\n      this.dataSource._pendingChanges = true;\n      this.modified = true;\n\n      if (this.parent && this.scope.fieldName) {\n        this.parent.setModified(this.scope.fieldName);\n        this.parent.addChild(this);\n      }\n    }\n\n    get parent() {\n      return this.dataSource.parent && this.dataSource.parent.record.$record;\n    }\n\n    addChild(child) {\n      this.setModified(child.scope.fieldName);\n      if (this.children.indexOf(child) === -1) {\n        this.children.push(child);\n      }\n    }\n\n    compare(oldValue, newValue) {\n      if (_.isArray(oldValue) && _.isArray(newValue))\n        return oldValue.join(',') !== newValue.join(',');\n      return oldValue != newValue;\n    }\n\n    set(propKey, value) {\n      let field = this.dataSource.fieldByName(propKey);\n      if (field) {\n        let oldValue = this.raw[propKey];\n        value = field.toJSON(value);\n        // check if field value has been changed\n        if (this.compare(oldValue, value)) {\n          this.setModified(propKey);\n          this.data[propKey] = value;\n          this.modified = true;\n          // send field change event\n          if (field.onChange) {\n            let rec = this.$encode(this.raw);\n            rec[propKey] = value;\n\n            // let's send parent data\n            if (this.dataSource.parent && this.dataSource.fieldName) {\n              let field = this.dataSource.parent.fields[this.dataSource.fieldName]._info.field;\n              rec[field] = this.$encode(this.dataSource.parent.record);\n            }\n\n            // send prepared data\n            this.dataSource.dispatchEvent('field_change_event', [propKey, rec]);\n          }\n        }\n      }\n      return true;\n    }\n\n    $encode(obj) {\n      if (_.isArray(obj))\n        return obj.map(v => this.$encode(v));\n      else if (_.isObject(obj)) {\n        let r = {};\n        for (let [k, v] of Object.entries(obj))\n          if (!k.startsWith('$'))\n            r[k] = this.$encode(v);\n        return r;\n      } else\n        return obj;\n    }\n\n    $new() {\n      return Record(this.raw);\n    }\n\n    toObject() {\n      let data = jQuery.extend({}, this.data);\n      if (this.pk)\n        data.id = this.pk;\n      for (let child of this.children) {\n        if (!(child.scope.fieldName in data))\n          data[child.scope.fieldName] = [];\n        if (child.state === RecordState.created)\n          data[child.scope.fieldName].push({ action: 'CREATE', values: child.toObject() });\n        else if (child.state === RecordState.modified)\n          data[child.scope.fieldName].push({ action: 'UPDATE', values: child.toObject() });\n        else if (child.state === RecordState.destroyed)\n          data[child.scope.fieldName].push({ action: 'DESTROY', id: child.pk });\n      }\n      return data;\n    }\n  }\n\n  class SubRecords {\n    constructor(recs) {\n      this.recs = recs;\n    }\n\n    append(rec) {\n      if (this.recs.indexOf(rec) === -1)\n        this.recs.push(rec);\n    }\n  }\n\n\n  function createRecord(rec, dataSource) {\n    new Record(rec, dataSource);\n    return new Proxy(rec, {\n      set(target, propKey, value, receiver) {\n        if (!propKey.startsWith('$$')) {\n          let scope = dataSource.scope;\n          let field = dataSource.fieldByName(propKey);\n          if (!propKey.startsWith('$') && scope && field && !(field instanceof Katrid.Data.Fields.OneToManyField)) {\n            rec.$record.set(propKey, value);\n          }\n        }\n        return Reflect.set(target, propKey, value, receiver);\n      }\n    })\n  }\n\n  class RecordState {\n    static initClass() {\n      this.destroyed = 'destroyed';\n      this.created = 'created';\n      this.modified = 'modified';\n    }\n  }\n  RecordState.initClass();\n\n  Katrid.Data.RecordState = RecordState;\n  Katrid.Data.createRecord = createRecord;\n  Katrid.Data.SubRecords = SubRecords;\n\n})();\n","(function () {\n\n  class DataSourceState {\n    static initClass() {\n      this.inserting = 'inserting';\n      this.browsing = 'browsing';\n      this.editing = 'editing';\n      this.loading = 'loading';\n      this.inactive = 'inactive';\n    }\n  }\n  DataSourceState.initClass();\n\n  DEFAULT_REQUEST_INTERVAL = 300;\n\n  class DataSource {\n    constructor(scope, action) {\n      this.readonly = false;\n      this.$modifiedRecords = [];\n      // this.onFieldChange = this.onFieldChange.bind(this);\n      this.scope = scope;\n      this.action = action;\n      this._recordIndex = 0;\n      this.recordCount = null;\n      this.loading = false;\n      this.loadingRecord = false;\n      this._masterSource = null;\n      this._pageIndex = 0;\n      this.pageLimit = 100;\n      this.offset = 0;\n      this.offsetLimit = 0;\n      this.requestInterval = DEFAULT_REQUEST_INTERVAL;\n      this.pendingRequest = null;\n      this.fieldName = null;\n      this.children = [];\n      this.modifiedData = null;\n      this.uploading = 0;\n      this._state = null;\n      this.fieldWatchers = [];\n      this._pendingChanges = false;\n      this.recordId = null;\n      scope.$fieldLog = {};\n    }\n\n    get pageIndex() {\n      return this._pageIndex;\n    }\n\n    set pageIndex(page) {\n      this._pageIndex = page;\n      console.log('goto page', page);\n      this.search(this._params, page, this._fields, DEFAULT_REQUEST_INTERVAL);\n    }\n\n    get fields() {\n      return this.scope.view.fields;\n    }\n\n    get loadingAction() {\n      return this._loadingAction;\n    }\n\n    set loadingAction(v) {\n      if (v) this.requestInterval = 0;\n      else this.requestInterval = DEFAULT_REQUEST_INTERVAL;\n      this._loadingAction = v;\n    }\n\n    async cancel() {\n      if (!this.changing)\n        return;\n\n      this._recordIndex = null;\n      this._pendingChanges = false;\n      if (this.state === DataSourceState.editing)\n        await this.refresh();\n      else if (this.action)\n        this.action.switchView('list');\n      this.state = DataSourceState.browsing;\n\n      this.scope.$emit('afterCancel', this);\n    }\n\n    async saveAndClose() {\n      // Save changes and close dialog\n      let r = await this.save(false);\n      this.scope.$emit('saveAndClose', this.scope, r);\n      return this.action.$element.closest('.modal').modal('hide');\n    }\n\n\n    async copy(id) {\n      let res = await this.model.copy(id);\n      this.record = {};\n      await this.insert();\n      this.setValues(res);\n      return res;\n    }\n\n    findById(id) {\n      for (let rec of this.scope.records)\n        if (rec.id === id)\n          return rec;\n      return null;\n    }\n\n    hasKey(id) {\n      return this.findById(id) !== null;\n    }\n\n    refresh(data) {\n      let r;\n      if (data) {\n        // Refresh current record\n        r = this.get(data[0]);\n      } else if (this.scope.record && this.scope.record.id) {\n        r = this.get(this.scope.record.id);\n      } else {\n        r = this.search(this._params, this._page);\n      }\n      r.then(() => {\n        for (let child in this.children)\n          if (child.invalidate) {\n            child.invalidate(this.recordId);\n            child.scope.$apply();\n          }\n      });\n      return r;\n    }\n\n    _validateForm(elForm, form, errorMsgs) {\n      let elfield;\n      for (let errorType in form.$error)\n        if (errorType === 'required')\n        for (let child of Array.from(form.$error[errorType])) {\n          if (child.$name.startsWith('grid-row-form'))\n            elfield = this._validateForm(elForm.find('#' + child.$name), child, errorMsgs);\n          else {\n            elfield = elForm.find(`.form-field[name=\"${child.$name}\"]`);\n            elfield.addClass('ng-touched');\n            let scope = angular.element(elForm).scope();\n            const field = scope.view.fields[child.$name];\n            errorMsgs.push(`<span>${field.caption}</span><ul><li>${Katrid.i18n.gettext('This field cannot be empty.')}</li></ul>`);\n          }\n        }\n        else\n          console.log(form.$error[errorType]);\n\n      return elfield;\n    }\n\n    validate(raiseError=true) {\n      if (this.scope.form.$invalid) {\n        let elfield;\n        let errors = [];\n        let s = `<span>${Katrid.i18n.gettext('The following fields are invalid:')}</span><hr>`;\n        const el = this.scope.formElement;\n        elfield = this._validateForm(el, this.scope.form, errors);\n        Katrid.ui.uiKatrid.setFocus(elfield);\n        s += errors.join('');\n        Katrid.ui.Dialogs.Alerts.error(s);\n        if (raiseError)\n          throw Error('Error validating form: ' + s);\n        return false;\n      }\n      return true;\n    }\n\n    indexOf(obj) {\n      if (this.scope.records)\n        return this.scope.records.indexOf(this.findById(obj.id));\n    }\n\n    search(params, page, fields, timeout) {\n      let master = this.masterSource;\n      // if (this.groups && !this.groups.length && this.scope.defaultGrouping) {\n      //   let g = {\n      //     context: {\n      //       grouping: [this.scope.defaultGrouping]\n      //     }\n      //   };\n      //   this.groupBy(g);\n      //   return;\n      // }\n      this._params = params;\n      this._page = page;\n      this._fields = fields;\n      this._clearTimeout();\n      this.pendingRequest = true;\n      this.loading = true;\n      page = page || 1;\n      this._pageIndex = page;\n      let domain;\n      if (this.action)\n        domain = this.action.info.domain;\n      if (domain) {\n        domain = JSON.parse(domain);\n      }\n      if (_.isObject(fields))\n        fields = Object.keys(fields);\n      params = {\n        count: true,\n        page,\n        params,\n        fields,\n        domain,\n        limit: this.pageLimit,\n      };\n\n      return new Promise(\n        (resolve, reject) => {\n\n          let req = () => {\n            this.model.search(params)\n            .catch(res => {\n              return reject(res);\n            })\n            .then(res => {\n              if (this.pageIndex > 1) {\n                this.offset = ((this.pageIndex - 1) * this.pageLimit) + 1;\n              } else {\n                this.offset = 1;\n              }\n              this.scope.$apply(() => {\n                if (res.count != null)\n                  this.recordCount = res.count;\n\n                let data = res.data;\n                if (this.readonly)\n                  this.scope.records = data;\n                else\n                  this.scope.records = data.map((obj) => Katrid.Data.createRecord(obj, this));\n                // list view uses only groups\n                this.scope.groups = this.scope.records;\n                if (this.pageIndex === 1) {\n                  return this.offsetLimit = this.scope.records.length;\n                } else {\n                  return this.offsetLimit = (this.offset + this.scope.records.length) - 1;\n                }\n              });\n              return resolve(res);\n            })\n            .finally(() => {\n              this.pendingRequest = false;\n              this.scope.$apply(() => {\n                this.loading = false;\n              });\n            });\n          };\n\n          timeout = 0;\n\n          if (((this.requestInterval > 0) || timeout) && (timeout !== false))\n            this.pendingRequest = setTimeout(req, this.requestInterval);\n          else req();\n        }\n      );\n    }\n\n    async groupBy(group, params) {\n      this._params = [];\n      console.log('group by', group, params);\n      if (!group || !group.length) {\n        this.groups = [];\n        this.action.groups = null;\n        this.scope.groups = null;\n        this.search(params);\n        return;\n      }\n      this.scope.action.groups = group;\n      this.scope.groupings = [];\n      this.groups = group;\n      this.scope.groups = await this._loadGroup(group, 0, params);\n      return this.scope.$apply();\n    }\n\n    async _loadGroup(group, index, params, parent) {\n      let rows = [];\n      if (!params)\n        params = [];\n      if (parent && parent.$params)\n        params = params.concat(parent.$params);\n      let res = await this.model.groupBy([group[index]], params);\n      const groupName = group[index];\n      for (let r of res) {\n        let s = r[groupName];\n        let paramValue;\n        if ($.isArray(s)) {\n          paramValue = s[0];\n          s = s[1];\n        } else {\n          paramValue = s;\n        }\n        r.__str__ = s;\n        r.$expanded = false;\n        r.$group = groupName;\n        r.$params = [];\n        if (parent)\n          r.$params = r.$params.concat(parent.$params);\n        let params = {};\n        params[groupName] = paramValue;\n        r.$params.push(params);\n        r.$level = index;\n        r.$hasChildren = true;\n\n        // add group object to list\n        rows.push(r);\n      }\n      return rows;\n    }\n\n    goto(index) {\n      return this.recordIndex = index;\n    }\n\n    moveBy(index) {\n      const newIndex = (this._recordIndex + index);\n      if ((newIndex > -1) && (newIndex < this.scope.records.length))\n        this.recordIndex = newIndex;\n    }\n\n    _clearTimeout() {\n      this.loading = false;\n      this.loadingRecord = false;\n      this._canceled = true;\n      clearTimeout(this.pendingRequest);\n    }\n\n    set masterSource(master) {\n      this._masterSource = master;\n      master.children.push(this);\n    }\n\n    get masterSource() {\n      return this._masterSource;\n    }\n\n    applyModifiedData(form, element, record) {\n      const data = this.getModifiedData(form, element, record);\n      const _id = _.hash(record);\n      if (data) {\n        let ds = this.modifiedData;\n        if ((ds == null)) {\n          ds = {};\n        }\n        let obj = ds[_id];\n        if (!obj) {\n          obj = {};\n          ds[_id] = obj;\n        }\n        for (let attr in data) {\n          const v = data[attr];\n          obj[attr] = v;\n          //record[attr] = v;\n        }\n\n        this.modifiedData = ds;\n        this.masterSource.scope.form.$setDirty();\n      }\n      return data;\n    }\n\n    getNestedData() {\n      let ret = {};\n      for (let child of this.children)\n        if (child.$modifiedRecords.length) {\n          let res = [];\n          let deleted = [];\n          for (let rec of child.$modifiedRecords) {\n            if (rec.$deleted) {\n              deleted.push(rec);\n              if ((rec.id !== null) && (rec.id !== undefined))\n                res.push({id: rec.id, action: 'DESTROY'})\n            }\n          }\n\n          for (let rec of child.$modifiedRecords) {\n            console.log(rec.$modified, rec.$modifiedData);\n            if (rec.$modifiedData && !rec.$deleted && rec.$modified && (deleted.indexOf(rec) === -1)) {\n              let data = this._getModified(rec.$modifiedData);\n              if (rec.id)\n                data['id'] = rec.id;\n              jQuery.extend(data, child.getNestedData());\n              if ((rec.id === null) || (rec.id === undefined))\n                res.push({\n                  action: 'CREATE',\n                  values: data,\n                });\n              else if ((rec.id !== null) && (rec.id !== undefined))\n                res.push({\n                  action: 'UPDATE',\n                  values: data,\n                });\n            }\n          }\n          if (Object.keys(res).length > 0)\n            ret[child.fieldName] = res;\n        }\n      return ret;\n    }\n\n    save(autoRefresh=true) {\n      // Save pending children\n      for (let child of this.children)\n        if (child.changing)\n          child.scope.save();\n\n      const el = this.action.$form;\n      if (this.validate()) {\n        const data = this.record.$record.toObject();\n        // const data = this.getModifiedData(this.scope.form, el, this.scope.record);\n        this.scope.form.data = data;\n\n        let beforeSubmit = el.attr('before-submit');\n        if (beforeSubmit)\n          beforeSubmit = this.scope.$eval(beforeSubmit);\n\n        //@scope.form.data = null\n\n        if (data) {\n          this.uploading++;\n          return this.model.write([data])\n          .then(res => {\n            // this._clearCache();\n            if (this.action && this.action.viewType && (this.action.viewType === 'form'))\n              Katrid.app.$location.search('id', res[0]);\n            this.scope.form.$setPristine();\n            this.scope.form.$setUntouched();\n            this._pendingChanges = false;\n            this.state = DataSourceState.browsing;\n            if (autoRefresh)\n              return this.refresh(res);\n            else\n              return res;\n\n          })\n          .catch(error => {\n            let s = `<span>${Katrid.i18n.gettext('The following fields are invalid:')}<hr></span>`;\n            if (error.message)\n              s = error.message;\n            else if (error.messages) {\n              let elfield;\n              for (let fld of Object.keys(error.messages)) {\n                const msgs = error.messages[fld];\n                let field;\n                // check qualified field name\n                if (fld.indexOf('.') > -1) {\n                  fld = fld.split('.');\n                  let subField = fld[1];\n                  for (let child of this.children)\n                    if (child.scope.fieldName === fld[0]) {\n                      field = child.scope.view.fields[subField];\n                    }\n                } else\n                  field = this.scope.view.fields[fld];\n                console.log('field invalid', field);\n                if (!field || !field.name)\n                  continue;\n                elfield = el.find(`.form-field[name=\"${field.name}\"]`);\n                elfield.addClass('ng-invalid ng-touched');\n                s += `<strong>${field.caption}</strong><ul>`;\n                for (let msg of msgs) {\n                  s += `<li>${msg}</li>`;\n                }\n                s += '</ul>';\n              }\n              if (elfield)\n                elfield.focus();\n            }\n\n            Katrid.UI.Dialogs.Alerts.error(s);\n            throw new Error(s);\n\n          })\n          .finally(() => this.scope.$apply(() => this.uploading-- ) );\n        } else\n          Katrid.UI.Dialogs.Alerts.warn(Katrid.i18n.gettext('No pending changes'));\n      }\n    }\n\n    _getNested(recs) {\n      let res = [];\n      if (recs.$deleted && recs.$deleted.recs.length)\n        for (let rec of recs.$deleted.recs)\n          res.push({id: rec.id, action: 'DESTROY'});\n\n      let vals;\n      if (recs.recs.length)\n        for (let rec of recs.recs) if (rec) {\n          vals = {};\n          if (rec.$created)\n            vals = {\n              action: 'CREATE',\n              values: this._getModified(rec.$modifiedData)\n            };\n          else if (rec.$modified) {\n            vals = {\n              action: 'UPDATE',\n              values: this._getModified(rec.$modifiedData)\n            };\n            vals.values.id = rec.id;\n          }\n          else\n            continue;\n          res.push(vals);\n        }\n\n      return res;\n    }\n\n\n    _getModified(data) {\n      let res = {};\n      if (data)\n        for (let [k, v] of Object.entries(data))\n          if (v instanceof Katrid.Data.SubRecords) {\n            res[k] = this._getNested(v);\n          } else\n            res[k] = v;\n      return res;\n    }\n\n    getModifiedData(form, element, record) {\n      let data = {};\n      if (record.$modified)\n        jQuery.extend(data, this._getModified(record.$modifiedData));\n\n      if (this.record.id)\n        data['id'] = record.id;\n      return data;\n    }\n\n    get(id, timeout, apply=true, index=false) {\n      this._clearTimeout();\n      this.state = DataSourceState.loading;\n      this.loadingRecord = true;\n      this._canceled = false;\n\n      return new Promise(\n        (resolve, reject) => {\n          const _get = () => {\n            return this.model.getById(id)\n            .catch(res => {\n              return reject(res);\n            })\n            .then(res => {\n              if (this._canceled || !res)\n                return;\n              if (this.state === DataSourceState.loading)\n                this.state = DataSourceState.browsing;\n              else if (this.state === DataSourceState.inserting)\n                return;\n              this.record = res.data[0];\n              if (index !== false)\n                this.scope.records[index] = this.record;\n              // if (apply)\n              //   this.scope.$apply();\n              return resolve(this.record);\n            })\n            .finally(() => {\n                this.loadingRecord = false;\n              if (apply)\n                return this.scope.$apply();\n            });\n          };\n          if (!timeout && !this.requestInterval)\n            return _get();\n          else\n            this.pendingRequest = setTimeout(_get, timeout || this.requestInterval);\n\n        }\n      );\n    }\n\n    get defaultValues() {\n\n    }\n\n    set defaultValues(values) {\n      for (let [k, v] of Object.entries(values)) {\n        if (_.isObject(v) && (k in this.fields)) {\n          this.fields[k].defaultValues = v;\n        }\n      }\n    }\n\n    async insert(loadDefaults=true, defaultValues, kwargs) {\n      this._clearTimeout();\n      for (let child of this.children)\n        child._clearTimeout();\n      let rec = {};\n      rec.$created = true;\n      let oldRecs = this.scope.records;\n      this.record = rec;\n      this.scope.records = oldRecs;\n      let res;\n      // check if load defaults is needed\n      if (loadDefaults)\n        // load default fields values with optional kwargs\n        res = await this.model.getDefaults(kwargs);\n\n      for (let child of this.children)\n        child.scope.records = [];\n\n      this.state = DataSourceState.inserting;\n      this.scope.record.display_name = Katrid.i18n.gettext('(New)');\n\n      let defaults = {};\n      if (this.masterSource && this.field && this.field.defaultValues)\n        Object.assign(defaults, this.field.defaultValues);\n      for (let v of Object.values(this.fields))\n        if (v.default)\n          defaults[v.name] = v.default;\n      if (this.scope.ngDefaultValues)\n        Object.assign(defaults, this.scope.$eval(this.scope.ngDefaultValues));\n      if (this.action.context.default_values)\n        Object.assign(defaults, this.action.context.default_values);\n      if (defaultValues)\n        Object.assign(defaults, defaultValues);\n      if (res)\n        Object.assign(defaults, res);\n\n      // eval functions values\n      for (let [k, v] of Object.entries(defaults))\n        if (_.isFunction(v)) {\n          v = v(defaults, this);\n          if (!_.isUndefined(v))\n            defaults[k] = v;\n        }\n      this.setValues(defaults);\n    }\n\n    _new() {\n      return Katrid.Data.createRecord({}, this);\n    }\n\n    setValues(values) {\n      Object.entries(values).forEach(([k, v]) => {\n        let fld = this.fields[k];\n        if (fld)\n          fld.fromJSON(v, this);\n        else\n          this.scope.record[k] = v;\n      });\n\n      this.scope.$apply();\n    }\n\n    edit() {\n      this.state = DataSourceState.editing;\n    }\n\n    toClientValue(attr, value) {\n      const field = this.scope.view.fields[attr];\n      if (field) {\n        if (field.type === 'DateTimeField') {\n          value = new Date(value);\n        }\n      }\n      return value;\n    }\n\n    fieldByName(fieldName) {\n      if (this.scope.views)\n        return this.scope.views.form.fields[fieldName];\n      else\n        return this.scope.view.fields[fieldName];\n    }\n\n    set state(state) {\n      // Clear modified fields information\n      this._modifiedFields = [];\n      this._state = state;\n      this.inserting = state === DataSourceState.inserting;\n      this.editing = state === DataSourceState.editing;\n      this.loading = state === DataSourceState.loading;\n      this.changing =  [DataSourceState.editing, DataSourceState.inserting].includes(this.state);\n      if (this.scope)\n        this.scope.$emit('dataStateChange', this);\n    }\n\n    get browsing() {\n      return this._state === DataSourceState.browsing;\n    }\n\n    childByName(fieldName) {\n      for (let child of this.children) {\n        if (child.fieldName === fieldName)\n          return child;\n      }\n    }\n\n    get state() {\n      return this._state;\n    }\n\n    get record() {\n      return this.scope.record;\n    }\n\n    set recordId(value) {\n      // refresh record id\n      this.scope.recordId = value;\n      // refresh children\n      // avoid grid field delayed\n      for (let child of this.children)\n        child.pendingMasterId = value;\n      this.scope.$broadcast('masterChanged', this, value);\n    }\n\n    get recordId() {\n      return this.scope.recordId;\n    }\n\n    set record(rec) {\n      // Track field changes\n      this.scope.record = Katrid.Data.createRecord(rec, this);\n      this.recordId = rec.id;\n      this._pendingChanges = false;\n      if (this.scope.form)\n        this.scope.form.$setPristine();\n      // this.state = DataSourceState.browsing;\n    }\n\n    next() {\n      return this.moveBy(1);\n    }\n\n    prior() {\n      return this.moveBy(-1);\n    }\n\n    nextPage() {\n      let p = this.recordCount / this.pageLimit;\n      if (Math.floor(p)) {\n        p++;\n      }\n      if (p > (this.pageIndex + 1)) {\n        this.pageIndex++;\n      }\n    }\n\n    prevPage() {\n      if (this.pageIndex > 1) {\n        this.pageIndex--;\n      }\n    }\n\n    set recordIndex(index) {\n      this._recordIndex = index;\n      this.scope.record = this.scope.records[index];\n      if (!this.parent)\n        return Katrid.app.$location.search('id', this.scope.record.id);\n      // load record\n      this.scope.recordId = null;\n      // set new id on browser address\n    }\n\n    get recordIndex() {\n      return this._recordIndex;\n    }\n\n    async expandGroup(index, row) {\n      let params = [];\n      if (this._params)\n        params = params.concat(this._params);\n      if (row.$params)\n        params = params.concat(row.$params);\n      if (row.$level === (this.groups.length - 1)) {\n        let res = await this.model.search({params});\n        if (res.data) {\n          row.$children = res.data;\n          this.scope.$apply(() => {\n            this.scope.groups.splice.apply(this.scope.groups, [index + 1, 0].concat(res.data));\n          })\n        }\n        this.scope.records = this._chain();\n      } else {\n        // expand next group level\n        let rows = await this._loadGroup(this.groups, row.$level + 1, this._params, row);\n        row.$children = rows;\n        this.scope.groups.splice.apply(this.scope.groups, [index + 1, 0].concat(rows));\n        this.scope.$apply();\n      }\n\n      // .then(res => {\n      //   console.log('')\n      //   if (res.ok && res.result.data) {\n      //     return this.action.scope.$apply(() => {\n      //       rg._children = res.result.data;\n      //       return this.action.scope.records.splice.apply(this.scope.records, [index + 1, 0].concat(res.result.data));\n      //     });\n      //   }\n    }\n\n    collapseGroup(index, row) {\n      let collapse = (index, row) => {\n        console.log('collapse', index, row);\n        if (row.$children && row.$children.length && row.$level !== (this.groups.length - 1))\n          row.$children.map(obj => collapse(this.scope.groups.indexOf(obj), obj));\n        if (row.$children && row.$children.length)\n          this.scope.groups.splice(index+1, row.$children.length);\n        row.$children = [];\n      };\n      collapse(index, row);\n      this.scope.records = this._chain();\n    }\n\n    _chain() {\n      let records = [];\n      for (let obj of this.scope.groups)\n        if (obj.$hasChildren && obj.$expanded && obj.$children.length)\n          records = records.concat(obj.$children);\n      return records;\n    }\n\n    _applyResponse(res) {\n      if (res) {\n        if (res.value)\n          this.setValues(res.value);\n        this.scope.$apply();\n      }\n    }\n\n    async dispatchEvent(name, ...args) {\n      let res = await this.model.rpc(name, ...args);\n      this._applyResponse(res);\n    }\n\n    get model() {\n      return this.scope.model;\n    }\n\n    open() {\n      this.search({}, 1, this.action.view.fields);\n    }\n\n    get parent() {\n      return this.masterSource;\n    }\n\n    set parent(value) {\n      this._masterSource = value;\n    }\n\n    $setDirty(field) {\n      let form = this.scope.form;\n      if (form) {\n        let control = form[field];\n        if (control)\n          control.$setDirty();\n      } else if (this.action)\n        this.action.setDirty(field);\n    }\n\n    destroyChildren() {\n      for (let child of this.children)\n        child.scope.$destroy();\n      this.children = [];\n    }\n  }\n\n\n  Katrid.Data.DataSource = DataSource;\n  Katrid.Data.DataSourceState = DataSourceState;\n\n})();\n","(function() {\n\n  function toCamelCase(s) {\n    // remove all characters that should not be in a variable name\n    // as well underscores an numbers from the beginning of the string\n    s = s.replace(/([^a-zA-Z0-9_\\- ])|^[_0-9]+/g, \"\").trim().toLowerCase();\n\n    // uppercase letters preceeded by a hyphen or a space\n    s = s.replace(/([ -]+)([a-zA-Z0-9])/g, function(a,b,c) {\n      return c.toUpperCase();\n    });\n\n    // uppercase letters following numbers\n    s = s.replace(/([0-9]+)([a-zA-Z])/g, function(a,b,c) {\n      return b + c.toUpperCase();\n    });\n\n    return s;\n  }\n\n  class Field {\n    constructor(info) {\n      this.cols = info.cols || 6;\n      this.visible = true;\n      this._info = info;\n      this.cssClass = info.type;\n      this.caption = info.caption || info.name;\n      this.helpText = this._info.help_text;\n      this.required = this._info.required;\n      this.onChange = this._info.onchange;\n      this.nolabel = false;\n\n      if (this._info.visible === false)\n        this.visible = false;\n      this.readonly = this._info.readonly;\n      if (!this.readonly)\n        this.readonly = false;\n\n      this.displayChoices = _.object(info.choices);\n      this.choices = info.choices;\n\n      if (info.choices)\n        this.template = {\n          list: 'view.list.selection-field.jinja2',\n          form: 'view.form.selection-field.jinja2',\n        };\n      else\n        this.template = {\n          list: 'view.list.field.jinja2',\n          form: 'view.form.field.jinja2',\n        };\n\n      if (info.template)\n        this.template = Object.assign(this.template, info.template);\n\n      this.emptyText = '--';\n    }\n\n    static fromInfo(info) {\n      let cls = Katrid.Data.Fields[info.type] || StringField;\n      return new cls(info);\n    }\n\n    static fromArray(fields) {\n      let r = {};\n      Object.keys(fields).map(k => r[k] = this.fromInfo(fields[k]));\n      return r;\n    }\n\n    render(viewType, el, context) {\n      this.$el = el;\n      let attrs = {};\n      for (let attr of el[0].attributes) {\n        attrs[attr.name] = attr.value;\n        let camelCase = toCamelCase(attr.name);\n        if (camelCase !== attr.name)\n          attrs[camelCase] = attr.value;\n      }\n\n      if (attrs.cols)\n        this.cols = attrs.cols;\n      if (attrs.ngReadonly)\n        this.ngReadonly = attrs.ngReadonly;\n      if (attrs.domain)\n        this.domain = attrs.domain;\n      if (attrs.visible === 'false')\n        this.visible = false;\n      else if (attrs.visible === 'true')\n        this.visible = true;\n      if (attrs.ngShow)\n        this.ngShow = attrs.ngShow;\n      if (attrs.ngIf)\n        this.ngIf = attrs.ngIf;\n      if (attrs.ngClass)\n        this.ngClass = attrs.ngClass;\n      this.attrs = attrs;\n\n      context['field'] = this;\n      context['attrs'] = attrs;\n\n      // replace the field content by its html content\n      context['html'] = el.html();\n\n      return Katrid.app.getTemplate(this.template[viewType], context);\n    }\n\n    assign(el) {\n      this.$el = el;\n      let caption = el.attr('label');\n      if (!_.isUndefined(caption))\n          this.caption = caption;\n      let readonly = el.attr('ng-readonly');\n      let invisible = el.attr('invisible');\n      if (!_.isUndefined(invisible))\n        this.visible = false;\n      if (!_.isUndefined(readonly))\n        this.ngReadonly = readonly;\n      let cols = el.attr('cols');\n      if (!_.isUndefined(cols))\n        this.cols = cols;\n\n    }\n\n    fromJSON(value, dataSource) {\n      dataSource.record[this.name] = value;\n    }\n\n    get validAttributes() {\n       return ['name', 'nolabel', 'readonly', 'required'];\n    }\n\n    getAttributes() {\n      let res = {};\n      let validAttrs = this.validAttributes;\n      if (this.ngReadonly)\n        res['ng-readonly'] = this.ngReadonly;\n      else if (this.readonly)\n        res['readonly'] = this.readonly;\n      res['ng-model'] = 'record.' + this.name;\n      if (attrs.ngFieldChange) {\n        res['ng-change'] = attrs.ngFieldChange;\n        console.log('change', attrs.ngFieldChange);\n      }\n      if (this.required)\n        res['required'] = this.required;\n      return res;\n    }\n\n    get hasChoices() {\n      return this._info.choices && this._info.choices.length > 0;\n    }\n\n   get name() {\n      return this._info.name;\n    }\n\n    get model() {\n      return this._info.model;\n    }\n\n    get maxLength() {\n      return this._info.max_length;\n    }\n\n    get type() {\n      return this._info.type;\n    }\n\n    get paramTemplate() {\n      return 'view.param.String';\n    }\n\n    format(value) {\n      return value.toString();\n    }\n\n    toJSON(val) {\n      return val;\n    }\n\n    createWidget(widget, scope, attrs, element) {\n      if (!widget) {\n        // special fields case\n        if (this.hasChoices)\n          widget = 'SelectionField';\n      }\n      let cls = Katrid.ui.Widgets[widget || this.type] || Katrid.ui.Widgets.StringField;\n      return new cls(scope, attrs, this, element);\n    }\n\n    validate() {\n\n    }\n\n    get defaultCondition() {\n      return '=';\n    }\n\n    isControlVisible(condition) {\n      switch (condition) {\n        case 'is null':\n          return false;\n        case 'is not null':\n          return false;\n      }\n      return true;\n    }\n\n  }\n\n  class StringField extends Field {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n    }\n  }\n\n  class PasswordField extends StringField {\n    constructor(info) {\n      if (!info.template)\n        info.template = {};\n      if (!info.template.form)\n        info.template.form = 'view.form.password.jinja2';\n      if (!info.template.list)\n        info.template.list = 'view.list.password.jinja2';\n      super(info);\n    }\n  }\n\n\n  class BooleanField extends Field {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n      this.template.form = 'view.form.boolean-field.jinja2';\n      this.template.list = 'view.list.boolean-field.jinja2';\n      this.nolabel = true;\n    }\n\n    get paramTemplate() {\n      return 'view.param.Boolean';\n    }\n\n  }\n\n  class DateField extends Field {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n      this.template.form = 'view.form.date-field.jinja2';\n      this.template.list = 'view.list.date-field.jinja2';\n    }\n\n    toJSON(val) {\n      return val;\n    }\n\n    get paramTemplate() {\n      return 'view.param.Date';\n    }\n\n    format(value) {\n      if (_.isString(value))\n        return moment(value).format(Katrid.i18n.gettext('yyyy-mm-dd').toUpperCase());\n      return '';\n    }\n\n    getAttributes(attrs) {\n      let res = super.getAttributes(attrs);\n      res['type'] = 'date';\n      return res;\n    }\n  }\n\n  class DateTimeField extends DateField {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n      this.template.form = 'view.form.datetime-field.jinja2';\n      this.template.list = 'view.list.datetime-field.jinja2';\n    }\n\n    get paramTemplate() {\n      return 'view.param.DateTime';\n    }\n\n    getAttributes(attrs) {\n      let res = super.getAttributes(attrs);\n      res['type'] = 'datetime-local';\n      return res;\n    }\n  }\n\n\n  class TimeField extends DateTimeField {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n      this.template.form = 'view.form.time-field.jinja2';\n      this.template.list = 'view.list.time-field.jinja2';\n    }\n  }\n\n\n  class NumericField extends Field {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n      if (Katrid.UI.isMobile)\n        this.template.form = 'view.form.numpad-field.pug';\n      else\n        this.template.form = 'view.form.numeric-field.jinja2';\n      this.template.list = 'view.list.numeric-field.jinja2';\n    }\n\n    fromJSON(value, dataSource) {\n      dataSource.record[this.name] = parseFloat(value);\n    }\n\n    toJSON(val) {\n      if (val && _.isString(val))\n        return parseFloat(val);\n      return val;\n    }\n\n  }\n\n\n  class IntegerField extends Field {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 3;\n      super(...arguments);\n    }\n\n    toJSON(val) {\n      if (val && _.isString(val))\n        return parseInt(val);\n      return val;\n    }\n\n    get paramTemplate() {\n      return 'view.param.Integer';\n    }\n  }\n\n  class FloatField extends NumericField {\n  }\n\n  class DecimalField extends NumericField {\n    constructor() {\n      super(...arguments);\n      this.decimalPlaces = 2;\n      if (this._info.attrs) {\n        this.decimalPlaces = this._info.attrs.decimal_places || 2;\n      }\n    }\n  }\n\n  class ForeignKey extends Field {\n    constructor(info) {\n      super(...arguments);\n      this.domain = info.domain;\n      Object.assign(this.template, {\n        list: 'view.list.foreignkey.jinja2',\n        form: 'view.form.foreignkey.jinja2',\n      });\n    }\n\n    assign(el) {\n      super.assign(el);\n      let domain = $(el).attr('domain');\n      if (domain)\n        this.domain = domain;\n    }\n\n    toJSON(val) {\n      if (_.isArray(val))\n        return val[0];\n      return val;\n    }\n\n    get validAttributes() {\n      return super.validAttributes.concat(['domain']);\n    }\n  }\n\n  class OneToManyField extends Field {\n    constructor(info) {\n      if (!info.cols)\n        info.cols = 12;\n      super(...arguments);\n      this.template.form = 'view.form.grid.jinja2';\n    }\n    get field() {\n      return this._info.field;\n    }\n\n    get validAttributes() {\n      return super.validAttributes.concat(['inline-editor', 'ng-default-values']);\n    }\n\n    fromJSON(val, dataSource) {\n      if (val && val instanceof Array) {\n        let child = dataSource.childByName(this.name);\n        val.map((obj) => {\n          if (obj.action === 'CLEAR') {\n            child.scope.records = [];\n            dataSource.record[this.name] = [];\n          }\n          else if (obj.action === 'CREATE') {\n            child.scope.addRecord(obj.values);\n          }\n        });\n          child.scope.$apply();\n\n      }\n    }\n  }\n\n  class ManyToManyField extends ForeignKey {\n    toJSON(val) {\n      if (_.isArray(val))\n        return val.map(obj => _.isArray(obj) ? obj[0] : obj);\n      else if (_.isString(val))\n        val = val.split(',');\n      return val;\n    }\n  }\n\n  class TextField extends StringField {\n    constructor(info) {\n      super(...arguments);\n      if (!info.template || (info.template && !info.template.form))\n        this.template.form = 'view.form.text-field.jinja2';\n    }\n  }\n\n  class XmlField extends TextField {\n    constructor(info) {\n      super(...arguments);\n      // TODO change to code editor\n      if (!info.template || (info.template && !info.template.form))\n        this.template.form = 'view.form.code-editor.jinja2';\n    }\n  }\n\n  class JsonField extends TextField {\n    constructor(info) {\n      super(...arguments);\n      // TODO change to code editor\n      if (!info.template || (info.template && !info.template.form))\n        this.template.form = 'view.form.json-field.jinja2';\n    }\n  }\n\n  class PythonCodeField extends TextField {\n    constructor(info) {\n      super(...arguments);\n      console.log('python code field');\n      if (!info.template || (info.template && !info.template.form))\n        this.template.form = 'view.form.python-code.jinja2';\n    }\n  }\n\n  class ImageField extends Field {\n    constructor(info) {\n      if (!info.template)\n        info.template = {};\n      if (!info.template.form)\n        info.template.form = 'view.form.image-field.jinja2';\n      super(...arguments);\n      this.noImageUrl = '/static/web/assets/img/no-image.png';\n    }\n\n    getAttributes(attrs) {\n      let res = super.getAttributes(attrs);\n      res.ngSrc = attrs.ngEmptyImage || (attrs.emptyImage && (`'${attrs.emptyImage}`)) || `'${this.noImageUrl}'`;\n      res.ngSrc = `{{ ${res['ng-model']} || ${res.ngSrc} }}`;\n      return res;\n    }\n\n    get ngSrc() {\n      let ngSrc = this.attrs.ngEmptyImage || (this.attrs.emptyImage && (`'${this.attrs.emptyImage}`)) || `'${this.noImageUrl}'`;\n      ngSrc = `\\${ record.${this.name} || ${ngSrc} }`;\n      return ngSrc\n    }\n  }\n\n  Katrid.Data.Fields = {\n    Field,\n    StringField,\n    PasswordField,\n    IntegerField,\n    FloatField,\n    DecimalField,\n    DateTimeField,\n    TimeField,\n    ForeignKey,\n    OneToManyField,\n    ManyToManyField,\n    TextField,\n    XmlField,\n    JsonField,\n    PythonCodeField,\n    DateField,\n    BooleanField,\n    ImageField,\n  }\n\n\n})();\n","var Katrid;\n(function (Katrid) {\n    var UI;\n    (function (UI) {\n        Katrid.UI = {\n            keyCode: {\n                BACKSPACE: 8,\n                COMMA: 188,\n                DELETE: 46,\n                DOWN: 40,\n                END: 35,\n                ENTER: 13,\n                ESCAPE: 27,\n                HOME: 36,\n                LEFT: 37,\n                PAGE_DOWN: 34,\n                PAGE_UP: 33,\n                PERIOD: 190,\n                RIGHT: 39,\n                SPACE: 32,\n                TAB: 9,\n                UP: 38\n            },\n            toggleFullScreen() {\n                if (!document.fullscreenElement &&\n                    !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement) {\n                    if (document.documentElement.requestFullscreen) {\n                        document.documentElement.requestFullscreen();\n                    }\n                    else if (document.documentElement.msRequestFullscreen) {\n                        document.documentElement.msRequestFullscreen();\n                    }\n                    else if (document.documentElement.mozRequestFullScreen) {\n                        document.documentElement.mozRequestFullScreen();\n                    }\n                    else if (document.documentElement.webkitRequestFullscreen) {\n                        document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n                    }\n                }\n                else {\n                    if (document.exitFullscreen) {\n                        document.exitFullscreen();\n                    }\n                    else if (document.msExitFullscreen) {\n                        document.msExitFullscreen();\n                    }\n                    else if (document.mozCancelFullScreen) {\n                        document.mozCancelFullScreen();\n                    }\n                    else if (document.webkitExitFullscreen) {\n                        document.webkitExitFullscreen();\n                    }\n                }\n            }\n        };\n        Katrid.UI.uiKatrid = angular.module('ui.katrid', []);\n    })(UI = Katrid.UI || (Katrid.UI = {}));\n})(Katrid || (Katrid = {}));\n","(function () {\n\n  class ActionManager extends Array {\n    constructor() {\n      super();\n      this.currentAction = null;\n      this.mainAction = null;\n    }\n\n    addAction(action) {\n      if (!this.mainAction)\n        this.mainAction = action;\n      this.push(action);\n      this.currentAction = action;\n    }\n\n    back(action, url) {\n      if (action)\n        this.action = action;\n      else if (this.length > 1)\n        this.action = this[this.length-2];\n      this.action.$attach();\n      this.action.refreshBreadcrumb();\n      if (angular.isString(url))\n        Katrid.app.loadPage(url);\n      else if (url)\n        Katrid.app.$location.search(url);\n    }\n\n    removeAction(action) {\n      this.splice(this.indexOf(action), this.length);\n      if (this.length === 0)\n        this.mainAction = null;\n    }\n\n    get action() {\n      return this.currentAction;\n    }\n\n    set action(action) {\n      let i = this.indexOf(action);\n      if (i > -1) {\n        i++;\n        while (this.length > i)\n          this[i].$destroy();\n        this.currentAction = action;\n      }\n    }\n\n    clear() {\n      for (let action of this)\n        action.$destroy();\n      this.length = 0;\n      this.mainAction = null;\n      this.currentAction = null;\n    }\n\n    get path() {\n      return this.action.path;\n    }\n\n    doAction(action) {\n\n    }\n\n    async onHashChange(params, reset) {\n      let actionId = params.action;\n\n      // clear action manager history\n      if (reset)\n        this.clear();\n\n      // check if action has changed\n      let oldAction, action;\n      action = oldAction = this.currentAction;\n\n\n      // action auto detection\n      if (!actionId && params.model && (!action || (action.params && (action.params.model !== params.model)))) {\n        // get a virtual window action\n        let svc = new Katrid.Services.Model(params.model);\n        let actionInfo = await svc.rpc('get_formview_action', [params.id]);\n        let scope = this.createScope();\n        action = scope.action = new Katrid.Actions[actionInfo.action_type](actionInfo, scope, params);\n      } else if (!(this.currentAction && (this.currentAction.info.id == actionId))) {\n        if (this.currentAction && reset)\n          this.currentAction.$destroy();\n        let actionInfo = await Katrid.Services.Actions.load(actionId);\n        let scope = this.createScope();\n        action = scope.action = new Katrid.Actions[actionInfo.action_type](actionInfo, scope, params);\n      }\n\n      await action.onHashChange(params);\n    }\n\n    createScope() {\n      let scope = Katrid.app.$scope.$new(true);\n      scope._ = _;\n      return scope;\n    }\n\n    get breadcrumb() {\n      if (this._breadcrumb)\n        return this._breadcrumb;\n      let breadcrumb = [];\n      for (let action of this) {\n        let bc = action.breadcrumb;\n        if (bc && bc.length) {\n          for (let b of bc)\n            b.isLeaf = false;\n          breadcrumb.push(...bc);\n        }\n      }\n      breadcrumb[breadcrumb.length-1].isLeaf = true;\n      this._breadcrumb = breadcrumb;\n      return breadcrumb;\n    }\n  }\n\n  class Action {\n    static initClass() {\n      this.actionType = null;\n      this._context = null;\n    }\n\n    constructor(info, scope, params, $container) {\n      this.info = info;\n      this.scope = scope;\n      Katrid.app.actionManager.addAction(this);\n\n      if (!$container)\n        $container = Katrid.app.$element;\n      this.$parent = $container;\n    }\n\n    $destroy() {\n      Katrid.app.actionManager.removeAction(this);\n      this.scope.$destroy();\n      if (this.$element)\n        // check if there's an element\n        this.$element.remove();\n      else\n        // or clear the container\n        this.$parent.empty();\n    }\n\n    get id() {\n      return this.info.id;\n    }\n\n    get context() {\n      if (!this._context) {\n        if (_.isString(this.info.context))\n          this._context = JSON.parse(this.info.context);\n        else\n          this._context = {};\n      }\n      return this._context;\n    }\n\n    doAction(act) {\n      let type = act.type || act.action_type;\n      return Katrid.Actions[type].dispatchAction(this, act);\n    }\n\n    openObject(evt) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      if (evt.ctrlKey) {\n        window.open(evt.target.href);\n        return false;\n      } else {\n        console.log(evt.target.href);\n        location.hash = evt.target.href;\n      }\n      return false;\n    }\n\n    restore() {}\n\n    apply() {}\n    backTo(index) {\n      let b = Katrid.app.actionManager.breadcrumb[index];\n      if (b)\n        Katrid.app.actionManager.back(b.action, b.url);\n      return;\n      if (this._currentPath !==  this._unregisterHook && (Katrid.app.actionManager.length > 1))\n        this._unregisterHook();\n\n      // restore to query view\n      let action = Katrid.app.actionManager[index];\n      if ((index === 0) && (viewType === 0))\n        return action.restore(action.searchViewType || action.viewModes[0]);\n      else if ((index === 0) && (viewType === 'form'))\n        return action.restore('form');\n\n      Katrid.app.actionManager.action = action;\n\n      if (!viewType)\n        viewType = 'form';\n\n      let location;\n      location = action.currentUrl;\n      action.info.__cached = true;\n      let p = this.location.path(location, true, action.info);\n      let search = action._currentParams[viewType];\n      console.log('search', search);\n      if (search)\n        p.search(search);\n    }\n\n    execute() {}\n\n    getCurrentTitle() {\n      return this.info.display_name;\n    }\n\n    search() {\n      if (!this.isDialog) {\n        return this.location.search.apply(null, arguments);\n      }\n    }\n\n\n    async onHashChange(params) {\n      location.hash = '#/app/?' + $.param(params);\n      await this.execute();\n    }\n  }\n  Action.initClass();\n\n\n  class ViewAction extends Action {\n    static initClass() {\n      this.actionType = 'ir.action.view';\n    }\n\n    async onHashChange(params) {\n      location.hash = '#/app/?' + $.param(params);\n      let svc = new Katrid.Services.Model('ir.action.view');\n      let res = await svc.post('get_view', { args: [ this.info.view[0] ] });\n      let content = res.content;\n      Katrid.app.$element.html(Katrid.Core.$compile(content)(this.scope));\n    }\n  }\n  ViewAction.initClass();\n\n\n  class UrlAction extends Action {\n    static initClass() {\n      this.actionType = 'ir.action.url';\n    }\n\n    constructor(info, scope, location) {\n      super(info, scope, location);\n      window.location.href = info.url;\n    }\n  }\n  UrlAction.initClass();\n\n\n  Katrid.Actions = {\n    Action,\n    ViewAction,\n    UrlAction,\n    ActionManager,\n  };\n\n\n  Katrid.Actions[ViewAction.actionType] = ViewAction;\n  Katrid.Actions[UrlAction.actionType] = UrlAction;\n\n\n})();\n","(function() {\n\n  class ClientAction extends Katrid.Actions.Action {\n    static initClass() {\n      this.actionType = 'ir.action.client';\n      this.registry = {};\n    }\n\n    static register(tag, obj) {\n      this.registry[tag] = obj;\n    }\n\n    static executeTag(parent, act) {\n      // get action\n      let action = this.registry[act.tag];\n      if (action.prototype instanceof Katrid.UI.Views.ActionView) {\n        action = new action(parent.scope);\n        action.renderTo(parent);\n      }\n      else console.log('is a function');\n    }\n\n    static tagButtonClick(btn) {\n      let action = {\n        type: 'ir.action.client',\n        tag: btn.attr('name'),\n        target: btn.attr('target') || 'new',\n      };\n\n      action = new ClientAction(action, Katrid.Actions.actionManager.action.scope, Katrid.Actions.actionManager.action.location);\n      action.execute();\n    }\n\n    tag_refresh() {\n      this.dataSource.refresh();\n    }\n\n    get templateUrl() {\n      console.log(this.tag);\n      return this.tag.templateUrl;\n    }\n\n    async execute() {\n      let tag = ClientAction.registry[this.info.tag];\n      this.tag = tag;\n      if (tag.prototype instanceof Katrid.UI.Views.ClientView) {\n        this.tag = new tag(this);\n        let el = await this.tag.render();\n        if (this.info.target === 'new') {\n          el = el.modal();\n        } else {\n          $('#katrid-action-view').empty().append(el);\n        }\n      } else if (_.isString(tag))\n        this[tag].apply(this);\n    }\n\n    async routeUpdate(location) {\n      // this.execute();\n    }\n\n    get template() {\n      return this.tag.template;\n    }\n  }\n\n  ClientAction.initClass();\n\n  Katrid.Actions.ClientAction = ClientAction;\n  Katrid.Actions[ClientAction.actionType] = ClientAction;\n\n})();\n","(function() {\n\n  class WindowAction extends Katrid.Actions.Action {\n    static initClass() {\n      this.actionType = 'ir.action.window';\n    }\n\n    constructor(info, scope, params, $container) {\n      super(info, scope, params, $container);\n      this.viewMode = info.view_mode;\n      this.viewModes = this.viewMode.split(',');\n      if (info.model)\n        scope.model = this.model = new Katrid.Services.Model(info.model);\n      this.dataSource = new Katrid.Data.DataSource(scope, this);\n      scope.$on('dataStateChange', this.onDataStateChange);\n      scope.$on('afterCancel', (evt, dataSource) => {\n        if (dataSource === this.dataSource)\n          this.afterCancel(evt, dataSource);\n      });\n    }\n\n    afterCancel(evt, dataSource) {\n      if (dataSource.state === Katrid.Data.DataSourceState.inserting) {\n        this.dataSource.record = {};\n        this.back();\n      }\n    }\n\n    back() {\n      Katrid.app.actionManager.history.back();\n    }\n\n    setDirty(field) {\n      const control = this.form[field];\n      if (control) {\n        control.$setDirty();\n      }\n    }\n\n    async onHashChange(params) {\n      // normalize hash\n      let invalidate = false;\n      let allowedParams = ['action', 'view_type', 'menu_id', 'model'];\n      let loadRecord = (this.params && (this.params.id !== params.id));\n      this.params = {};\n      if (!params.view_type) {\n        this.params.view_type = this.viewModes[0];\n        invalidate = true;\n      }\n      if (!params.model) {\n        this.params.model = this.info.model;\n        invalidate = true;\n      }\n\n      Object.assign(this.params, params);\n      // view type form accepts id param\n      if (this.params.view_type === 'form')\n        allowedParams.splice(0, 0, 'id');\n      if (Object.keys(this.params).length === allowedParams.length) {\n        for (let k of Object.keys(this.params))\n          if (!allowedParams.includes(k)) {\n            invalidate = true;\n          }\n      } else\n        invalidate = true;\n\n      // invalidate location hash\n      if (invalidate) {\n        let oldParams = this.params;\n        this.params = {};\n        for (let k of allowedParams)\n          this.params[k] = oldParams[k];\n\n        // the action param is not required if empty\n        if (!this.params.action)\n          delete this.params.action;\n\n        // redirect to new params\n        location.hash = '#/app/?' + $.param(this.params);\n      }\n\n      // apply params\n      let viewType = this.params.view_type;\n      if (viewType !== this.viewType) {\n        this.viewType = viewType;\n        await this.execute();\n      }\n      if (this.params.id && (this.dataSource.recordId != this.params.id))\n        await this.dataSource.get(this.params.id);\n    }\n\n    rpc(method, data, event) {\n      if (event)\n        event.stopPropagation();\n      if (!data)\n        data = {};\n      else if (_.isArray(data))\n        data = { args: data };\n      else if (!_.isObject(data))\n        data = { args: [data] };\n      this.model.rpc(method, data.args, data.kwargs);\n    }\n\n    getContext() {\n      let ctx = super.getContext();\n      let sel = this.selection;\n      if (sel && sel.length) {\n        ctx.active_id = sel[0];\n        ctx.active_ids = sel;\n      }\n      return ctx;\n    }\n\n    restore(viewType) {\n      // restore the last search mode view type\n      let url = this._currentPath || this.location.$$path;\n      let params = this._currentParams[viewType] || {};\n      params['view_type'] = viewType;\n      if (Katrid.app.actionManager.length > 1) {\n        params['actionId'] = this.info.id;\n        this.$state.go('actionView', params);\n        // this.location.path(url);\n        // this.location.search(params);\n      } else {\n        this.viewType = viewType;\n      }\n      // window.location.href = '/web/#' + url + '?view_type=list';\n      // this.setViewType(viewType, this._currentParams[viewType]);\n    }\n\n    getCurrentTitle() {\n      if (this.viewType === 'form') {\n        return this.scope.record.display_name;\n      }\n      return super.getCurrentTitle();\n    }\n\n    switchView(viewType, params) {\n      if (viewType !== this.viewType) {\n        this.viewType = viewType;\n        this.execute();\n        let search = Katrid.app.$location.$$search;\n        Object.assign(search, params);\n        search.view_type = viewType;\n        Katrid.app.$location.search(search);\n      }\n    }\n\n    createNew() {\n      this.switchView('form', { id: null });\n    }\n\n    async deleteSelection() {\n      let sel = this.selection;\n      if (!sel)\n        return false;\n      if (\n        ((sel.length === 1) && confirm(Katrid.i18n.gettext('Confirm delete record?'))) ||\n        ((sel.length > 1) && confirm(Katrid.i18n.gettext('Confirm delete records?')))\n      ) {\n        await this.model.destroy(sel);\n        const i = this.scope.records.indexOf(this.scope.record);\n        this.viewType = 'list';\n        this.dataSource.refresh();\n      }\n    }\n\n    async copy() {\n      this.viewType = 'form';\n      await this.dataSource.copy(this.scope.record.id);\n      return false;\n    }\n\n    async copyTo(configId) {\n      if (this.scope.recordId) {\n        let svc = new Katrid.Services.Model('ir.copy.to');\n        let res = await svc.rpc('copy_to', [configId, this.scope.recordId]);\n        let model = new Katrid.Services.Model(res.model);\n        let views = await model.getViewInfo({ view_type: 'form' });\n        let wnd = new Katrid.ui.Dialogs.Window(this.scope, { view: views }, Katrid.Core.compile, null, model);\n        wnd.createNew({ defaultValues: res.value });\n      }\n    }\n\n    makeUrl(viewType) {\n      // get the default view mode\n      if (!viewType)\n        viewType = this.viewModes[0];\n\n      const search = {\n        action: this.info.id,\n        view_type: viewType,\n        menu_id: Katrid.app.$location.$$search.menu_id,\n      };\n      if ((viewType === 'form') && this.record)\n        search.id = this.record.id;\n      return search;\n    }\n\n    get record() {\n      // returns the active record\n      return this.scope.record;\n    }\n\n    get searchModes() {\n      // returns search view modes\n      return this.viewModes.filter(v => v !== 'form');\n    }\n\n    get breadcrumb() {\n      let breadcrumb = [];\n      if (this.searchModes.length) {\n        breadcrumb.push({ action: this, url: this.makeUrl(this.lastViewType), text: this.info.display_name });\n      }\n      if (this.viewType === 'form') {\n        let h = { action: this, url: this.makeUrl('form') };\n        if (this === Katrid.app.actionManager.currentAction)\n          h.text = '${ record.display_name }';\n        else\n          h.text = this.record && this.record.display_name;\n        breadcrumb.push(h);\n      }\n      return breadcrumb;\n    }\n\n    refreshBreadcrumb() {\n      Katrid.app.actionManager._breadcrumb = null;\n\n      let templ = Katrid.app.getTemplate('view.breadcrumb.jinja2', {\n        breadcrumb: Katrid.app.actionManager.breadcrumb,\n        action: this\n      });\n      templ = Katrid.Core.$compile(templ)(this.scope);\n      this.$element.find('.breadcrumb-nav').html(templ);\n    }\n\n    $detach() {\n      this.$element.detach();\n    }\n\n    $attach() {\n      this.$element.appendTo(this.$parent);\n    }\n\n    async execute() {\n      if (!this.views) {\n        let res = await this.model.loadViews({\n          views: this.info.views,\n          action: this.info.id,\n          toolbar: true\n        });\n        this.fields = res.fields;\n        this.fieldList = res.fieldList;\n        this.views = res.views;\n\n        // pre-render the action container\n        let templ = Katrid.app.getTemplate('ir.action.window.jinja2', { action: this });\n        templ = Katrid.Core.$compile(templ)(this.scope);\n        this.$parent.html(templ);\n        this.$element = templ;\n        this.$container = this.$element.find('.action-view-content:first');\n      }\n      this.refreshBreadcrumb();\n      this.scope.view = this.views[this.viewType];\n      let view = new Katrid.UI.Views[this.viewType](this, this.scope.view);\n\n      if (this.viewType !== 'form') {\n        this.lastViewType = this.viewType;\n        this.lastUrl = location.hash;\n      }\n\n      // render view to main container\n      view.renderTo(this.$container);\n      setTimeout(() => {\n        if ((this.viewType === 'form') && !Katrid.app.$location.$$search.id)\n          this.dataSource.insert();\n      })\n    }\n\n    get viewType() {\n      return this._viewType;\n    }\n\n    set viewType(value) {\n      if (value !== this._viewType) {\n        // invalidate the current record id\n        if (value !== 'form')\n          this.dataSource.recordId = null;\n        // destroy children fields\n        this.dataSource.destroyChildren();\n        this._viewType = value;\n      }\n\n      return;\n      if (!value)\n        value = this.viewModes[0];\n\n      if (value === this._viewType)\n        return;\n\n      if (!this._viewType)\n        this.searchViewType = this.viewModes[0];\n\n      this.view = this.views[value];\n      this._viewType = value;\n      this.switchView(value);\n\n      if (!this.scope.$$phase)\n        this.scope.$apply();\n\n      if (this.location.$$search.view_type !== value) {\n        this.location.search({ view_type: value });\n      }\n\n      $(Katrid).trigger('formReady', [this.scope]);\n    }\n\n    searchText(q) {\n      return this.location.search('q', q);\n    }\n\n    _prepareParams(params) {\n      const r = {};\n      for (let p of Array.from(params)) {\n        if (p.field && (p.field.type === 'ForeignKey')) {\n          r[p.field.name] = p.id;\n        } else {\n          r[p.id.name + '__icontains'] = p.text;\n        }\n      }\n      return r;\n    }\n\n    setSearchParams(params) {\n      let p = {};\n      if (this.info.domain)\n        p = $.parseJSON(this.info.domain);\n      for (let [k, v] of Object.entries(p)) {\n        let arg = {};\n        arg[k] = v;\n        params.push(arg);\n      }\n      return this.dataSource.search(params);\n    }\n\n    applyGroups(groups, params) {\n      return this.dataSource.groupBy(groups, params);\n    }\n\n    groupHeaderClick(record, index) {\n      console.log('group header click', record);\n      record.$expanded = !record.$expanded;\n      if (record.$expanded) {\n        this.dataSource.expandGroup(index, record);\n      } else {\n        this.dataSource.collapseGroup(index, record);\n      }\n    }\n\n    doViewAction(viewAction, target, confirmation, prompt) {\n      return this._doViewAction(this.scope, viewAction, target, confirmation, prompt);\n    }\n\n    _doViewAction(scope, viewAction, target, confirmation, prompt) {\n      let promptValue = null;\n      if (prompt) {\n        promptValue = window.prompt(prompt);\n      }\n      if (!confirmation || (confirmation && confirm(confirmation))) {\n        return this.model.doViewAction({ action_name: viewAction, target, prompt: promptValue })\n        .then(function(res) {\n          let msg, result;\n          if (res.status === 'open') {\n            return window.open(res.open);\n          }\n        });\n      }\n    }\n\n    async formButtonClick(id, meth, self) {\n      const res = await this.scope.model.rpc(meth, [id]);\n      if (res.open)\n        return window.open(res.open);\n      if (res.download) {\n        let a = document.createElement('a');\n        a.href = res.download;\n        a.click();\n        return;\n      }\n      if (res.tag === 'refresh')\n        this.dataSource.refresh();\n      if (res.type) {\n        const act = new (Katrid.Actions[res.type])(res, this.scope, this.scope.location);\n        act.execute();\n      }\n    };\n\n    doBindingAction(evt) {\n      this.selection;\n      Katrid.Services.Actions.load($(evt.currentTarget).data('id'))\n      .then(action => {\n\n        if (action.action_type === 'ir.action.report')\n          Katrid.Actions.ReportAction.dispatchBindingAction(this, action);\n\n      });\n    }\n\n    listRowClick(index, row, evt) {\n      if (row.$hasChildren) {\n        console.log('list row click');\n        this.groupHeaderClick(row, index);\n      } else {\n        const search = {\n          id: row.id,\n          action: this.info.id,\n          view_type: 'form',\n          menu_id: Katrid.app.$location.$$search.menu_id,\n        };\n        if (evt.ctrlKey) {\n          const url = `#${hash}`;\n          window.open(url);\n          return;\n        } else\n          Katrid.app.$location.search(search);\n        this.dataSource.recordIndex = index;\n      }\n    }\n\n    onDataStateChange(event, dataSource) {\n      let self = dataSource.scope.action;\n      if (dataSource.changing)\n        setTimeout(() => {\n          if (self.$element)\n            for (let el of Array.from(self.$element.find(\"input[type!=hidden].form-field:visible\"))) {\n              el = $(el);\n              if (!el.attr('readonly')) {\n                $(el).focus();\n                return;\n              }\n            }\n        });\n    }\n\n    autoReport() {\n      return this.model.autoReport()\n      .then(function(res) {\n        if (res.ok && res.result.open) {\n          return window.open(res.result.open);\n        }\n      });\n    }\n\n    showDefaultValueDialog() {\n      const html = Katrid.UI.Utils.Templates.getSetDefaultValueDialog();\n      const modal = $(Katrid.core.compile(html)(this.scope)).modal();\n      modal.on('hidden.bs.modal', function() {\n        $(this).data('bs.modal', null);\n        return $(this).remove();\n      });\n    }\n\n    selectToggle(el) {\n      this._selection = $(el).closest('table').find('td.list-record-selector :checkbox').filter(':checked');\n      this.selectionLength = this._selection.length;\n    }\n\n    get selection() {\n      if (this.viewType === 'form') {\n        if (this.scope.recordId)\n          return this.scope.recordId;\n        else\n          return;\n      }\n      if (this._selection)\n        return Array.from(this._selection).map((el) => ($(el).data('id')));\n    }\n\n    deleteAttachment(attachments, index) {\n      let att = attachments[index];\n      if (confirm(Katrid.i18n.gettext('Confirm delete attachment?'))) {\n        attachments.splice(index, 1);\n        Katrid.Services.Attachments.destroy(att.id);\n      }\n    }\n  }\n  WindowAction.initClass();\n\n  Katrid.Actions.WindowAction = WindowAction;\n  Katrid.Actions[WindowAction.actionType] = WindowAction;\n\n})();\n","(() => {\n\n  class Loader {\n    constructor(templateCache) {\n      this.$cache = templateCache;\n    }\n\n    getSource(name) {\n      return {\n        src: this.$cache.get(name),\n        path: name,\n        noCache: false,\n      }\n    }\n  }\n\n  class Templates {\n    constructor(app, templates) {\n      this.app = app;\n      Templates.env = new nunjucks.Environment(new Loader(app.$templateCache), { autoescape: false });\n      let oldGet = app.$templateCache.get;\n      app.$templateCache.get = name => {\n        return this.prepare(name, oldGet.call(this, name));\n      };\n      this.loadTemplates(app.$templateCache, templates);\n      for (let [k, v] of Object.entries(PRE_LOADED_TEMPLATES))\n        app.$templateCache.put(k, v);\n    }\n\n    prepare(name, templ) {\n      if (_.isUndefined(templ)) throw Error('Template not found: ' + name);\n      if (templ.tagName === 'SCRIPT')\n        return templ.innerHTML;\n      return templ;\n    }\n\n    compileTemplate(base, templ) {\n      let el = $(base);\n      templ = $(templ.innerHTML);\n      for (let child of Array.from(templ))\n        if (child.tagName === 'JQUERY') {\n          child = $(child);\n          let sel = child.attr('selector');\n          let op = child.attr('operation');\n          if (sel) sel = $(el).find(sel);\n          else sel = el;\n          sel[op](child[0].innerHTML);\n        }\n      return el[0].innerHTML;\n    }\n\n    loadTemplates(templateCache, res) {\n      let templateLst = {};\n      let readTemplates = el => {\n        if (el.tagName === 'TEMPLATES') Array.from(el.children).map(readTemplates);\n        else if (el.tagName === 'SCRIPT') {\n          templateLst[el.id] = el.innerHTML;\n        }\n      };\n      let preProcess = el => {\n        if (el.tagName === 'TEMPLATES') Array.from(el.children).map(preProcess);\n        else if (el.tagName === 'SCRIPT') {\n          let base = el.getAttribute('extends');\n          let id = el.getAttribute('id') || base;\n          if (base) {\n            el = templateLst[base] + el;\n          } else\n            id = el.id;\n          templateCache.put(id, el);\n        }\n      };\n      let parser = new DOMParser();\n      let doc = parser.parseFromString(res, 'text/html');\n      let root = doc.firstChild.children[1].firstChild;\n      readTemplates(root);\n      preProcess(root);\n    }\n\n  }\n\n  let PRE_LOADED_TEMPLATES = {};\n\n  Katrid.UI.registerTemplate = function(name, tmpl) {\n    PRE_LOADED_TEMPLATES[name] = tmpl;\n  };\n\n  Katrid.UI.Templates = Templates;\n  Katrid.UI.Templates.PRE_LOADED_TEMPLATES = PRE_LOADED_TEMPLATES;\n\n})();\n","(function() {\n\n  class ReportAction extends Katrid.Actions.Action {\n    static initClass() {\n      this.actionType = 'ir.action.report';\n    }\n\n    static async dispatchBindingAction(parent, action) {\n      let format = localStorage.katridReportViewer || 'pdf';\n      let sel = parent.selection;\n      console.log('selection ', sel);\n      if (sel)\n        sel = sel.join(',');\n      let params = { data: [{ name: 'id', value: sel }] };\n      const svc = new Katrid.Services.Model('ir.action.report');\n      let res = await svc.post('export_report', { args: [action.id], kwargs: { format, params } });\n      if (res.open)\n        return window.open(res.open);\n    }\n\n    get name() {\n      return this.info.name;\n    }\n\n    constructor(info, scope, location) {\n      super(info, scope, location);\n      this.templateUrl = 'view.report.jinja2';\n      this.userReport = {};\n    }\n\n    userReportChanged(report) {\n      return this.location.search({\n        user_report: report});\n    }\n\n    async onHashChange(params) {\n      console.log('report hash change', params);\n      this.userReport.id = params.user_report;\n      if (this.userReport.id) {\n        const svc = new Katrid.Services.Model('ir.action.report');\n        let res = await svc.post('load_user_report', { kwargs: { user_report: this.userReport.id } });\n        this.userReport.params = res.result;\n      } else {\n        // Katrid.core.setContent(, this.scope);\n      }\n      location.hash = '#/app/?' + $.param(params);\n      let templ = Katrid.Reports.Reports.renderDialog(this);\n      templ = Katrid.Core.$compile(templ)(this.scope);\n      $('#katrid-action-view').empty().append(templ);\n    }\n\n  }\n  ReportAction.initClass();\n\n  Katrid.Actions.ReportAction = ReportAction;\n  Katrid.Actions[ReportAction.actionType] = ReportAction;\n\n})();\n","(function () {\n  let _counter = 0;\n\n\n  class Reports {\n    static initClass() {\n      this.currentReport = {};\n      this.currentUserReport = {};\n    }\n\n    static get(repName) {}\n\n    static renderDialog(action) {\n      console.log(action);\n      return Katrid.app.getTemplate('view.report.jinja2', { action: action });\n    }\n  }\n  Reports.initClass();\n\n\n  class Report {\n    constructor(action, scope) {\n      this.action = action;\n      this.scope = scope;\n      this.info = this.action.info;\n      Katrid.Reports.Reports.currentReport = this;\n      if ((Params.Labels == null)) {\n        Params.Labels = {\n          exact: Katrid.i18n.gettext('Is equal'),\n          in: Katrid.i18n.gettext('Selection'),\n          contains: Katrid.i18n.gettext('Contains'),\n          startswith: Katrid.i18n.gettext('Starting with'),\n          endswith: Katrid.i18n.gettext('Ending with'),\n          gt: Katrid.i18n.gettext('Greater-than'),\n          lt: Katrid.i18n.gettext('Less-than'),\n          between: Katrid.i18n.gettext('Between'),\n          isnull: Katrid.i18n.gettext('Is Null')\n        };\n      }\n\n      this.name = this.info.name;\n      this.id = ++_counter;\n      this.values = {};\n      this.params = [];\n      this.filters = [];\n      this.groupables = [];\n      this.sortables = [];\n      this.totals = [];\n    }\n\n    telegram() {\n      Katrid.Reports.Telegram.export(this);\n    }\n\n    getUserParams() {\n      const report = this;\n      const params = {\n        data: [],\n        file: report.container.find('#id-report-file').val()\n      };\n      for (let p of Array.from(this.params)) {\n        params.data.push({\n          name: p.name,\n          op: p.operation,\n          value1: p.value1,\n          value2: p.value2,\n          type: p.type\n        });\n      }\n\n      const fields = report.container.find('#report-id-fields').val();\n      params['fields'] = fields;\n\n      const totals = report.container.find('#report-id-totals').val();\n      params['totals'] = totals;\n\n      const sorting = report.container.find('#report-id-sorting').val();\n      params['sorting'] = sorting;\n\n      const grouping = report.container.find('#report-id-grouping').val();\n      params['grouping'] = grouping;\n\n      return params;\n    }\n\n    loadFromXml(xml) {\n      let dataTypeDict = {\n        date: 'DateField',\n        datetime: 'DateTimeField',\n      };\n\n      if (_.isString(xml)) {\n        xml = $(xml);\n      }\n      this.scope.customizableReport = xml.attr('customizableReport');\n      this.scope.advancedOptions = xml.attr('advancedOptions');\n      this.model = xml.attr('model');\n      const fields = [];\n\n      for (let f of Array.from(xml.find('param,field'))) {\n        let tag = f.tagName;\n        f = $(f);\n        const name = f.attr('name');\n        console.log(this.info);\n        let fld;\n        if (this.info.fields)\n          fld = this.info.fields[name];\n        const label = f.attr('label') || f.attr('caption') || (fld && fld.caption) || name;\n        const groupable = f.attr('groupable');\n        const sortable = f.attr('sortable');\n        const total = f.attr('total');\n        let param = f.attr('param');\n        if ((tag === 'FIELD') && (!param))\n          param = 'static';\n        const required = f.attr('required');\n        const autoCreate = f.attr('autoCreate') || required || (param === 'static');\n        const operation = f.attr('operation');\n        let type = f.attr('type') || f.data('type') || (fld && fld.type);\n        if (type in dataTypeDict)\n          type = dataTypeDict[type];\n\n        const modelChoices = f.attr('model-choices');\n        if (!type && modelChoices) type = 'ModelChoices';\n        fields.push({\n          name,\n          label,\n          groupable,\n          sortable,\n          total,\n          param,\n          required,\n          operation,\n          modelChoices,\n          type,\n          autoCreate,\n          field: f,\n        });\n      }\n\n      const params = (Array.from(xml.find('param')).map((p) => $(p).attr('name')));\n\n      return this.load(fields, params);\n    }\n\n    saveDialog() {\n      const params = this.getUserParams();\n      const name = window.prompt(Katrid.i18n.gettext('Report name'), Katrid.Reports.Reports.currentUserReport.name);\n      if (name) {\n        Katrid.Reports.Reports.currentUserReport.name = name;\n        $.ajax({\n          type: 'POST',\n          url: this.container.find('#report-form').attr('action') + '?save=' + name,\n          contentType: \"application/json; charset=utf-8\",\n          dataType: 'json',\n          data: JSON.stringify(params)\n        });\n      }\n      return false;\n    }\n\n    load(fields, params) {\n      if (!fields) {\n        ({ fields } = this.info);\n      }\n      if (!params) {\n        params = [];\n      }\n      this.fields = fields;\n      this.scope.fields = {};\n\n      // Create params\n      for (let p of fields) {\n        this.scope.fields[p.name] = p;\n        if (p.groupable)\n          this.groupables.push(p);\n        if (p.sortable)\n          this.sortables.push(p);\n        if (p.total)\n          this.totals.push(p);\n        if (!p.autoCreate) p.autoCreate = params.includes(p.name);\n      }\n    }\n\n    loadParams() {\n      for (let p of Array.from(this.fields)) {\n        if (p.autoCreate)\n          this.addParam(p.name);\n      }\n    }\n\n    addParam(paramName) {\n      for (let p of Array.from(this.fields))\n        if (p.name === paramName) {\n          p = new Param(p, this);\n          this.params.push(p);\n          //$(p.render(@elParams))\n          break;\n        }\n    }\n\n    getValues() {}\n\n\n    export(format) {\n      if (format == null)\n        format = localStorage.katridReportViewer || 'pdf';\n      const params = this.getUserParams();\n      console.log('send params', params);\n      const svc = new Katrid.Services.Model('ir.action.report');\n      svc.post('export_report', { args: [this.info.id], kwargs: { format, params } })\n      .then(function(res) {\n        if (res.open) {\n          return window.open(res.open);\n        }\n      });\n      return false;\n    }\n\n    preview() {\n      return this.export(localStorage.katridReportViewer);\n    }\n\n    renderFields() {\n      let p;\n      let el = $('<div></div>');\n      const flds = this.fields.map(p => `<option value=\"${p.name}\">${p.label}</option>`).join('');\n      const aggs = ((() => {\n        const result1 = [];\n        for (p of Array.from(this.fields)) {\n          if (p.total) {\n            result1.push(`<option value=\"${p.name}\">${p.label}</option>`);\n          }\n        }\n        return result1;\n      })()).join('');\n      el = this.container.find('#report-params');\n      let sel = el.find('#report-id-fields');\n      sel.append($(flds))\n      .select2({ tags: ((() => {\n        const result2 = [];\n        for (p of Array.from(this.fields)) result2.push({id: p.name, text: p.label});\n        return result2;\n      })()) });\n      if (Katrid.Reports.Reports.currentUserReport.params && Katrid.Reports.Reports.currentUserReport.params.fields) {\n        console.log(Katrid.Reports.Reports.currentUserReport.params.fields);\n        sel.select2('val', Katrid.Reports.Reports.currentUserReport.params.fields);\n      }\n      //sel.data().select2.updateSelection([{ id: 'vehicle', text: 'Vehicle'}])\n      sel = el.find('#report-id-totals');\n      sel.append(aggs)\n      .select2({ tags: ((() => {\n        const result3 = [];\n        for (p of Array.from(this.fields)) {         if (p.total) {\n            result3.push({ id: p.name, text: p.label });\n          }\n        }\n        return result3;\n      })()) });\n      return el;\n    }\n\n    renderParams(container) {\n      let p;\n      const el = $('<div></div>');\n      this.elParams = el;\n      const loaded = {};\n\n      const userParams = Katrid.Reports.Reports.currentUserReport.params;\n      if (userParams && userParams.data) {\n        for (p of Array.from(userParams.data)) {\n          loaded[p.name] = true;\n          this.addParam(p.name, p.value);\n        }\n      }\n\n      for (p of Array.from(this.params)) {\n        if (p.static && !loaded[p.name]) {\n          $(p.render(el));\n        }\n      }\n      return container.find('#params-params').append(el);\n    }\n\n    renderGrouping(container) {\n      const opts = (Array.from(this.groupables).map((p) => `<option value=\"${p.name}\">${p.label}</option>`)).join('');\n      const el = container.find(\"#params-grouping\");\n      const sel = el.find('select').select2();\n      return sel.append(opts)\n      .select2(\"container\").find(\"ul.select2-choices\").sortable({\n          containment: 'parent',\n          start() { return sel.select2(\"onSortStart\"); },\n          update() { return sel.select2(\"onSortEnd\"); }\n      });\n    }\n\n    renderSorting(container) {\n      const opts = (Array.from(this.sortables).filter((p) => p.sortable).map((p) => `<option value=\"${p.name}\">${p.label}</option>`)).join('');\n      const el = container.find(\"#params-sorting\");\n      const sel = el.find('select').select2();\n      return sel.append(opts)\n      .select2(\"container\").find(\"ul.select2-choices\").sortable({\n          containment: 'parent',\n          start() { return sel.select2(\"onSortStart\"); },\n          update() { return sel.select2(\"onSortEnd\"); }\n      });\n    }\n\n    render(container) {\n      this.container = container;\n      let el = this.renderFields();\n      if (this.sortables.length) {\n        el = this.renderSorting(container);\n      } else {\n        container.find(\"#params-sorting\").hide();\n      }\n\n      if (this.groupables.length) {\n        el = this.renderGrouping(container);\n      } else {\n        container.find(\"#params-grouping\").hide();\n      }\n\n      return el = this.renderParams(container);\n    }\n  }\n\n\n  class Params {\n    static initClass() {\n      this.Operations = {\n        exact: 'exact',\n        in: 'in',\n        contains: 'contains',\n        startswith: 'startswith',\n        endswith: 'endswith',\n        gt: 'gt',\n        lt: 'lt',\n        between: 'between',\n        isnull: 'isnull'\n      };\n\n      this.DefaultOperations = {\n        CharField: this.Operations.exact,\n        IntegerField: this.Operations.exact,\n        DateTimeField: this.Operations.between,\n        DateField: this.Operations.between,\n        FloatField: this.Operations.between,\n        DecimalField: this.Operations.between,\n        ForeignKey: this.Operations.exact,\n        ModelChoices: this.Operations.exact,\n        SelectionField: this.Operations.exact,\n      };\n\n      this.TypeOperations = {\n        CharField: [this.Operations.exact, this.Operations.in, this.Operations.contains, this.Operations.startswith, this.Operations.endswith, this.Operations.isnull],\n        IntegerField: [this.Operations.exact, this.Operations.in, this.Operations.gt, this.Operations.lt, this.Operations.between, this.Operations.isnull],\n        FloatField: [this.Operations.exact, this.Operations.in, this.Operations.gt, this.Operations.lt, this.Operations.between, this.Operations.isnull],\n        DecimalField: [this.Operations.exact, this.Operations.in, this.Operations.gt, this.Operations.lt, this.Operations.between, this.Operations.isnull],\n        DateTimeField: [this.Operations.exact, this.Operations.in, this.Operations.gt, this.Operations.lt, this.Operations.between, this.Operations.isnull],\n        DateField: [this.Operations.exact, this.Operations.in, this.Operations.gt, this.Operations.lt, this.Operations.between, this.Operations.isnull],\n        ForeignKey: [this.Operations.exact, this.Operations.in, this.Operations.isnull],\n        ModelChoices: [this.Operations.exact, this.Operations.in, this.Operations.isnull],\n        SelectionField: [this.Operations.exact, this.Operations.isnull],\n      };\n\n      this.Widgets = {\n        CharField(param) {\n          return `<div><input id=\"rep-param-id-${param.id}\" ng-model=\"param.value1\" type=\"text\" class=\"form-control\"></div>`;\n        },\n\n        IntegerField(param) {\n          let secondField = '';\n          if (param.operation === 'between') {\n            secondField = `<div class=\"col-xs-6\"><input id=\"rep-param-id-${param.id}-2\" ng-model=\"param.value2\" type=\"text\" class=\"form-control\"></div>`;\n          }\n          return `<div class=\"row\"><div class=\"col-sm-6\"><input id=\"rep-param-id-${param.id}\" type=\"number\" ng-model=\"param.value1\" class=\"form-control\"></div>${secondField}</div>`;\n        },\n\n        DecimalField(param) {\n          let secondField = '';\n          if (param.operation === 'between') {\n            secondField = `<div class=\"col-xs-6\"><input id=\"rep-param-id-${param.id}-2\" ng-model=\"param.value2\" type=\"text\" class=\"form-control\"></div>`;\n          }\n          return `<div class=\"col-sm-6\"><input id=\"rep-param-id-${param.id}\" type=\"number\" ng-model=\"param.value1\" class=\"form-control\"></div>${secondField}`;\n        },\n\n        DateTimeField(param) {\n          let secondField = '';\n          if (param.operation === 'between') {\n            secondField = `<div class=\"col-xs-6\"><input id=\"rep-param-id-${param.id}-2\" type=\"text\" date-picker=\"L\" ng-model=\"param.value2\" class=\"form-control\"></div>`;\n          }\n          return `<div class=\"row\"><div class=\"col-xs-6\"><input id=\"rep-param-id-${param.id}\" type=\"text\" date-picker=\"L\" ng-model=\"param.value1\" class=\"form-control\"></div>${secondField}</div>`;\n        },\n\n        DateField(param) {\n          let secondField = '';\n          if (param.operation === 'between') {\n            secondField = `<div class=\"col-xs-6\"><input id=\"rep-param-id-${param.id}-2\" type=\"text\" date-picker=\"L\" ng-model=\"param.value2\" class=\"form-control\"></div>`;\n          }\n          return `<div class=\"col-sm-12 row\"><div class=\"col-xs-6\"><input id=\"rep-param-id-${param.id}\" type=\"text\" date-picker=\"L\" ng-model=\"param.value1\" class=\"form-control\"></div>${secondField}</div>`;\n        },\n\n        ForeignKey(param) {\n          const serviceName = param.info.field.attr('model') || param.params.model;\n          let multiple = '';\n          if (param.operation === 'in') {\n            multiple = 'multiple';\n          }\n          return `<div><input id=\"rep-param-id-${param.id}\" ajax-choices=\"${serviceName}\" field=\"${param.name}\" ng-model=\"param.value1\" ${multiple}></div>`;\n        },\n\n        ModelChoices(param) {\n          return `<div><input id=\"rep-param-id-${param.id}\" ajax-choices=\"ir.action.report\" model-choices=\"${param.info.modelChoices}\" ng-model=\"param.value1\"></div>`;\n        },\n\n        SelectionField(param) {\n          param.info.choices = param.info.field.data('choices');\n          let defaultValue = param.info.field.attr('default');\n          if (defaultValue)\n            defaultValue = ` ng-init=\"param.value1='${defaultValue}'\"`;\n          return `<div${defaultValue}><select class=\"form-control\" ng-model=\"param.value1\"><option value=\"{{ key }}\" ng-repeat=\"(key, value) in fields.${param.name}.choices\">{{ value }}</option></select></div>`\n        }\n      };\n    }\n  }\n  Params.initClass();\n\n\n  class Param {\n    constructor(info, params) {\n      this.info = info;\n      this.params = params;\n      this.name = this.info.name;\n      this.field = this.params.info.fields && this.params.info.fields[this.name];\n      this.label = this.info.label || this.params.info.caption;\n      this.static = this.info.param === 'static';\n      this.type = this.info.type || (this.field && this.field.type) || 'CharField';\n      this.defaultOperation = this.info.operation || Params.DefaultOperations[this.type];\n      this.operation = this.defaultOperation;\n      // @operations = @info.operations or Params.TypeOperations[@type]\n      this.operations = this.getOperations();\n      this.exclude = this.info.exclude;\n      this.id = ++_counter;\n    }\n\n    defaultValue() {\n      return null;\n    }\n\n    setOperation(op, focus) {\n      if (focus == null) { focus = true; }\n      this.createControls(this.scope);\n      const el = this.el.find(`#rep-param-id-${this.id}`);\n      if (focus) {\n        el.focus();\n      }\n    }\n\n    createControls(scope) {\n      const el = this.el.find(\".param-widget\");\n      el.empty();\n      let widget = Params.Widgets[this.type](this);\n      widget = Katrid.Core.$compile(widget)(scope);\n      return el.append(widget);\n    }\n\n    getOperations() { return (Array.from(Params.TypeOperations[this.type]).map((op) => ({ id: op, text: Params.Labels[op] }))); }\n\n    operationTemplate() {\n      const opts = this.getOperations();\n      return `<div class=\"col-sm-4\"><select id=\"param-op-${this.id}\" ng-model=\"param.operation\" ng-init=\"param.operation='${this.defaultOperation}'\" class=\"form-control\" onchange=\"$('#param-${this.id}').data('param').change();$('#rep-param-id-${this.id}')[0].focus()\">\n  ${opts}\n  </select></div>`;\n    }\n\n    template() {\n      let operation = '';\n      if (!this.operation) operation = this.operationTemplate();\n      return `<div id=\"param-${this.id}\" class=\"row form-group\" data-param=\"${this.name}\" ng-controller=\"ParamController\"><label class=\"control-label\">${this.label}</label>${operation}<div id=\"param-widget-${this.id}\"></div></div>`;\n    }\n\n    render(container) {\n      this.el = this.params.scope.compile(this.template())(this.params.scope);\n      this.el.data('param', this);\n      console.log('render param');\n      this.createControls(this.el.scope());\n      return container.append(this.el);\n    }\n  }\n\n\n  Katrid.UI.uiKatrid.controller('ReportController', ['$scope', '$element', '$compile', function($scope, $element, $compile) {\n    const xmlReport = $scope.$parent.action.info.content;\n    const report = new Report($scope.$parent.action, $scope);\n    $scope.report = report;\n    report.loadFromXml(xmlReport);\n    report.render($element);\n    return report.loadParams();\n  }]);\n\n\n  Katrid.UI.uiKatrid.controller('ReportParamController', ['$scope', '$element', function($scope, $element) {\n    $scope.$parent.param.el = $element;\n    $scope.$parent.param.scope = $scope;\n    return $scope.$parent.param.setOperation($scope.$parent.param.operation, false);\n  }]);\n\n\n\n  class ReportEngine {\n    static load(el) {\n      $('row').each((idx, el) => {\n        el.addClass('row');\n      });\n      $('column').each((idx, el) => {\n        el.addClass('col');\n      })\n    }\n  }\n\n\n  Katrid.Reports = {\n    Reports,\n    Report,\n    Param\n  };\n})();\n","(() => {\n\n  class Widget {\n  }\n\n  class Component {\n  }\n\n  Katrid.UI.Widgets = {\n    Widget,\n    Component\n  };\n})();\n","(() => {\n\n  let compileButtons = (container) => {\n    let sendFileCounter = 0;\n    console.log(container);\n    return container.find('button').each((idx, btn) => {\n      btn = $(btn);\n      let type = btn.attr('type');\n\n      if (!btn.attr('type') || (btn.attr('type') === 'object'))\n        btn.attr('type', 'button');\n      if (type === 'object') {\n        let sendFile = btn.attr('send-file');\n        btn.attr('button-object', btn.attr('name'));\n        if (_.isUndefined(sendFile)) {\n          btn.attr('ng-click', `action.formButtonClick(action.selection, '${ btn.attr('name') }', $event.target);$event.stopPropagation();`);\n        } else {\n          let idSendFile = `__send_file_${++sendFileCounter}`;\n          container.append(`<input id=\"${idSendFile}\" type=\"file\" style=\"display: none\" onchange=\"Katrid.Services.Upload.sendFile('${btn.attr('name')}', this)\"/>`);\n          btn.attr('send-file', btn.attr('name'));\n          btn.attr('onclick', `$('#${idSendFile}').trigger('click')`);\n        }\n      } else if (type === 'tag') {\n        btn.attr('button-tag', btn.attr('name'));\n        btn.attr('onclick', `Katrid.Actions.ClientAction.tagButtonClick($(this))`);\n      }\n      if (!btn.attr('class'))\n        btn.addClass('btn btn-outline-secondary');\n    });\n  };\n\n  class ToolbarComponent extends Katrid.UI.Widgets.Component {\n    constructor() {\n      super();\n      this.scope = false;\n      this.restrict = 'E';\n      this.replace = true;\n      this.transclude = true;\n      this.templateUrl = 'view.header.jinja2';\n    }\n  }\n  Katrid.UI.uiKatrid.directive('toolbar', ToolbarComponent);\n\n\n  class ClientView {\n    constructor(action) {\n      this.action = action;\n    }\n\n    get template() {\n      return Katrid.app.getTemplate(this.templateUrl);\n    }\n\n    render() {\n      return $(this.template);\n    }\n  }\n\n\n  class BaseView {\n    constructor(scope) {\n      this.scope = scope;\n    }\n\n    render() {\n      return Katrid.app.getTemplate(this.templateUrl);\n    }\n  }\n\n  class ActionView extends BaseView{\n    constructor(action, scope, view, content) {\n      super(scope);\n      this.action = action;\n      this.view = view;\n      this.templateUrl = 'view.basic';\n      this.toolbar = true;\n      this.content = content;\n    }\n\n    getTemplateContext() {\n      return { content: this.content };\n    }\n\n    render() {\n      return sprintf(Katrid.app.getTemplate(this.templateUrl), this.getTemplateContext());\n    }\n\n    renderTo(el) {\n      Katrid.core.setContent(this.render(), this.scope);\n    }\n  }\n\n  class View extends ActionView {\n    getBreadcrumb() {\n      let html = `<ol class=\"breadcrumb\">`;\n      let i = 0;\n      for (let h of Katrid.app.actionManager) {\n        if (i === 0 && h.viewModes.length > 1)\n          html += `<li class=\"breadcrumb-item\"><a href=\"#\" ng-click=\"action.backTo(0, 0)\">${ h.info.display_name }</a></li>`;\n        i++;\n        if (Katrid.Actions.actionManager.length > i && h.viewType === 'form')\n          html += `<li class=\"breadcrumb-item\"><a href=\"#\" ng-click=\"action.backTo(${i-1}, 'form')\">${ h.scope.record.display_name }</a></li>`;\n      }\n      if (this.constructor.type === 'form')\n        html += `<li class=\"breadcrumb-item\">{{ self.display_name }}</li>`;\n      return html + '</ol>';\n    }\n\n    render() {\n      return sprintf(Katrid.app.$templateCache.get(this.templateUrl), { content: this.content });\n    }\n\n    getViewButtons() {\n      let btns = Object.entries(View.buttons).map((btn) => this.view.viewModes.includes(btn[0]) ? btn[1] : '').join('');\n      if (btns) btns = `<div class=\"btn-group\">${btns}</div>`;\n      return btns;\n    }\n\n  }\n\n\n  class View2 {\n    constructor(action, viewInfo) {\n      this.viewType = null;\n      this.action = action;\n      this.viewInfo = viewInfo;\n      this.templateUrl = null;\n    }\n\n    renderTo(container) {\n      container.html(this.render(container));\n    }\n\n    get fields() {\n      return this.viewInfo.fields;\n    }\n\n    renderField(fieldEl) {\n      let name = fieldEl.attr('name');\n      if (name) {\n        let fld = this.fields[name];\n        if (fld) {\n          let html = fld.render(this.viewType, fieldEl, { view: this }).toString();\n          if (fld.visible)\n            return html;\n          return '';\n        } else\n          console.error(`Field \"${name}\" not found`);\n      }\n    }\n\n  }\n\n  class FormView extends View2 {\n    constructor(action, viewInfo, opts) {\n      super(action, viewInfo);\n      this.dialog = false;\n      this.viewType = 'form';\n      this.templateUrl = 'view.form.jinja2';\n      this.context = {};\n      if (opts) {\n        this.dialog = opts.dialog;\n        if (opts.templateUrl)\n          this.templateUrl = opts.templateUrl;\n        if (opts.context)\n          Object.assign(this.context, opts.context);\n      }\n    }\n\n    render(container) {\n      let form = $(this.viewInfo.content);\n      form.attr('smart-form', 'smart-form');\n\n      form.addClass('row');\n\n      compileButtons(form);\n      let headerEl = form.find('header:first');\n      let header = '';\n      if (headerEl.length) {\n        headerEl.find('field[name=status]:first').attr('status-field', 'status-field');\n        header = headerEl.html();\n        headerEl.remove();\n      }\n\n      for (let child of form.find('field')) {\n        child = $(child);\n        if (child.attr('invisible') !== undefined)\n          continue;\n        if (!child.parents('field').length) {\n          child.attr('form-field', 'form-field');\n          child.replaceWith(this.renderField(child));\n        }\n      }\n\n      let context = {};\n      Object.assign(context, this.context);\n      Object.assign(context, {\n        header, content: form[0].outerHTML,\n      });\n      if (!this.dialog)\n        context['breadcrumb'] = this.breadcrumb;\n      let templ = Katrid.app.getTemplate(this.templateUrl, context);\n      templ = $(templ);\n\n      templ = Katrid.Core.$compile(templ)(this.action.scope);\n      templ.addClass('ng-form');\n      if (this.action) {\n        // get the form element\n        this.action.$form = templ.find('form').first();\n        // get the form controller\n        this.action.form = angular.element(this.action.$form).controller('form');\n      }\n      return templ;\n    }\n  }\n\n  class List extends View2 {\n    constructor(...args) {\n      super(...args);\n      this.viewType = 'list';\n      this.templateUrl = 'view.list.jinja2';\n      this.action.view = this;\n    }\n\n    render(container) {\n      let list = $(this.viewInfo.content);\n      let context = {};\n      Object.assign(context, this.context);\n      compileButtons(list);\n      let headerEl = list.find('header:first');\n      let header = '';\n      if (headerEl.length) {\n        header = headerEl.html();\n        headerEl.remove();\n      }\n\n      let templ = Katrid.app.getTemplate(this.templateUrl, { header, content: list[0].outerHTML });\n      // compile the template with the action scope\n      templ = $(templ);\n      templ.find('list')\n      .attr('ng-row-click', 'action.listRowClick($index, record, $event)')\n      .attr('list-options', '{\"rowSelector\": true}').attr('ng-row-click', 'action.listRowClick($index, record, $event)');\n\n      templ = Katrid.Core.$compile(templ)(this.action.scope);\n      setTimeout(() => this.action.dataSource.open());\n      return templ;\n    }\n  }\n\n\n  class Card extends View2 {\n    constructor(...args) {\n      super(...args);\n      this.viewType = 'card';\n      this.templateUrl = 'view.card.jinja2';\n      this.action.view = this;\n    }\n\n    render(container) {\n      let content = $(this.viewInfo.content);\n      content.children('field').remove();\n      content.find('field').each((idx, el) => $(el).replaceWith(`\\$\\{ ::record.${ $(el).attr('name') } }`));\n\n      let templ = Katrid.app.getTemplate(this.templateUrl, { content: content[0].outerHTML });\n      // compile the template with the action scope\n      templ = $(templ);\n      templ = Katrid.Core.$compile(templ)(this.action.scope);\n      setTimeout(() => this.action.dataSource.open());\n      return templ;\n    }\n  }\n\n\n\n\n  Katrid.UI.uiKatrid\n\n  .directive('listView2', () => ({\n    scope: false,\n    link($scope, $el) {\n      if (!$el.find('header').find('button').length)\n        $el.find('header').remove();\n    },\n    template($el) {\n      console.log('compile template');\n      compileButtons($el);\n      let headerEl = $el.find('header').first();\n      let header = '';\n      if (headerEl.find('button').length)\n        if (headerEl.length) {\n          header = headerEl.html();\n          headerEl.remove();\n        }\n      $el.find('list').attr('list-options', '{\"rowSelector\": true}').attr('ng-row-click', 'action.listRowClick($index, record, $event)');\n      return sprintf(\n        Katrid.app.getTemplate('view.list')\n        .replace('<!-- replace-header -->', header),\n        { content: $el.html() }\n      );\n    },\n  }))\n\n  .directive('card2', () => ({\n    replace: true,\n    template($el) {\n      $el.children('field').remove();\n      $el.find('field').each((idx, el) => $(el).replaceWith(`{{ ::record.${ $(el).attr('name') } }}`));\n      return sprintf(Katrid.app.getTemplate('view.card'), { content: $el.html() });\n    }\n  }))\n  .directive('smartForm', () => ({\n    restrict: 'A',\n    link(scope, el, attrs) {\n      if ('edit' in attrs) {\n        attrs.$observe('edit', (v) => {\n          if (v === 'false')\n            $('.action-view:first').find('.toolbutton-action-edit').hide();\n          else\n            $('.action-view:first').find('.toolbutton-action-edit').show();\n        })\n      }\n    }\n  }));\n\n\n  Katrid.UI.Views = {\n    View,\n    BaseView,\n    ActionView,\n    FormView,\n    ClientView,\n    List,\n    searchModes: ['list', 'card']\n  };\n\n  Katrid.UI.Views['list'] = List;\n  Katrid.UI.Views['form'] = FormView;\n  Katrid.UI.Views['card'] = Card;\n\n})();\n\n","(function () {\n\n  class ViewInfo {\n    constructor(info) {\n      this._info = info;\n      this.fields = info.fields;\n      this.content = info.content;\n      this.toolbar = info.toolbar;\n    }\n  }\n\n  Katrid.UI.ViewInfo = ViewInfo;\n})();\n","(function () {\n\n  class Grid {\n    constructor($compile) {\n      this.restrict = 'E';\n      this.scope = {};\n      this.$compile = $compile;\n    }\n\n    async loadViews(scope, element, views, attrs) {\n\n      let res = await scope.model.loadViews();\n      // detects the relational field\n      let fld = res.views.list.fields[scope.field.field];\n      scope.dataSource.field = scope.field;\n      // hides the relational field\n      if (fld)\n        fld.visible = false;\n\n      let newViews = res.views;\n\n      for (let [k, v] of Object.entries(views))\n        newViews[k].content = v;\n\n      scope.views = newViews;\n      scope.view = newViews.list;\n      let content = $(scope.view.content);\n      if (scope.inline)\n        content.attr('ng-row-click', 'editItem($event, $index)').attr('inline-editor', scope.inline);\n      else\n        content.attr('ng-row-click', 'openItem($event, $index)');\n      content.attr('records', 'records');\n\n      content.attr('list-options', '{\"deleteRow\": true}');\n\n      // render the list component\n      let el = (this.$compile(content)(scope));\n      element.html(el);\n      element.prepend(this.$compile(Katrid.app.getTemplate('view.form.grid.toolbar.jinja2', {attrs}))(scope));\n      element.find('table').addClass('table-bordered grid');\n    }\n\n    async showDialog(scope, attrs, index) {\n\n      if (scope.views.form)\n        await this.renderDialog(scope, attrs);\n\n      if (index != null) {\n        // Show item dialog\n        scope.recordIndex = index;\n        let record = scope.records[index];\n\n        // load the target record from server\n        if (record && record.$loaded)\n          scope.record = record;\n        else if (record) {\n          let res = await scope.dataSource.get(scope.records[index].id, 0, false, index);\n          res.$loaded = true;\n\n          // load nested data\n          // let currentRecord = scope.record;\n          // if (res.id)\n          //   for (let child of dataSource.children) {\n          //     child.scope.masterChanged(res.id)\n          //     .then(res => {\n          //       _cacheChildren(child.fieldName, currentRecord, res.data);\n          //     })\n          //\n          //   }\n\n        }\n\n      }\n\n    };\n\n    async link(scope, element, attrs) {\n      if (attrs.ngDefaultValues)\n        scope.ngDefaultValues = attrs.ngDefaultValues;\n      let me = this;\n      // Load remote field model info\n\n      const field = scope.$parent.view.fields[attrs.name];\n\n      scope.totalDisplayed = 1000;\n      scope.fieldName = attrs.name;\n      scope.field = field;\n      scope.records = [];\n      scope.recordIndex = -1;\n      scope._cachedViews = {};\n      scope._ = scope.$parent._;\n      scope._changeCount = 0;\n      scope.dataSet = [];\n      scope.model = new Katrid.Services.Model(field.model);\n      scope.isList = true;\n\n      if (attrs.inlineEditor === 'tabular')\n        scope.inline = 'tabular';\n      else if (attrs.hasOwnProperty('inlineEditor'))\n        scope.inline = 'inline';\n\n      scope.getContext = function () {\n        return {}\n      };\n\n      scope.$setDirty = function () {\n        return {}\n      };\n\n      // Set parent/master data source\n      let dataSource = scope.dataSource = new Katrid.Data.DataSource(scope);\n      dataSource.readonly = !_.isUndefined(attrs.readonly);\n      let p = scope.$parent;\n      while (p) {\n        if (p.action && p.action.dataSource) {\n          scope.dataSource.masterSource = p.action.dataSource;\n          break;\n        } else if (p.dataSource) {\n          scope.dataSource.masterSource = p.dataSource;\n          break;\n        }\n        p = p.$parent;\n      }\n\n      scope.parent = dataSource.masterSource.scope;\n      scope.action = dataSource.masterSource.action;\n      dataSource.action = scope.action;\n\n      scope.dataSource.fieldName = scope.fieldName;\n      scope.gridDialog = null;\n      let gridEl = null;\n\n      // check if the grid has custom views grid:view\n      let views = {};\n      for (let child of element.children()) {\n        if (child.tagName.startsWith('GRID:')) {\n          let viewType = child.tagName.split(':')[1].toLowerCase();\n          child = $(child);\n          views[viewType] = `<${viewType}>${child.html()}</${viewType}>`;\n        }\n      }\n\n      await me.loadViews(scope, element, views, attrs);\n\n      scope.doViewAction = (viewAction, target, confirmation) => scope.action._doViewAction(scope, viewAction, target, confirmation);\n\n      let _cacheChildren = (fieldName, record, records) => {\n        record[fieldName] = records;\n      };\n\n      scope._incChanges = () => {\n        if (!scope.$parent.$fieldLog[scope.field.name])\n          scope.$parent.$fieldLog[scope.field.name] = {};\n        scope.$parent.$fieldLog[scope.field.name].count++;\n      };\n\n      scope.addItem = async () => {\n        await scope.dataSource.insert();\n        if (attrs.$attr.inlineEditor) {\n          scope.records.splice(0, 0, scope.record);\n          scope.dataSource.edit();\n          if (!scope.$parent.record[scope.fieldName])\n            scope.$parent.record[scope.fieldName] = [];\n          scope.$parent.record[scope.fieldName].push(scope.record);\n          scope.$apply();\n        } else\n          return this.showDialog(scope, attrs);\n      };\n\n      scope.addRecord = function (rec) {\n        let record = Katrid.Data.createRecord({$loaded: true}, scope.dataSource);\n        for (let [k, v] of Object.entries(rec))\n          record[k] = v;\n        scope.records.push(record);\n        if (!scope.dataSource.parent.record[scope.fieldName])\n          scope.dataSource.parent.record[scope.fieldName] = [];\n        scope.dataSource.parent.record[scope.fieldName].push(record);\n        console.log('add record', record);\n      };\n\n      scope.cancelChanges = () => scope.dataSource.setState(Katrid.Data.DataSourceState.browsing);\n\n      scope.openItem = async (evt, index) => {\n        await this.showDialog(scope, attrs, index);\n        if (scope.dataSource.masterSource.changing && !scope.dataSource.readonly) {\n          scope.dataSource.edit();\n        }\n        scope.$apply();\n      };\n\n      scope.editItem = (evt, index) => {\n        if (scope.dataSource.changing)\n          scope.save();\n        if (scope.$parent.dataSource.changing) {\n          scope.dataSource.recordIndex = index;\n          scope.dataSource.edit();\n\n          // delay focus field\n          setTimeout(() => {\n            let el = $(evt.target).closest('td').find('input.form-control').focus();\n            setTimeout(() => el.select());\n          }, 100);\n\n        }\n      };\n\n      scope.removeItem = function (idx) {\n        const rec = scope.records[idx];\n        scope.records.splice(idx, 1);\n        scope._incChanges();\n        rec.$record.$delete();\n        //scope.$parent.record.$modifiedData[scope.fieldName].$deleted.append(rec);\n        // return scope.dataSource.applyModifiedData(null, null, rec);\n      };\n\n      scope.$set = (field, value) => {\n        const control = scope.form[field];\n        control.$setViewValue(value);\n        control.$render();\n      };\n\n      scope.save = function () {\n        // const data = scope.dataSource.applyModifiedData(scope.form, scope.gridDialog, scope.record);\n        scope._incChanges();\n        if (scope.inline)\n          return;\n        // return scope.$parent.record[scope.fieldName] = scope.records;\n        if (scope.recordIndex > -1) {\n          let rec = scope.record;\n          scope.record = null;\n          scope.records.splice(scope.recordIndex, 1);\n          setTimeout(() => {\n            scope.records.splice(scope.recordIndex, 0, rec);\n            scope.$apply();\n          });\n        } else if (scope.recordIndex === -1) {\n          scope.records.push(scope.record);\n          // scope.$parent.record[scope.fieldName] = scope.records;\n        }\n        if (!scope.inline) {\n          scope.gridDialog.modal('toggle');\n        }\n      };\n\n\n      let _loadChildFromCache = (child) => {\n        if (scope.record.hasOwnProperty(child.fieldName)) {\n          child.scope.records = scope.record[child.fieldName];\n        }\n      };\n\n      function trim(str) {\n        str = str.replace(/^\\s+/, '');\n        for (let i = str.length - 1; i >= 0; i--) {\n          if (/\\S/.test(str.charAt(i))) {\n            str = str.substring(0, i + 1);\n            break;\n          }\n        }\n        return str;\n      }\n\n      scope.pasteData = async function () {\n        let cache = {};\n\n        let _queryForeignKeyField = async function (field, val) {\n          return new Promise(async (resolve, reject) => {\n\n            if (!cache[field.name])\n              cache[field.name] = {};\n            if (cache[field.name][val] === undefined) {\n              let res = await scope.model.getFieldChoices(field.name, val, {exact: true});\n              if (res.items && res.items.length)\n                cache[field.name][val] = res.items[0];\n              else\n                cache[field.name][val] = null;\n            }\n            resolve(cache[field.name][val]);\n\n          });\n        };\n\n        let fields = [];\n        for (let f of $(scope.view.content).find('field')) {\n          let field = scope.view.fields[$(f).attr('name')];\n          if (field && (_.isUndefined(field.visible) || field.visible))\n            fields.push(field);\n        }\n        let txt = await navigator.clipboard.readText();\n\n        // read lines\n        let rowNo = 0;\n        for (let row of txt.split(/\\r?\\n/)) {\n          rowNo++;\n          if (row) {\n            let i = 0;\n            let newObj = {};\n            for (let col of row.split(/\\t/)) {\n              let field = fields[i];\n              if (field instanceof Katrid.Data.Fields.ForeignKey)\n                newObj[field.name] = await _queryForeignKeyField(field, trim(col));\n              else\n                newObj[field.name] = trim(col);\n              i++;\n            }\n            scope.addRecord(newObj);\n          }\n        }\n        scope.$apply();\n      };\n\n      let masterChanged = function (evt, master, key) {\n\n        // Ajax load nested data\n        if (master === scope.dataSource.masterSource) {\n          scope.dataSet = [];\n          scope._changeCount = 0;\n          scope.records = [];\n          if (key != null) {\n            const data = {};\n            data[field.field] = key;\n            if (key) {\n              // TODO remove in future\n              scope.dataSource.pageLimit = 1000;\n              return scope.dataSource.search(data)\n              .then((data) => {\n                // setup the log information, it will be useful to watch field value changes\n                scope.$parent.$fieldLog[field.name] = {count: 0, value: data.data};\n                scope.$parent.record[field.name] = data.data;\n                scope.$apply();\n              })\n              .finally(() => scope.dataSource.state = Katrid.Data.DataSourceState.browsing);\n            }\n          } else {\n            scope.$parent.record[field.name] = [];\n          }\n        }\n\n      };\n\n      if (scope.dataSource.pendingMasterId)\n        masterChanged(null, scope.dataSource.parent, scope.dataSource.pendingMasterId);\n\n      let unhook = [\n        scope.$on('masterChanged', masterChanged),\n        scope.$on('afterCancel', function (evt, master) {\n          if (master === scope.dataSource.masterSource)\n            scope.dataSource.cancel();\n        })\n      ];\n\n\n      scope.$on('$destroy', function () {\n        unhook.map(fn => fn());\n      });\n\n\n    }\n\n    async renderDialog(scope, attrs) {\n      let el;\n      let html = scope.views.form.content;\n\n      scope.view = scope.views.form;\n      let fld = scope.views.form.fields[scope.field.field];\n      if (fld)\n        fld.visible = false;\n\n      if (attrs.inline) {\n        el = me.$compile(html)(scope);\n        gridEl.find('.inline-input-dialog').append(el);\n      } else {\n        let view = new Katrid.UI.Views.FormView({scope}, scope.views.form, {\n          dialog: true,\n          templateUrl: 'view.field.OneToManyField.Dialog.jinja2',\n          context: {\n            field: scope.field,\n          },\n        });\n        el = view.render();\n      }\n\n      // Get the first form controller\n      scope.formElement = el.find('form:first');\n      scope.form = scope.formElement.controller('form');\n      scope.gridDialog = el;\n\n      if (!attrs.inline) {\n        el.modal('show');\n        el.on('hidden.bs.modal', function () {\n          scope.record = null;\n          scope.dataSource.state = Katrid.Data.DataSourceState.browsing;\n          el.remove();\n          scope.gridDialog = null;\n          scope.recordIndex = -1;\n          _destroyChildren();\n        });\n      }\n      el.find('.modal-dialog').addClass('ng-form');\n      return new Promise(function (resolve) {\n        el.on('shown.bs.modal', () => resolve(el));\n      });\n    };\n\n  }\n\n  Katrid.UI.uiKatrid\n\n  .directive('grid', ['$compile', Grid])\n\n  .directive('list', ['$compile', $compile => ({\n    restrict: 'E',\n    scope: false,\n    compile(el, attrs) {\n      el.addClass('table-responsive');\n      let rowClick = attrs.ngRowClick;\n      let records = attrs.records || 'groups';\n      let content = el.html();\n      let options = {};\n      if (attrs.listOptions)\n        options = JSON.parse(attrs.listOptions);\n      let template = Katrid.app.getTemplate('view.list.table.jinja2', {attrs, rowClick, options, records});\n\n      return function (scope, el, attrs, controller) {\n        let templ = $(template);\n        let tr = templ.find('tbody>tr:first');\n        let thead = templ.find('thead>tr:first');\n        let tfoot = templ.find('tfoot>tr:first');\n\n        let formView;\n        let ngTrClass = attrs.ngTrClass;\n        if (ngTrClass)\n          ngTrClass = ',' + ngTrClass;\n        else\n          ngTrClass = '';\n        console.log('row class', ngTrClass);\n        if (attrs.inlineEditor) {\n          templ.addClass('inline-editor');\n          formView = $(scope.views.form.content);\n          tr\n          .attr('ng-form', \"grid-row-form-{{$index}}\")\n          .attr('id', 'grid-row-form-{{$index}}');\n        } else\n          tr.attr(\n              'ng-class',\n              \"{\" +\n              \"'group-header': record.$hasChildren, \" +\n              \"'form-data-changing': (dataSource.changing && dataSource.recordIndex === $index), \" +\n              \"'form-data-readonly': !(dataSource.changing && dataSource.recordIndex === $index)\" +\n              ngTrClass +\n              \"}\"\n          );\n\n        // compile fields\n        let fields = $('<div>').append(content);\n        let totals = [];\n        let hasTotal = false;\n        let td, th;\n        for (let fld of fields.children('field')) {\n          fld = $(fld);\n          let fieldName = fld.attr('name');\n          let field = scope.view.fields[fieldName];\n          if (field) {\n\n            field.assign(fld);\n\n            let total = fld.attr('total');\n            if (total) {\n              hasTotal = true;\n              totals.push({\n                field: field,\n                name: fieldName,\n                total: total,\n              });\n            } else\n              totals.push(false);\n\n            if (!field.visible)\n              continue;\n\n            let inplaceEditor = false;\n            if (formView) {\n              inplaceEditor = formView.find(`field[name=\"${fieldName}\"]`);\n              inplaceEditor = $(inplaceEditor[0].outerHTML).attr('form-field', 'form-field').attr('inline-editor', attrs.inlineEditor)[0].outerHTML;\n            }\n            let fieldEl = $(field.render('list', fld, {view: scope.view}));\n            th = fieldEl.first();\n            td = $(th).next();\n          } else {\n            // just use the html content\n            th = '<th></th>';\n            td = `<td>${fld.html()}</td>`;\n          }\n          tr.append(td);\n          thead.append(th);\n        }\n\n        if (hasTotal)\n          for (total of totals)\n            tfoot.append(Katrid.app.getTemplate('view.list.table.total.jinja2', {field: total.field}));\n        else\n          tfoot.remove();\n\n        if (options.deleteRow) {\n          let delRow = $(Katrid.app.getTemplate('view.list.table.delete.jinja2'));\n          for (let child of delRow)\n            if (child.tagName === 'TD')\n              tr.append(child);\n            else if (child.tagName === 'TH')\n              thead.append(child);\n          if (hasTotal)\n            tfoot.append('<td class=\"list-column-delete\" ng-show=\"dataSource.parent.changing && !dataSource.readonly\"></td>');\n        }\n        el.html('');\n        el.append($compile(templ)(scope));\n      }\n    }\n  })]);\n\n\n})();\n","(function () {\n  const uiKatrid = Katrid.UI.uiKatrid;\n\n  uiKatrid.filter('numberFormat', () => {\n    return (value, maxDigits = 3) => {\n      if (value == null)\n        return '';\n      return new Intl.NumberFormat('pt-br', { maximumSignificantDigits: maxDigits }).format(value);\n    }\n  });\n\n})();\n","(function() {\n\n  let conditionsLabels = {\n    '=': Katrid.i18n.gettext('Is equal'),\n    '!=': Katrid.i18n.gettext('Is different'),\n    '>': Katrid.i18n.gettext('Greater-than'),\n    '<': Katrid.i18n.gettext('Less-than'),\n  };\n\n  let conditionSuffix = {\n    '=': '',\n    '!=': '__isnot',\n    'like': '__icontains',\n    'not like': '__not_icontains',\n    '>': '__gt',\n    '>=': '__gte',\n    '<': '__lt',\n    '<=': '__lte',\n    'in': '__in',\n    'not in': '__not_in',\n  };\n\n\n  class SearchQuery {\n    constructor(searchView) {\n      this.searchView = searchView;\n      this.items = [];\n      this.groups = [];\n    }\n\n    add(item) {\n      if (this.items.includes(item)) {\n        item.facet.addValue(item);\n        item.facet.refresh();\n      } else {\n        this.items.push(item);\n        this.searchView.renderFacets();\n      }\n      if (item instanceof SearchGroup)\n        this.groups.push(item);\n      this.searchView.change();\n    }\n\n    loadItem(item) {\n      this.items.push(item);\n      if (item instanceof SearchGroup)\n        this.groups.push(item);\n    }\n\n    remove(item) {\n      this.items.splice(this.items.indexOf(item), 1);\n      if (item instanceof SearchGroup) {\n        this.groups.splice(this.groups.indexOf(item), 1);\n      }\n      this.searchView.change();\n    }\n\n    getParams() {\n      let r = [];\n      for (let i of this.items)\n        r = r.concat(i.getParamValues());\n      return r;\n    }\n  }\n\n\n  class FacetView {\n    constructor(item) {\n      this.item = item;\n      this.values = [];\n    }\n\n    get separator() {\n      return ` <span class=\"facet-values-separator\">${Katrid.i18n.gettext('or')}</span> `;\n    }\n\n    init(item, values) {\n      this.item = item;\n      if (values)\n        this.values = values;\n      else\n        this.values = [{\n          searchString: this.item.getDisplayValue(), value: this.item.value\n        }];\n    }\n\n    addValue(value) {\n      return this.values.push(value);\n    }\n\n    get caption() {\n      return this.item.caption;\n    }\n\n    clear() {\n      this.values = [];\n    }\n\n    get templateValue() {\n      return (Array.from(this.values).map(\n        s => s instanceof SearchObject ? s.display : s)\n      ).join(this.separator);\n    }\n\n    link(searchView) {\n      const html = $(this.template());\n      this.item.facet = this;\n      this.element = html;\n      const rm = html.find('.facet-remove');\n      rm.click(evt => searchView.onRemoveItem(evt, this.item));\n      return html;\n    }\n\n    refresh() {\n      return this.element.find('.facet-value').html(this.templateValue());\n    }\n\n    load(searchView) {\n      searchView.query.loadItem(this.item);\n      this.render(searchView);\n    }\n\n    destroy() {\n      this.clear();\n    }\n\n    getParamValues() {\n      const r = [];\n      for (let v of this.values) {\n        r.push(this.item.getParamValue(v));\n      }\n      if (r.length > 1)\n        return [{'OR': r}];\n      return r;\n    }\n  }\n\n  class FacetGroup extends FacetView {\n    constructor(...args) {\n      super(...args);\n      this.grouping = true;\n    }\n\n    clear() {\n      let oldValues = this.values;\n      super.clear();\n      for (let v of oldValues)\n        if (v._ref)\n          v._ref._selected = false;\n    }\n\n    get separator() {\n      return ` <span> &gt; </span> `;\n    }\n\n    get caption() {\n      return '<span class=\"fa fa-bars\"></span>';\n    }\n  }\n\n\n\n\n  class SearchItem {\n    constructor(view, name, el) {\n      this.view = view;\n      this.name = name;\n      this.el = el;\n    }\n\n    getDisplayValue() {\n      if (this.value) {\n        return this.value[1];\n      }\n      return this.searchString;\n    }\n\n    getParamValue(name, value) {\n      const r = {};\n      if (_.isArray(value)) {\n        r[name] = value[0];\n      } else {\n        r[name + '__icontains'] = value;\n      }\n      return r;\n    }\n\n    _doChange() {\n      this.view.update();\n    }\n  }\n\n  class SearchFilter extends SearchItem {\n    constructor(view, name, caption, domain, group, el) {\n      super(view, name, el);\n      this.group = group;\n      this.caption = caption;\n      if (_.isString(domain))\n        domain = JSON.parse(domain.replace(/'/g, '\"'));\n      this.domain = domain;\n      this._selected = false;\n    }\n\n    static fromItem(view, el, group) {\n      return new SearchFilter(view, el.attr('name'), el.attr('caption') || el.attr('label'), el.attr('domain'), group, el);\n    }\n\n    toString() {\n      return this.caption;\n    }\n\n    toggle() {\n      this.selected = !this.selected;\n    }\n\n    get selected() {\n      return this._selected;\n    }\n\n    set selected(value) {\n      this._selected = value;\n      if (value)\n        this.group.addValue(this);\n      else\n        this.group.removeValue(this);\n      this._doChange();\n    }\n\n    getDisplayValue() {\n      return this.caption;\n    }\n\n    get facet() {\n      return this.group.facet;\n    }\n\n    getParamValue() {\n      return this.domain;\n    }\n\n    get value() {\n      return this.domain;\n    }\n  }\n\n  class SearchFilters extends Array {\n    constructor(view, facet) {\n      super();\n      this.view = view;\n      this._selection = [];\n      if (!facet)\n        facet = new FacetView(this);\n      this._facet = facet;\n    }\n\n    static fromItem(view, el) {\n      let group = new SearchFilters(view);\n      group.push(SearchFilter.fromItem(view, el, group));\n      return group;\n    }\n\n    static fromGroup(view, el) {\n      let group = new SearchFilters(view);\n      for (let child of el.children())\n        group.push(SearchFilter.fromItem(view, $(child), group));\n      console.log(group);\n      return group;\n    }\n\n    addValue(item) {\n      this._selection.push(item);\n      this._facet.values = this._selection.map(item => (new SearchObject(item.toString(), item.value)));\n      this._refresh();\n    }\n\n    removeValue(item) {\n      this._selection.splice(this._selection.indexOf(item), 1);\n      this._facet.values = this._selection.map(item => ({ searchString: item.getDisplayValue(), value: item.value }));\n      this._refresh();\n    }\n\n    selectAll() {\n      for (let item of this)\n        this.addValue(item);\n      this.view.update();\n    }\n\n    get caption() {\n      return '<span class=\"fa fa-filter\"></span>';\n    }\n\n    _refresh() {\n      if (this._selection.length) {\n        if (this.view.facets.indexOf(this._facet) === -1)\n          this.view.facets.push(this._facet);\n      } else if (this.view.facets.indexOf(this._facet) > -1)\n        this.view.facets.splice(this.view.facets.indexOf(this._facet), 1);\n    }\n\n    getParamValue(v) {\n      return v.value;\n    }\n\n    clear() {\n      this._selection = [];\n    }\n\n  }\n\n  class SearchGroups extends SearchFilters {\n    constructor(view, facet) {\n      if (!facet)\n        facet = new FacetGroup();\n      super(view, facet);\n    }\n\n    static fromGroup(opts) {\n      let view = opts.view;\n      let el = opts.el;\n      // get default facet\n      let facet = opts.facet || view.facetGrouping;\n      let group = new SearchGroups(view, facet);\n      if (el)\n        for (let child of el.children())\n          group.push(SearchGroup.fromItem(view, $(child), group));\n      return group;\n    }\n\n    addValue(item) {\n      this.view.groupLength++;\n      let newItem = new SearchObject(item.toString(), item.value);\n      newItem._ref = item;\n      this._facet.values.push(newItem);\n      this._refresh();\n    }\n\n    removeValue(item) {\n      this.view.groupLength--;\n      for (let i of this._facet.values)\n        if (i._ref === item) {\n          this._facet.values.splice(this._facet.values.indexOf(i), 1);\n          break;\n        }\n      this._refresh();\n    }\n\n    _refresh() {\n      if (this._facet.values.length) {\n        if (this.view.facets.indexOf(this._facet) === -1)\n          this.view.facets.push(this._facet);\n      } else if (this.view.facets.indexOf(this._facet) > -1)\n        this.view.facets.splice(this.view.facets.indexOf(this._facet), 1);\n    }\n  }\n\n  class SearchObject {\n    constructor(display, value) {\n      this.display = display;\n      this.value = value;\n    }\n  }\n\n  class SearchResult {\n    constructor(field, value) {\n      this.field = field;\n      this.value = value;\n      this.text = value[1];\n      this.indent = true;\n    }\n\n    select() {\n      this.field.selectItem(this.value);\n    }\n  }\n\n  class SearchField extends SearchItem {\n    constructor(view, name, el, field) {\n      super(view, name, el);\n      this.field = field;\n      this._expanded = false;\n      if (field.type === 'ForeignKey') {\n        this.expandable = true;\n        this.children = [];\n      } else {\n        this.expandable = false;\n      }\n    }\n\n    get expanded() {\n      return this._expanded;\n    }\n\n    set expanded(value) {\n      this._expanded = value;\n      if (value)\n        this._loadChildren();\n      else {\n        this.children = [];\n        if (this.view.$items)\n          for (let i = this.view.$items.length-1; i > 0; i--) {\n            let obj = this.view.$items[i];\n            if (obj.field === this) {\n              this.view.$items.splice(i, 1);\n\n            }\n          }\n      }\n    }\n\n    _loadChildren() {\n      this.loading = true;\n      this.view.scope.model.getFieldChoices(this.name, this.view.text)\n      .then(res => {\n        this.children = res.items;\n        // append returned items onto searchView.$items menu\n        let index = this.view.$items.indexOf(this);\n        if (index > -1) {\n          for (let obj of this.children) {\n            index++;\n            this.view.$items.splice(index, 0, new SearchResult(this, obj))\n          }\n        }\n      })\n      .finally(() => this.view.scope.$apply(() => this.loading = false));\n    }\n\n    get facet() {\n      if (!this._facet)\n        this._facet = new FacetView(this);\n      return this._facet;\n    }\n\n    getDisplayValue() {\n      return this.value;\n    }\n\n    getParamValue(value) {\n      const r = {};\n      let name = this.name;\n      if (_.isArray(value)) {\n        r[name] = value[0];\n      } else if (value instanceof SearchObject) {\n        return value.value;\n      } else {\n        r[name + '__icontains'] = value;\n      }\n      return r;\n    }\n\n    get caption() {\n      return this.field.caption;\n    }\n\n    get value() {\n      if (this._value)\n        return this._value[1];\n      return this.view.text;\n    }\n\n    select() {\n      this.facet.addValue(this.value);\n      this.view.addFacet(this.facet);\n      this.view.close();\n      this.view.update();\n    }\n\n    selectItem(item) {\n      let domain = {};\n      domain[this.field.name] = item[0];\n      this.facet.addValue(new SearchObject(item[1], domain));\n      this.view.addFacet(this.facet);\n      this.view.close();\n      this.view.update();\n    }\n\n    static fromField(view, el) {\n      let field = view.view.fields[el.attr('name')];\n      return new SearchField(view, field.name, el, field);\n    }\n\n    get template() {\n      return _.sprintf(Katrid.i18n.gettext(`Search <i>%(caption)s</i> by: <strong>%(text)s</strong>`), {\n        caption: this.field.caption,\n        text: this.view.text,\n      });\n    }\n  }\n\n  class SearchGroup extends SearchFilter {\n    constructor(view, name, caption, group, el) {\n      super(view, name, el);\n      this.group = group;\n      this.caption = caption;\n      this._selected = false;\n    }\n\n    static fromItem(view, el, group) {\n      return new SearchGroup(view, el.attr('name'), el.attr('caption'), group, el);\n    }\n\n    toString() {\n      return this.caption;\n    }\n  }\n\n  class CustomFilterItem extends SearchFilter {\n    constructor(view, field, condition, value, group) {\n      super(view, field.name, field.caption, null, group);\n      this.field = field;\n      this.condition = condition;\n      this._value = value;\n      this._selected = true;\n    }\n\n    toString() {\n      let s = this.field.format(this._value);\n      return this.field.caption + ' ' + conditionsLabels[this.condition].toLowerCase() + ' \"' + s + '\"';\n    }\n\n    get value() {\n      let r = {};\n      r[this.field.name + conditionSuffix[this.condition]] = this._value;\n      return r;\n    }\n\n  }\n\n  Katrid.UI.uiKatrid.controller('CustomFilterController', ['$scope', '$element', '$filter', function ($scope, $element, $filter) {\n    $scope.tempFilter = null;\n    $scope.customFilter = [];\n\n    $scope.fieldChange = function (field) {\n      $scope.field = field;\n      $scope.condition = field.defaultCondition;\n      $scope.conditionChange($scope.condition);\n    };\n\n    $scope.conditionChange = (condition) => {\n      $scope.controlVisible = $scope.field.isControlVisible(condition);\n    };\n\n    $scope.valueChange = (value) => {\n      $scope.searchValue = value;\n    };\n\n    $scope.addCondition = (field, condition, value) => {\n      if (!$scope.tempFilter)\n        $scope.tempFilter = new SearchFilters($scope.$parent.search);\n      $scope.tempFilter.push(new CustomFilterItem($scope.$parent.search, field, condition, value, $scope.tempFilter));\n      $scope.field = null;\n      $scope.condition = null;\n      $scope.controlVisible = false;\n      $scope.searchValue = undefined;\n    };\n\n    $scope.applyFilter = () => {\n      if ($scope.searchValue)\n        $scope.addCondition($scope.field, $scope.condition, $scope.searchValue);\n      $scope.customFilter.push($scope.tempFilter);\n      $scope.tempFilter.selectAll();\n      $scope.tempFilter = null;\n      $scope.customSearchExpanded = false;\n    };\n  }])\n\n  .directive('customFilter', () => (\n    {\n      restrict: 'A',\n      scope: {\n        action: '=',\n      },\n    }\n  ));\n\n  class SearchView {\n    constructor(scope, element, view) {\n      this.scope = scope;\n      this.element = element;\n      this.query = new SearchQuery(this);\n      this._viewMoreButtons = localStorage.getItem('katrid.search.viewMoreButtons') === 'true';\n      this.items = [];\n      this.fields = [];\n      this.filterGroups = [];\n      this.groups = [];\n      this._groupLength = this.groupLength = 0;\n      this.facets = [];\n      this.input = element.find('.search-view-input');\n      this.view = view;\n      // available dropdown items\n      this.$items = null;\n\n      // groups must have a unique facet\n      this.facetGrouping = new FacetGroup();\n\n      if (view) {\n        this.el = $(view.content);\n        this.menu = element.find('.search-dropdown-menu.search-view-menu');\n        // let menu = this.createMenu(scope, element.find('.search-dropdown-menu.search-view-menu'), element);\n\n        for (let child of this.el.children()) {\n          child = $(child);\n          let tag = child.prop('tagName');\n          let obj;\n          if (tag === 'FILTER') {\n            obj = SearchFilters.fromItem(this, child);\n            this.filterGroups.push(obj);\n          }\n          else if (tag === 'FILTER-GROUP') {\n            obj = SearchFilters.fromGroup(this, child);\n            this.filterGroups.push(obj);\n            continue;\n          }\n          else if (tag === 'GROUP') {\n            obj = SearchGroup.fromItem({ view: this, el: child });\n            this.groups.push(obj);\n            continue;\n          }\n          else if (tag === 'FIELD') {\n            obj = SearchField.fromField(this, child);\n            this.fields.push(obj);\n            continue;\n          }\n          console.log('obj', obj);\n          if (obj)\n            this.append(obj);\n        }\n\n        this.input\n        .on('input', evt => {\n          if (this.input.val().length) {\n            return this.show(evt);\n          } else {\n            return this.close(evt);\n          }\n        })\n        .on('keydown', evt => {\n          switch (evt.which) {\n            case Katrid.UI.keyCode.DOWN:\n              this.move(1);\n              evt.preventDefault();\n              break;\n            case Katrid.UI.keyCode.UP:\n              this.move(-1);\n              evt.preventDefault();\n              break;\n            case Katrid.UI.keyCode.ENTER:\n              this.scope.$apply(() => angular.element(this.menu.find('li.active a.search-menu-item')).scope().item.select(evt));\n              break;\n            case Katrid.UI.keyCode.BACKSPACE:\n              if (this.input.val() === '') {\n                this.scope.$apply(() => this.facets.splice(this.facets.length-1, 1).map(facet => facet.clear()));\n                this.update();\n                // const item = this.query.items[this.searchView.query.items.length-1];\n              }\n              break;\n          }\n        })\n        .on('blur', evt => {\n          this.input.val('');\n          return this.close();\n        });\n      }\n    }\n\n    addCustomGroup(field) {\n      if (!this.customGroups) {\n        this.customGroups = new SearchGroups(this, this.facetGrouping);\n        this.groups.push(this.customGroups);\n      }\n      let obj = new SearchGroup(this, field.name, field.caption, this.customGroups);\n      this.customGroups.push(obj);\n      obj.selected = true;\n    }\n\n    set viewMoreButtons(value) {\n      if (this._viewMoreButtons !== value) {\n        this._viewMoreButtons = value;\n        localStorage.setItem('katrid.search.viewMoreButtons', value);\n      }\n    }\n\n    get viewMoreButtons() {\n      return this._viewMoreButtons;\n    }\n\n    load(filter) {\n      Object.entries(filter).map((item, idx) => {\n        let i = this.getByName(item[0]);\n        if (i)\n          i.selected = true;\n      })\n    }\n\n    getByName(name) {\n      // try to find inside a group of filters\n      for (let item of this.filterGroups)\n        for (let subitem of item)\n          if (subitem.name === name)\n            return subitem;\n\n      for (let item of this.items)\n        if (item.name === name)\n          return item;\n    }\n\n    append(item) {\n      this.items.push(item);\n    }\n\n    addFacet(facet) {\n      if (!this.facets.includes(facet))\n        this.facets.push(facet);\n    }\n\n    first() {\n      this.menu.find('li.active a.search-menu-item').removeClass('active');\n      this.menu.find('li:first').addClass('active');\n    }\n\n    remove(index) {\n      let facet = this.facets[index];\n      facet.destroy();\n      this.facets.splice(index, 1);\n      this.update();\n    }\n\n    getParams() {\n      let r = [];\n      for (let i of this.facets)\n        if (!i.grouping)\n          r = r.concat(i.getParamValues());\n      return r;\n    }\n\n    dump() {\n      let res = [];\n      for (let i of this.facets)\n        res.push(i);\n      return res;\n    }\n\n    move(distance) {\n      const fw = distance > 0;\n      distance = Math.abs(distance);\n      while (distance !== 0) {\n        distance--;\n        let el = this.element.find('.search-view-menu li.active');\n        if (el.length) {\n          el.removeClass('active');\n          if (fw) {\n            el = el.next();\n          } else {\n            el = el.prev();\n          }\n          el.addClass('active');\n        } else {\n          if (fw) {\n            el = this.element.find('.search-view-menu > li:first');\n          } else {\n            el = this.element.find('.search-view-menu > li:last');\n          }\n          el.addClass('active');\n        }\n      }\n    }\n\n    update() {\n      if (this.groupLength !== this._groupLength) {\n        this._groupLength = this.groupLength;\n        this.scope.action.applyGroups(this.groupBy(), this.getParams());\n      }\n      else\n        // apply changes to window action\n        this.scope.action.setSearchParams(this.getParams());\n    }\n\n    groupBy() {\n      return this.facetGrouping.values.map(obj => obj._ref.name);\n    }\n\n    show() {\n      let shouldApply = false;\n      if (!this.$items) {\n        this.$items = [].concat(this.fields);\n        shouldApply = true;\n      }\n      // close expanded items\n      for (let obj of this.$items)\n        if (obj.expanded) {\n          obj.expanded = false;\n          shouldApply = true;\n        }\n      if (shouldApply)\n        this.scope.$apply();\n      this.menu.show();\n      this.first();\n    }\n\n    close() {\n      this.$items = null;\n      this.menu.hide();\n      this.reset();\n      this.input.val('');\n    }\n\n    reset() {\n      for (let i of this.fields)\n        if (i && i.children && i.children.length)\n          i.expanded = false;\n    }\n  }\n\n  class SearchViewComponent {\n    constructor() {\n      this.retrict = 'E';\n      this.templateUrl = 'view.search.jinja2';\n      this.replace = true;\n      this.scope = false;\n    }\n  }\n\n  class SearchViewArea {\n    constructor() {\n      this.restrict = 'A';\n      this.scope = false;\n    }\n\n    link(scope, el, attrs) {\n      let view = scope.action.views.search;\n      scope.action.searchView = new SearchView(scope, el, view);\n      if (scope.action.context.default_search) {\n        scope.action.searchView.load(scope.action.context.default_search);\n      }\n    }\n  }\n\n  Katrid.UI.uiKatrid.controller('SearchMenuController', ['$scope', function($scope) {\n\n  }]);\n\n  Katrid.UI.uiKatrid.directive('searchView', SearchViewComponent);\n  Katrid.UI.uiKatrid.directive('searchViewArea', SearchViewArea);\n\n  Katrid.UI.Views.SearchView = SearchView;\n  Katrid.UI.Views.SearchViewComponent = SearchViewComponent;\n\n})();\n","(function () {\n\n  let uiKatrid = Katrid.UI.uiKatrid;\n\n  let formCount = 0;\n\n  uiKatrid.directive('formField2', ['$compile', function ($compile) {\n    return {\n      restrict: 'A',\n      priority: 99,\n      replace: true,\n      // priority: -1,\n      compile(el, attrs) {\n        return function(scope, element, attrs, ctrl) {\n          let field = scope.view.fields[attrs.name];\n          if (_.isUndefined(field))\n            throw Error('Invalid field name \"' + attrs.name + '\"');\n          let templ = field.template.form;\n          field.assign(element);\n          if (!field.visible) {\n            el.remove();\n            return;\n          }\n          let fieldAttributes = field.getAttributes(attrs);\n          let sectionAttrs = {};\n\n          // conditional readonly\n          if (fieldAttributes['ng-readonly'])\n            sectionAttrs['ng-readonly'] = fieldAttributes['ng-readonly'].toString();\n\n          // conditional display\n          if (attrs.ngShow)\n            sectionAttrs['ng-show'] = attrs.ngShow;\n\n          // field help text\n          if (field.helpText) {\n            sectionAttrs['title'] = field.helpText;\n          }\n\n          let content = element.html();\n          templ = Katrid.app.getTemplate(templ, {\n            name: attrs.name, field, attrs: fieldAttributes, content, fieldAttributes: attrs, sectionAttrs,\n          });\n          templ = $compile(templ)(scope);\n          element.replaceWith(templ);\n\n          // Add input field for tracking on FormController\n          let fcontrol = templ.find('.form-field');\n          if (fcontrol.length) {\n            fcontrol = fcontrol[fcontrol.length - 1];\n            const form = templ.controller('form');\n            ctrl = angular.element(fcontrol).data().$ngModelController;\n            if (ctrl)\n              form.$addControl(ctrl);\n          }\n        }\n      },\n    };\n  }]);\n\n  uiKatrid.directive('inputField', () => ({\n    restrict: 'A',\n    scope: false,\n    link(scope, element, attrs) {\n      $(element).on('click', function() {\n        // input field select all text on click\n        $(this).select();\n      });\n    }\n  }));\n\n\n  uiKatrid.directive('view', () =>\n    ({\n      restrict: 'E',\n      template(element, attrs) {\n        formCount++;\n        return '';\n      },\n      link(scope, element, attrs) {\n        if (scope.model) {\n          element.attr('class', `view-form-${scope.model.name.replace(new RegExp('\\.', 'g'), '-')}`);\n          element.attr('id', `katrid-form-${formCount.toString()}`);\n          element.attr('model', scope.model);\n          return element.attr('name', `dataForm${formCount.toString()}`);\n        }\n      }\n    })\n  );\n\n  // uiKatrid.directive('list', ($compile, $http) =>\n  //   ({\n  //     restrict: 'E',\n  //     priority: 700,\n  //     link(scope, element, attrs) {\n  // console.log('render list');\n  //       let html = Katrid.UI.Utils.Templates.renderList(scope, element, attrs);\n  //       html = $compile(html)(scope);\n  //       return element.replaceWith(html);\n  //     }\n  //   })\n  // );\n\n  uiKatrid.directive('ngSum', () =>\n    ({\n      restrict: 'A',\n      priority: 9999,\n      require: 'ngModel',\n      link(scope, element, attrs, controller) {\n        const nm = attrs.ngSum.split('.');\n        const field = nm[0];\n        const subField = nm[1];\n        return scope.$watch(`record.$${field}`, function (newValue, oldValue) {\n          if (newValue && scope.record) {\n            let v = 0;\n            scope.record[field].map(obj => v += parseFloat(obj[subField]));\n            if (v.toString() !== controller.$modelValue) {\n              controller.$setViewValue(v);\n              controller.$render();\n            }\n          }\n        });\n      }\n    })\n  );\n\n\n  uiKatrid.directive('ngEnter', () =>\n    (scope, element, attrs) =>\n      element.bind(\"keydown keypress\", (event) => {\n        if (event.which === 13) {\n          scope.$apply(() => scope.$eval(attrs.ngEnter, {$event: event}));\n          event.preventDefault();\n        }\n      })\n  );\n\n  uiKatrid.directive('ngEsc', () =>\n    (scope, element, attrs) =>\n      element.bind(\"keydown keypress\", (event) => {\n        if (event.which === 27) {\n          scope.$apply(() => scope.$eval(attrs.ngEsc, {$event: event}));\n          event.preventDefault();\n        }\n      })\n  );\n\n\n\n  if ($.fn.modal)\n    $.fn.modal.Constructor.prototype._enforceFocus = function() {};\n\n  uiKatrid.directive('ajaxChoices', ['$location', $location =>\n    ({\n      restrict: 'A',\n      require: '?ngModel',\n      link(scope, element, attrs, controller) {\n        const {multiple} = attrs;\n        const serviceName = attrs.ajaxChoices;\n        let field = attrs.field;\n        let _timeout = null;\n        let domain;\n\n        const cfg = {\n          allowClear: true,\n          query(query) {\n\n            // make params\n            let data = {\n              args: [query.term],\n              kwargs: {\n                count: 1,\n                page: query.page,\n                name_fields: attrs.nameFields && attrs.nameFields.split(\",\") || null\n              }\n            };\n\n            if (domain)\n              data.domain = domain;\n\n            const f = () => {\n              let svc = new Katrid.Services.Model(serviceName);\n              if (field) svc = svc.getFieldChoices(field, query.term, data.kwargs);\n              else svc = new Katrid.Services.Model(attrs.modelChoices).searchName(data);\n              svc.then(res => {\n                let data = res.items;\n                const r = data.map(item => ({\n                  id: item[0],\n                  text: item[1]\n                }));\n                const more = query.page * Katrid.settings.services.choicesPageLimit < res.count;\n                return query.callback({\n                  results: r,\n                  more: more\n                })\n              });\n            };\n            if (_timeout) clearTimeout(_timeout);\n            _timeout = setTimeout(f, 400)\n\n          },\n          escapeMarkup(m) {\n            return m;\n          },\n          initSelection(element, callback) {\n            const v = controller.$modelValue;\n            if (v) {\n              if (multiple) {\n                const values = [];\n                for (let i of Array.from(v)) {\n                  values.push({id: i[0], text: i[1]});\n                }\n                return callback(values);\n              } else {\n                return callback({id: v[0], text: v[1]});\n              }\n            }\n          }\n        };\n        if (multiple)\n          cfg['multiple'] = true;\n\n        const el = element.select2(cfg);\n        let sel = el;\n        element.on('$destroy', function () {\n          $('.select2-hidden-accessible').remove();\n          $('.select2-drop').remove();\n          return $('.select2-drop-mask').remove();\n        });\n        el.on('change', function (e) {\n          const v = el.select2('data');\n          controller.$setDirty();\n          if (v)\n            controller.$viewValue = v;\n\n          return scope.$apply();\n        });\n\n        controller.$render = () => {\n          if (controller.$viewValue)\n            return element.select2('val', controller.$viewValue);\n        };\n      }\n    })]\n  );\n\n  uiKatrid.directive('inputMask', () =>\n    ({\n      restrict: 'A',\n      link(scope, el, attrs) {\n        el.inputmask();\n      }\n    })\n  );\n\n\n  class Decimal {\n    constructor($filter) {\n      this.restrict = 'A';\n      this.require = 'ngModel';\n      this.$filter = $filter;\n    }\n\n    link(scope, element, attrs, controller) {\n      let decimal = attrs.inputDecimal;\n      let opts = {\n        alias: 'numeric',\n        groupSeparator: '.',\n        unmaskAsNumber: true,\n        radixPoint: ',',\n        autoGroup: true,\n        digitsOptional: false,\n        placeholder: '0',\n      };\n      if (decimal)\n        opts.digits = parseInt(decimal);\n      element.inputmask(opts);\n\n      controller.$parsers.push(value => {\n        let v = element.inputmask('unmaskedvalue');\n        return v;\n      });\n\n      controller.$formatters.push((v) => {\n        if (_.isNumber(v))\n          v = v.toFixed(opts.digits).replace('.', ',');\n        else if (_.isString(v))\n          v = v.replace('.', ',');\n        return v;\n      });\n    }\n\n  }\n\n  uiKatrid.directive('inputDecimal', ['$filter', Decimal]);\n\n\n\n  uiKatrid.filter('moment', () =>\n    function (input, format) {\n      if (format) {\n        return moment().format(format);\n      }\n      return moment(input).fromNow();\n    }\n  );\n\n\n  uiKatrid.directive('fileReader', () =>\n    ({\n      restrict: 'A',\n      require: 'ngModel',\n      scope: {},\n      link(scope, element, attrs, controller) {\n\n        if (attrs.accept === 'image/*') {\n          element.tag === 'INPUT';\n        }\n\n        return element.bind('change', function () {\n          const reader = new FileReader();\n          reader.onload = event => controller.$setViewValue(event.target.result);\n          return reader.readAsDataURL(event.target.files[0]);\n        });\n      }\n    })\n  );\n\n\n  uiKatrid.directive('dateInput', ['$filter', ($filter) => ({\n    restrict: 'A',\n    require: '?ngModel',\n    link(scope, element, attrs, controller) {\n\n      let setNow = () => {\n        let value;\n        if (attrs.type === 'date')\n           value = (new Date()).toISOString().split('T')[0];\n        else\n          value = moment(new Date()).format('YYYY-MM-DD HH:mm').replace(' ', 'T');  // remove timezone info\n        $(element).val(value);\n        controller.$setViewValue(value);\n        _focus = false;\n      };\n\n      let _focus = true;\n\n      element\n      .focus(function() {\n        if (($(this).val() === ''))\n          _focus = true;\n      })\n      .keypress(function(evt) {\n        if (evt.key.toLowerCase() === 'h') {\n          setNow();\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n      })\n      .keydown(function(evt) {\n        if (/\\d/.test(evt.key)) {\n          if (($(this).val() === '') && (_focus))\n            setNow();\n        }\n      });\n\n      controller.$formatters.push(function(value) {\n        if (value) {\n          return new Date(value);\n        }\n      });\n\n      controller.$parsers.push(function (value) {\n        if (_.isDate(value)) {\n          let v = moment.utc(value).format('YYYY-MM-DD');\n          if (controller.$modelValue)\n            v += 'T' + controller.$modelValue.split('T', 1)[1];\n          let r = moment.utc(v).format('YYYY-MM-DDTHH:mm:ss');\n          console.log('ret', value, v, r);\n          return r;\n        }\n      });\n\n    }\n  })]);\n\n  uiKatrid.directive('timeInput', () => ({\n    restrict: 'A',\n    require: '?ngModel',\n    link(scope, el, attrs, controller) {\n      el.inputmask({ regex: '([0-1]?[0-9]|2[0-4]):([0-5][0-9])', insertMode: false });\n      // select all chars when focus\n      el.on('focus', function() {\n        setTimeout(() => $(this).select());\n      });\n\n      controller.$parsers.push(function (value) {\n        let v = controller.$modelValue.split('T', 1)[0] + 'T' + value;\n        console.log('time parser', v, value, controller.$viewValue);\n        let r = moment.utc(v).format('YYYY-MM-DDTHH:mm:ss');\n        if (r === 'Invalid date')\n          r = controller.$modelValue;\n        return r;\n      });\n\n      controller.$render = function() {\n        let v = controller.$modelValue;\n        console.log('render', v);\n        if (v)\n          return el.val(moment.utc(v).format('HH:mm'));\n      }\n\n    }\n  }));\n\n\n  uiKatrid.directive('cardDraggable', () => {\n    return {\n      restrict: 'A',\n      link(scope, element, attrs, controller) {\n        let cfg = {\n          connectWith: attrs.cardDraggable,\n          items: '> .sortable-item'\n        };\n        // Draggable write expression\n        if (!_.isUndefined(attrs.cardItem))\n          cfg['receive'] = (event, ui) => {\n            let parent = angular.element(ui.item.parent()).scope();\n            let scope = angular.element(ui.item).scope();\n            console.log(scope);\n            console.log(parent);\n            let data = {};\n            data['id'] = scope.record.id;\n            $.extend(data, parent.group._domain);\n            parent.model.write([data])\n            .then(res => {\n              console.log('write ok', res);\n            });\n          };\n        // Group reorder\n        if (!_.isUndefined(attrs.cardGroup))\n          cfg['update'] = (event, ui) => {\n            let ids = [];\n            $.each(ui.item.parent().find('.card-group'), (idx, el) => {\n              ids.push($(el).data('id'));\n            });\n            let groupName = element.find('.card-group').first().data('group-name');\n            let modelName = scope.$parent.$parent.view.fields[groupName].model;\n            Katrid.Services.data.reorder(modelName, ids)\n            .done(res => {\n              console.log(res);\n            });\n          };\n        element.sortable(cfg).disableSelection();\n      }\n    };\n  });\n\n  uiKatrid.directive('uiTooltip', () => ({\n    restrict: 'A',\n    link: (scope, el, attrs) => {\n      $(el).tooltip({\n        container: 'body',\n        delay: {\n          show: 200,\n          hide: 500\n        }\n      });\n    }\n  }));\n\n  uiKatrid.setFocus = (el) => {\n    let e = $(el);\n    // check if element object has select2 data\n    if (e.data('select2')) e.select2('focus');\n    else el.focus();\n  };\n\n  uiKatrid.directive('attachmentsButton', () => ({\n    restrict: 'A',\n    scope: false,\n    link: (scope, el) => {\n      let _pendingOperation;\n      scope.$parent.$watch('recordId', (key) => {\n        let attachment = new Katrid.Services.Model('ir.attachment', scope);\n        // scope.$parent.attachments = [];\n        clearTimeout(_pendingOperation);\n        _pendingOperation = setTimeout(() => {\n          attachment.search({ params: { model: scope.action.model.name, object_id: key }, count: false })\n          .then(res => {\n            let r = null;\n            if (res && res.data)\n              r = res.data;\n            scope.$apply(() => scope.attachments = r );\n          });\n        }, 1000);\n\n      });\n    }\n  }));\n\n  uiKatrid.directive('action', ['$compile', ($compile) => ({\n    restrict: 'E',\n    priority: 99,\n    link: (scope, el, attrs) => {\n      console.log('define action', attrs.ngClick);\n      let div = el.closest('div.data-form');\n      let actions = div.find('.dropdown-menu-actions');\n      let name = attrs.name;\n      let label = el.html();\n      let html = `<li><a href=\"javascript:void(0)\">${label}</a></li>`;\n      let newItem = $(html);\n      newItem.click(() => {\n        if (attrs.object) scope.model.rpc(attrs.object, [scope.$parent.record.id]);\n        //scope.$eval(attrs.ngClick);\n      });\n      actions.append(newItem);\n      el.remove();\n    }\n  })]);\n\n  class CardView {\n    constructor() {\n      this.restrict = 'E';\n      this.scope = false;\n    }\n\n    controller($scope, element, attrs) {\n      console.log('controller started');\n      $scope.dataSource.autoLoadGrouping = true;\n\n      $scope.cardShowAddGroupDlg = (event) => {\n        $scope.cardAddGroupDlg = true;\n        setTimeout(() => $(event.target).closest('.card-add-group').find('input').focus(), 10);\n      };\n\n      $scope.cardAddGroup = (event, name) => {\n        let gname = $(event.target).closest('.card-add-group').data('group-name');\n        let field = $scope.action.view.fields[gname];\n        let svc = new Katrid.Services.Model(field.model);\n        console.log('the name is', name);\n        svc.createName(name)\n        .done((res) => {\n          console.log(res);\n        });\n      };\n\n      $scope.cardAddItem = (event, name) => {\n        if (name) {\n          let ctx = {};\n          let g = $(event.target).closest('.card-group');\n          ctx['default_' + g.data('group-name')] = g.data('sequence-id');\n          scope.model.createName(name, ctx)\n          .done((res) => {\n            if (res.ok) {\n              let id = res.result[0];\n              scope.model.getById(id)\n              .done((res) => {\n                if (res.ok) {\n                  let s = angular.element(event.target).scope();\n                  let g = s.group;\n                  s.$apply(() => {\n                    g.records.push(res.result.data[0]);\n                  });\n                }\n              })\n            }\n          });\n        }\n        $scope.kanbanHideAddGroupItemDlg(event);\n      };\n\n    }\n  }\n\n})();\n","(function () {\n\n  let WIDGET_COUNT = 0;\n\n  let DEFAULT_COLS = {\n    'BooleanField': 3,\n    'DecimalField': 3,\n    'FloatField': 3,\n    'DateField': 3,\n    'DateTimeField': 3,\n    'IntegerField': 3,\n    'SmallIntegerField': 3,\n    'TimeField': 3,\n    'CharField': 3,\n    'OneToManyField': 12\n  };\n\n  class Field {\n    static get tag() {\n      return 'input';\n    }\n\n    constructor(scope, attrs, field, element) {\n      this.attrs = attrs;\n      this.scope = scope;\n      this.templAttrs = {};\n      this.wAttrs = {};\n      this.field = field;\n      this.element = element;\n      this.content = element.html();\n      // this.inline = scope.inline;\n      this.spanPrefix = '';\n\n      // Check if field depends from another\n      if ((field.depends != null) && field.depends.length)\n        scope.dataSource.addFieldWatcher(field);\n\n      if (attrs.ngShow)\n        this.templAttrs['ng-show'] = attrs.ngShow;\n\n      if (attrs.ngReadonly || field.readonly)\n        this.templAttrs['ng-readonly'] = attrs.ngReadonly || field.readonly;\n\n      if (field.attrs)\n        for (let k of field.attrs) {\n          let v = field.attrs[k];\n          if (k.startsWith('container') || ((k === 'ng-show') && !attrs.ngShow)) {\n            this.templAttrs[k] = v;\n          }\n        }\n\n      if (attrs.ngFieldChange) {\n        this.wAttrs['ng-change'] = attrs.ngFieldChange;\n      }\n\n      let cols = attrs.cols;\n\n      if (!cols) {\n        if (field.type === 'CharField')\n          if (field.max_length && (field.max_length < 30)) cols = 3;\n        if (!cols)\n          cols = DEFAULT_COLS[field.type] || 6;\n      }\n\n      this.col = cols;\n      this.classes = ['form-field'];\n\n      // track field changes\n      if (field.onchange)\n        scope.$watch();\n    }\n\n    fieldChangeEvent() {\n\n    }\n\n    get caption() {\n      return this.element.attr('label') || this.field.caption;\n    }\n\n    renderTo(templTag, inplaceEditor=false, cls='') {\n      let templAttrs = [];\n      for (let [k, v] of Object.entries(this.templAttrs))\n        templAttrs.push(k + '=' + '\"' + v + '\"');\n\n      if (inplaceEditor)\n        return `<${templTag} class=\"${cls}\" ${templAttrs.join('')}>${this.template(this.scope, this.element, this.attrs, this.field)}</${templTag}>`;\n\n      return `<${templTag} class=\"${this.field.type} section-field-${this.field.name} form-group\" ${templAttrs.join('')}>` +\n            this.template(this.scope, this.element, this.attrs, this.field) +\n            `</${templTag}>`\n    }\n\n    get ngModel() {\n      return `record.${this.field.name}`;\n    }\n\n    get id() {\n      if (!this._id)\n        this._id = ++WIDGET_COUNT;\n      return `katrid-input-${this._id.toString()}`;\n    }\n\n    widgetAttrs() {\n      let v;\n      const r = this.wAttrs;\n      if (this.field.required) {\n        r['required'] = null;\n      }\n\n      r['ng-model'] = this.ngModel;\n      if (this.field.attrs) {\n        for (let attr of Object.keys(this.field.attrs)) {\n          v = this.field.attrs[attr];\n          if (!attr.startsWith('container-') && (attr !== 'ng-show') && (attr !== 'ng-readonly')) {\n            r[attr] = v;\n          }\n        }\n      }\n\n      if (!_.isUndefined(this.attrs.$attr))\n      for (let attr of Object.keys(this.attrs.$attr)) {\n        let attrName = this.attrs.$attr[attr];\n        if (!attrName.startsWith('container-') && (attr !== 'ngShow') && (attr !== 'ngReadonly')) {\n          v = this.attrs[attr];\n          if (attrName.startsWith('field-')) {\n            attrName = attrName.substr(6, attrName.length - 6);\n          } else if (attrName === 'class')\n            this.classes.push(v);\n          r[attrName] = v;\n        }\n      }\n\n      if ((this.attrs.readonly != null) || this.field.readonly)\n        r['readonly'] = '';\n\n      if (this.classes)\n        r['class'] = this.classes.join(' ');\n\n      return r;\n    }\n\n    _getWidgetAttrs(scope, el, attrs, field) {\n      let html = '';\n      const attributes = this.widgetAttrs(scope, el, attrs, field);\n      for (let att in attributes) {\n        const v = attributes[att];\n        html += ` ${att}`;\n        if (v || (v === false)) {\n          if (_.isString(v) && (v.indexOf('\"') > -1)) {\n            html += `='${v}'`;\n          } else {\n            html += `=\"${v}\"`;\n          }\n        }\n      }\n      if (this.placeholder)\n        html += ` placeholder=\"${this.placeholder}\" `;\n\n      return html;\n    }\n\n    innerHtml() {\n      return '';\n    }\n\n    labelTemplate() {\n      const placeholder = '';\n      const label = this.caption;\n      if (this.attrs.nolabel === 'placeholder') {\n        this.placeholder = label;\n        return '';\n      } else if (!_.isUndefined(this.attrs.nolabel))\n        return '';\n      return `<label for=\"${this.id}\" class=\"form-label\">${label}</label>`;\n    }\n\n    get emptyText() {\n      if (this.inplaceEditor)\n        return '';\n      return '--';\n    }\n\n    get readOnlyClass() {\n      if (this.inplaceEditor || this.spanPrefix === '::')\n        return 'grid-field-readonly';\n      return 'form-field-readonly';\n    }\n\n    spanTemplate(scope, el, attrs, field) {\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}record.${this.field.name}.toString() || '${this.emptyText}' }}</span>`;\n    }\n\n    widgetTemplate() {\n      let html = `<${this.constructor.tag} id=\"${this.id}\" name=\"${this.field.name}\" ${this._getWidgetAttrs()}>`;\n      const inner = this.innerHtml();\n      if (inner)\n        html += inner + `</${this.constructor.tag}>`;\n      return html;\n    }\n\n    template() {\n      let label = '';\n      let span = this.spanTemplate();\n      if (!this.inplaceEditor) {\n        label = this.labelTemplate();\n        // span =\n      }\n      let widget = this.widgetTemplate();\n      if (this.inline === 'inline')\n        widget = `<div ng-if=\"dataSource.changing && dataSource.recordIndex === $index\">${widget}</div>`;\n      return `<div>${label}${span}${widget}</div>`;\n    }\n\n    link(scope, el, attrs, $compile, field) {\n      // Add watcher for field dependencies\n      if (field.depends) {\n        return (() => {\n          const result = [];\n          for (let dep of Array.from(field.depends)) {\n            if (!Array.from(scope.dataSource.fieldChangeWatchers).includes(dep)) {\n              scope.dataSource.fieldChangeWatchers.push(dep);\n              result.push(scope.$watch(`record.${dep}`, function(newValue, oldValue) {\n                // Ignore if dataSource is not in changing state\n                if ((newValue !== oldValue) && scope.dataSource.changing) {\n                  return scope.model.onFieldChange(dep, scope.record)\n                  .done(scope.dataSource.onFieldChange);\n                }\n              }));\n            }\n          }\n          return result;\n        })();\n      }\n    }\n\n    th() {\n      let cls = `${this.field.type} list-column`;\n      let lbl = this.element.attr('label') || `{{view.fields.${this.field.name}.caption}}`;\n      return `<th class=\"${cls}\" name=\"${this.field.name}\"><span>${lbl}</span></th>`;\n    }\n\n    _gridEditor(cls) {\n      return this.renderTo('section', true, cls);\n    }\n\n    _tdContent() {\n      return this.spanTemplate();\n    }\n\n    _td(cls) {\n      let content;\n      if (this.inplaceEditor)\n        content = this._gridEditor(cls);\n      else {\n        this.spanPrefix = '::';\n        content = this.spanTemplate();\n      }\n      return `<td class=\"${cls}\">${ content }</td>`;\n    }\n\n    td() {\n      if (this.content)\n        return this.content;\n      return this._td(`${this.field.type} field-${this.field.name}`);\n\n      let colHtml = this.element.html();\n      let s;\n      let fieldInfo = this.field;\n      let name = fieldInfo.name;\n      let editor = '';\n      if ((gridEditor === 'tabular') && html) editor = html;\n      if (colHtml) {\n        s = `<td><a data-id=\"{{::record.${name}[0]}}\">${colHtml}</a>${editor}</td>`;\n      } else if (fieldInfo.type === 'ForeignKey') {\n        s = `<td><a data-id=\"{{::row.${name}[0]}}\">{{row.${name}[1]}}</a>${editor}</td>`;\n      } else if  (fieldInfo._listChoices) {\n        s = `<td class=\"${cls}\">{{::view.fields.${name}._listChoices[row.${name}]}}${editor}</td>`;\n      } else if (fieldInfo.type === 'BooleanField') {\n        s = `<td class=\"bool-text ${cls}\">{{::row.${name} ? '${Katrid.i18n.gettext('yes')}' : '${Katrid.i18n.gettext('no')}'}}${editor}</td>`;\n      } else if (fieldInfo.type === 'IntegerField') {\n        s = `<td class=\"${cls}\">{{::row.${name}|number}}${editor}</td>`;\n      } else if (fieldInfo.type === 'DecimalField') {\n        let decimalPlaces = this.element.attr('decimal-places') || 2;\n        s = `<td class=\"${cls}\">{{::row.${name}|number:${ decimalPlaces } }}${editor}</td>`;\n      } else if (fieldInfo.type === 'DateField') {\n        s = `<td class=\"${cls}\">{{::row.${name}|date:'${Katrid.i18n.gettext('yyyy-mm-dd').replace(/[m]/g, 'M')}'}}${editor}</td>`;\n      } else if (fieldInfo.type === 'DateTimeField') {\n        s = `<td class=\"${cls}\">{{::row.${name}|date:'${Katrid.i18n.gettext('yyyy-mm-dd').replace(/[m]/g, 'M')}'}}${editor}</td>`;\n      } else {\n        s = `<td>{{ ::row.${name} }}</td>`;\n      }\n      return s;\n    }\n  }\n\n\n  class InputWidget extends Field {\n    static get tag() {\n      return 'input input-field';\n    }\n\n    constructor() {\n      super(...arguments);\n      this.classes.push('form-control');\n    }\n\n    get type() {\n      return 'text';\n    }\n\n    widgetTemplate1() {\n      let html;\n      if (this.constructor.tag.startsWith('input')) {\n        html = `<${this.tag} id=\"${attrs._id}\" type=\"${type}\" name=\"${attrs.name}\" ${this._getWidgetAttrs(scope, el, attrs, field)}>`;\n      } else {\n        html = `<${this.tag} id=\"${attrs._id}\" name=\"${attrs.name}\" ${this._getWidgetAttrs(scope, el, attrs, field)}>`;\n      }\n      const inner = this.innerHtml(scope, el, attrs, field);\n      if (inner) {\n        html += inner + `</${this.tag}>`;\n      }\n      return html;\n    }\n\n    widgetTemplate() {\n      let type = this.type;\n      const prependIcon = this.attrs.icon;\n      let html = `<${this.constructor.tag} id=\"${this.id}\" type=\"${this.type}\" name=\"${this.field.name}\" ${this._getWidgetAttrs()}>`;\n      if (prependIcon)\n        return `<label class=\"prepend-icon\"><i class=\"icon ${prependIcon}\"></i>${html}</label>`;\n\n      const inner = this.innerHtml();\n      if (inner)\n        html += inner + `</${this.constructor.tag}>`;\n\n      return html;\n    }\n  }\n\n\n  class StringField extends InputWidget {\n    widgetAttrs() {\n      const attributes = super.widgetAttrs();\n      if (this.field.maxLength)\n        attributes['maxlength'] = this.field.maxLength.toString();\n\n      return attributes;\n    }\n  }\n\n\n  class NumericField extends InputWidget {\n    static get tag() {\n      return 'input decimal';\n    }\n\n    get type() {\n      if (Katrid.settings.ui.isMobile)\n        return 'number';\n      return 'text';\n    }\n\n    spanTemplate() {\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}(record.${this.field.name}|number) || '${this.emptyText}' }}</span>`;\n    }\n  }\n\n\n  class IntegerField extends NumericField {\n    static get tag() {\n      return 'input decimal decimal-places=\"0\"';\n    }\n  }\n\n\n  class TimeField extends InputWidget {\n    get type() {\n      return 'time';\n    }\n  }\n\n\n  class SelectionField extends InputWidget {\n    static get tag() {\n      return 'select';\n    }\n\n    spanTemplate() {\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}view.fields.${this.field.name}.displayChoices[record.${this.field.name}] || '${this.emptyText}' }}</span>`;\n    }\n\n    innerHtml() {\n      return `<option ng-repeat=\"choice in view.fields.${this.field.name}.choices\" value=\"{{choice[0]}}\">{{choice[1]}}</option>`;\n    }\n  }\n\n\n  class ForeignKey extends Field {\n    static get tag() {\n      return 'input foreignkey';\n    }\n\n    spanTemplate() {\n      let allowOpen = true;\n      if (((this.attrs.allowOpen != null) && (this.attrs.allowOpen === 'false')) || ((this.attrs.allowOpen == null) && this.field.attrs && (this.field.attrs['allow-open'] === false)))\n        allowOpen = false;\n\n      if (!allowOpen || this.inList)\n        return `<span class=\"${this.readOnlyClass}\"><a href=\"javascript:void(0)\">{{ ${this.spanPrefix}record.${this.field.name}[1] || '${this.emptyText}' }}</a></span>`;\n\n      return `<span class=\"${this.readOnlyClass}\"><a href=\"#/action/${ this.field.model }/view/?id={{ ${this.spanPrefix}record.${this.field.name}[0] }}\" ng-click=\"action.openObject('${ this.field.model }', record.${this.field.name}[0], $event, '${ this.field.caption }')\">{{ ${this.spanPrefix}record.${this.field.name}[1] }}</a><span ng-if=\"!record.${this.field.name}[1]\">--</span></span>`;\n    }\n\n    get type() {\n      return 'hidden';\n    }\n\n    _tdContent() {\n      return `{{record.${this.field.name}[1]}}`;\n    }\n  }\n\n\n  class TextField extends StringField {\n    static get tag() {\n      return 'textarea';\n    }\n  }\n\n  class XmlField extends TextField {\n    constructor(...args) {\n      super(...args);\n      console.log('cols', this.cols);\n    }\n  }\n\n\n  class FloatField extends NumericField {\n    static get tag() {\n      if (Katrid.settings.ui.isMobile)\n        return 'input';\n      return 'input decimal';\n    }\n\n    get type() {\n      if (Katrid.settings.ui.isMobile)\n        return 'number';\n      return 'text';\n    }\n\n    spanTemplate() {\n      let decimalPlaces = this.attrs.decimalPlaces || 2;\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}(record.${this.field.name}|number:${ decimalPlaces }) || '${this.emptyText}' }}</span>`;\n    }\n\n    _tdContent() {\n      let filter;\n      let decimalPlaces = this.element.attr('decimal-places');\n      if (decimalPlaces)\n        filter `number:${ decimalPlaces }`;\n      else\n        filter = `numberFormat:${this.element.attr('max-digits') || 6}`;\n      return `{{::record.${this.field.name}|${filter} }}`;\n    }\n  }\n\n\n  class DecimalField extends FloatField {\n    spanTemplate() {\n      let maxDigits = this.attrs.maxDigits;\n      let fmt = 'number';\n      if (maxDigits)\n        fmt = 'numberFormat';\n      else\n        maxDigits = this.attrs.decimalPlaces || 2;\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}(record.${this.field.name}|${ fmt }:${ maxDigits }) || '${this.emptyText}' }}</span>`;\n    }\n\n    _tdContent(cls) {\n      let maxDigits = this.element.attr('max-digits');\n      if (maxDigits)\n        return `<td class=\"${cls}\">{{::record.${this.field.name}|numberFormat:${ maxDigits } }}${this._gridEditor()}</td>`;\n      else {\n        maxDigits = 2;\n        return `{{::record.${this.field.name}|number:${ maxDigits } }}`;\n      }\n    }\n  }\n\n\n  class DateField extends TextField {\n    static get tag() {\n      return 'input date-input';\n    }\n\n    get type() {\n      return 'date';\n    }\n\n    spanTemplate() {\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}(record.${this.field.name}|date:'${Katrid.i18n.gettext('yyyy-mm-dd').replace(/[m]/g, 'M')}') || '${this.emptyText}' }}</span>`;\n    }\n\n    // widgetTemplate() {\n    //   return `<div class=\"input-group date\" ng-show=\"dataSource.changing\">${ super.widgetTemplate() }<div class=\"input-group-append\"><button class=\"btn btn-default\" type=\"button\"><span class=\"fa fa-calendar\"></span></button></div></div>`;\n    // }\n\n    _tdContent(cls) {\n      return `{{::record.${this.field.name}|date:'${Katrid.i18n.gettext('yyyy-MM-dd')}'}}`;\n    }\n  }\n\n\n  class DateTimeField extends TextField {\n    static get tag() {\n      return 'input date-input';\n    }\n\n    get type() {\n      return 'datetime-local';\n    }\n\n    spanTemplate() {\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}(record.${this.field.name}|date:'${Katrid.i18n.gettext('yyyy-MM-dd hh:mma')}') || '${this.emptyText}' }}</span>`;\n    }\n  }\n\n\n  class OneToManyField extends Field {\n    static get tag() {\n      return 'grid';\n    }\n\n    spanTemplate() {\n      return '';\n    }\n\n    innerHtml() {\n      return this.content;\n      let html = his.element.html();\n      if (html)\n        return html;\n      return '';\n    }\n\n  }\n\n\n  class ManyToManyField extends Field {\n    static get tag() {\n      return 'input foreignkey multiple';\n    }\n\n    spanTemplate() {\n      return `<span class=\"${this.readOnlyClass}\">{{ ${this.spanPrefix}record.${this.field.name}|m2m }}</span>`;\n    }\n\n    get type() {\n      return 'hidden';\n    }\n  }\n\n\n  class BooleanField extends InputWidget {\n    spanTemplate() {\n      return `<span class=\"${this.readOnlyClass} bool-text\">\n  {{${this.spanPrefix}record.${this.field.name} ? '${Katrid.i18n.gettext('yes')}' : '${Katrid.i18n.gettext('no')}'}}\n  </span>`;\n    }\n\n    get type() {\n      return 'checkbox';\n    }\n\n    _td(cls) {\n      return super._td('bool-text ' + cls);\n    }\n\n    widgetTemplate() {\n      let html = super.widgetTemplate();\n      html = `<label class=\"checkbox\" ng-show=\"dataSource.changing\">${html}`;\n      if (this.field.help_text) {\n        html += this.field.help_text;\n      } else {\n        html += this.field.caption;\n      }\n      html += '<i></i></label>';\n      return html;\n    }\n\n    labelTemplate() {\n      if (this.field.help_text)\n        return super.labelTemplate();\n      return `<label for=\"${ this.id }\" class=\"form-label form-label-checkbox\"><span>${ this.caption }</span>&nbsp;</label>`;\n    }\n  }\n\n\n  class FileField extends InputWidget {\n    static get tag() {\n      return 'input file-reader';\n    }\n\n    get type() {\n      return 'file';\n    }\n  }\n\n\n  class ImageField extends FileField {\n    static get tag() {\n      return 'input file-reader accept=\"image/*\"';\n    }\n\n    spanTemplate() { return ''; }\n\n    widgetTemplate() {\n      let html = super.widgetTemplate();\n      let imgSrc = this.attrs.ngEmptyImage || (this.attrs.emptyImage && (\"'\" + this.attrs.emptyImage + \"'\")) || \"'/static/web/assets/img/no-image.png'\";\n      html = `<div class=\"image-box image-field\">\n  <img ng-src=\"{{ record.${this.field.name} || ${imgSrc} }}\" />\n    <div class=\"text-right image-box-buttons\">\n    <button class=\"btn btn-default\" type=\"button\" title=\"${Katrid.i18n.gettext('Change')}\" onclick=\"$(this).closest('.image-box').find('input').trigger('click')\"><i class=\"fa fa-pencil\"></i></button>\n    <button class=\"btn btn-default\" type=\"button\" title=\"${Katrid.i18n.gettext('Clear')}\" ng-click=\"record[this.field.name] = null\"><i class=\"fa fa-trash\"></i></button>\n    </div>\n      ${html}</div>`;\n      return html;\n    }\n  }\n\n\n  class PasswordField extends InputWidget {\n\n    get type() {\n      return 'password';\n    }\n\n    spanTemplate() {\n      return `<span class=\"form-field-readonly\">*******************</span>`;\n    }\n  }\n\n\n  class SortableField extends Field {\n    constructor(...args) {\n      super(...args);\n      this.col = null;\n    }\n    static get tag() {\n      return 'sortable-field';\n    }\n\n\n    get type() {\n      return 'hidden';\n    }\n\n    _td(cls) {\n      return `<td onclick=\"event.preventDefault();event.stopPropagation();\" class=\"list-column-sortable\">${ this.spanTemplate() }</td>`;\n    }\n\n    th() {\n      return `<th class=\"list-column-sortable\" name=\"${this.field.name}\"></th>`;\n    }\n\n    spanTemplate() {\n      return `<sortable-field id=\"${this.id}\" name=\"${this.field.name}\" ng-model=\"record.${this.field.name}\"/>`;\n    }\n  }\n\n  Object.assign(this.Katrid.UI.Widgets,\n    {\n      Field,\n      InputWidget,\n      StringField,\n      IntegerField,\n      SelectionField,\n      ForeignKey,\n      TextField,\n      DecimalField,\n      FloatField,\n      DateField,\n      DateTimeField,\n      TimeField,\n      BooleanField,\n      OneToManyField,\n      ManyToManyField,\n      FileField,\n      PasswordField,\n      ImageField,\n      SortableField,\n      XmlField,\n      input: InputWidget,\n      string: StringField,\n      integer: IntegerField,\n      selection: SelectionField,\n      text: TextField,\n      decimal: DecimalField,\n      float: FloatField,\n      file: FileField,\n      boolean: BooleanField,\n      password: PasswordField,\n      image: ImageField,\n      sortable: SortableField,\n    }\n  );\n})();\n","(function() {\n\n  let uiKatrid = Katrid.UI.uiKatrid;\n\n  uiKatrid.controller('TabsetController', [\n    '$scope',\n    function ($scope) {\n      const ctrl = this;\n      const tabs = (ctrl.tabs = ($scope.tabs = []));\n\n      ctrl.select = function (selectedTab) {\n        angular.forEach(tabs, function (tab) {\n          if (tab.active && (tab !== selectedTab)) {\n            tab.active = false;\n            tab.onDeselect();\n          }\n        });\n        selectedTab.active = true;\n        selectedTab.onSelect();\n      };\n\n      ctrl.addTab = function (tab) {\n        tabs.push(tab);\n        // we can't run the select function on the first tab\n        // since that would select it twice\n        if (tabs.length === 1) {\n          tab.active = true;\n        } else if (tab.active) {\n          ctrl.select(tab);\n        }\n      };\n\n      ctrl.removeTab = function (tab) {\n        const index = tabs.indexOf(tab);\n        //Select a new tab if the tab to be removed is selected and not destroyed\n        if (tab.active && (tabs.length > 1) && !destroyed) {\n          //If this is the last tab, select the previous tab. else, the next tab.\n          const newActiveIndex = index === (tabs.length - 1) ? index - 1 : index + 1;\n          ctrl.select(tabs[newActiveIndex]);\n        }\n        tabs.splice(index, 1);\n      };\n\n      var destroyed = undefined;\n      $scope.$on('$destroy', function () {\n        destroyed = true;\n      });\n    }\n  ]);\n\n  uiKatrid.directive('tabset', () =>\n    ({\n      restrict: 'EA',\n      transclude: true,\n      replace: true,\n      scope: {\n        type: '@'\n      },\n      controller: 'TabsetController',\n      template: `<div class=\"tabset\"><div class=\\\"clearfix\\\"></div>\\n` +\n      \"  <div class=\\\"nav nav-{{type || 'tabs'}}\\\" ng-class=\\\"{'nav-stacked': vertical, 'nav-justified': justified}\\\" ng-transclude></div>\\n\" +\n      \"  <div class=\\\"tab-content\\\">\\n\" +\n      \"    <div class=\\\"tab-pane\\\" \\n\" +\n      \"         ng-repeat=\\\"tab in tabs\\\" \\n\" +\n      `         ng-class=\"{active: tab.active}\">` +\n      `<div class=\"col-12\"><div class=\"row\" tab-content-transclude=\"tab\"></div></div>` +\n      \"    </div>\\n\" +\n      \"  </div>\\n\" +\n      \"</div>\\n\",\n      link(scope, element, attrs) {\n        scope.vertical = angular.isDefined(attrs.vertical) ? scope.$parent.$eval(attrs.vertical) : false;\n        return scope.justified = angular.isDefined(attrs.justified) ? scope.$parent.$eval(attrs.justified) : false;\n      }\n    })\n  );\n\n\n  uiKatrid.directive('tab', [\n    '$parse',\n    $parse =>\n      ({\n        require: '^tabset',\n        restrict: 'EA',\n        replace: true,\n        template: `<a class=\"nav-item nav-link\" href ng-click=\"select()\" tab-heading-transclude ng-class=\"{active: active, disabled: disabled}\">{{heading}}</a>`,\n        transclude: true,\n        scope: {\n          active: '=?',\n          heading: '@',\n          onSelect: '&select',\n          onDeselect: '&deselect'\n        },\n        controller() {\n          //Empty controller so other directives can require being 'under' a tab\n        },\n        compile(elm, attrs, transclude) {\n          return function (scope, elm, attrs, tabsetCtrl) {\n            scope.$watch('active', function (active) {\n              if (active) {\n                tabsetCtrl.select(scope);\n              }\n            });\n            scope.disabled = false;\n            if (attrs.disabled) {\n              scope.$parent.$watch($parse(attrs.disabled), function (value) {\n                scope.disabled = !!value;\n              });\n            }\n\n            scope.select = function () {\n              if (!scope.disabled) {\n                scope.active = true;\n              }\n            };\n\n            tabsetCtrl.addTab(scope);\n            scope.$on('$destroy', function () {\n              tabsetCtrl.removeTab(scope);\n            });\n            //We need to transclude later, once the content container is ready.\n            //when this link happens, we're inside a tab heading.\n            scope.$transcludeFn = transclude;\n          };\n        }\n\n      })\n\n  ]);\n\n  uiKatrid.directive('tabHeadingTransclude', [() =>\n    ({\n      restrict: 'A',\n      require: '^tab',\n      link(scope, elm, attrs, tabCtrl) {\n        scope.$watch('headingElement', function (heading) {\n          if (heading) {\n            elm.html('');\n            elm.append(heading);\n          }\n        });\n      }\n    })\n\n  ]);\n\n\n  uiKatrid.directive('tabContentTransclude', function () {\n\n    const isTabHeading = node => node.tagName && (node.hasAttribute('tab-heading') || node.hasAttribute('data-tab-heading') || (node.tagName.toLowerCase() === 'tab-heading') || (node.tagName.toLowerCase() === 'data-tab-heading'));\n\n    return {\n      restrict: 'A',\n      require: '^tabset',\n      link(scope, elm, attrs) {\n        const tab = scope.$eval(attrs.tabContentTransclude);\n        //Now our tab is ready to be transcluded: both the tab heading area\n        //and the tab content area are loaded.  Transclude 'em both.\n        tab.$transcludeFn(tab.$parent, function (contents) {\n          angular.forEach(contents, function (node) {\n            if (isTabHeading(node)) {\n              //Let tabHeadingTransclude know.\n              tab.headingElement = node;\n            } else {\n              elm.append(node);\n            }\n          });\n        });\n      }\n\n    };\n  });\n\n}).call(this);\n","(function () {\n  let uiKatrid = Katrid.UI.uiKatrid;\n\n  uiKatrid.directive('datePicker', ['$filter', $filter => ({\n    restrict: 'A',\n    require: '?ngModel',\n    link(scope, el, attrs, controller) {\n      // TODO localize the date format\n      let mask = '99/99/9999';\n      let format = attrs.datePicker || 'L';\n      if (format === 'L LT')\n        mask = '99/99/9999 99:99';\n      el.inputmask({\n        mask,\n        insertMode: false,\n      });\n      let calendar = $(el.parent()).datetimepicker({\n        useCurrent: false,\n        format,\n        icons: {\n          time: 'fa fa-clock',\n        },\n      })\n      .on('dp.change', function (evt) {\n        calendar.datetimepicker('hide');\n      })\n      .on('dp.hide', function (evt) {\n        controller.$setDirty();\n        controller.$setViewValue(el.val());\n      });\n      el.on('focus', () => el.select());\n\n      controller.$render = function () {\n        if (controller.$modelValue) {\n          calendar.datetimepicker('date', moment.utc(controller.$modelValue));\n        } else\n          el.val('');\n      };\n\n      el.on('blur', () => {\n        let v = moment(el.val(), format);\n        if (v.isValid())\n          controller.$modelValue = v.format('YYYY-MM-DD');\n        else\n          controller.$modelValue = null;\n      });\n\n      controller.$parsers.push(value => {\n        let v = moment(el.val(), format);\n        if (v.isValid()) {\n          if (format === 'L')\n            return v.format('YYYY-MM-DD');\n          else if (format === 'L LT')\n            return v.format('YYYY-MM-DD HH:mm');\n        }\n        return null;\n      });\n\n      // el.on('click', () => setTimeout(() => $(el).select()));\n      // controller.$formatters.push(function (value) {\n      //   if (value) {\n      //     const dt = new Date(value);\n      //     // calendar.datepicker('setDate', dt);\n      //     return $filter('date')(value, dateFmt);\n      //   }\n      //   return value;\n      // });\n\n      // controller.$render = function () {\n      //   if (_.isDate(controller.$viewValue)) {\n      //     const v = $filter('date')(controller.$viewValue, dateFmt);\n      //     return el.val(v);\n      //   } else {\n      //     return el.val(controller.$viewValue);\n      //   }\n      // };\n\n    }\n  })]);\n\n  uiKatrid.directive('timePicker', ['$filter', $filter => ({\n    restrict: 'A',\n    require: '?ngModel',\n    link(scope, el, attrs, controller) {\n      // TODO localize the time format\n      let mask = '99:99';\n      el.inputmask({\n        mask,\n        insertMode: false,\n      });\n      el.on('focus', () => el.select());\n\n    }\n  })]);\n\n})();\n","(function () {\n\n  class Comments {\n    constructor(scope) {\n      this.scope = scope;\n      this.model = this.scope.$parent.model;\n\n      this.scope.$parent.$watch('recordId', key => {\n        this.items = null;\n        this.scope.loading = Katrid.i18n.gettext('Loading...');\n        clearTimeout(this._pendingOperation);\n        this._pendingOperation = setTimeout(() => {\n          this._pendingOperation = null;\n          this.masterChanged(key);\n          return this.scope.$apply(() => {\n            return this.scope.loading = null;\n          });\n        }\n        , 1000);\n      });\n\n      this.items = [];\n    }\n\n    async masterChanged(key) {\n      if (key) {\n        const svc = new Katrid.Services.Model('mail.message');\n        if (this.scope.$parent.record)\n        return svc.post('get_messages', { args: [this.scope.$parent.record.messages] })\n        .then(res => {\n          this.items = res;\n          this.scope.$apply();\n        });\n      }\n    }\n\n    async _sendMesage(msg, attachments) {\n      if (attachments)\n        attachments = attachments.map((obj) => obj.id);\n      let msgs = await this.model.post('post_message', { args: [[this.scope.$parent.recordId]], kwargs: { content: msg, content_subtype: 'html', format: true, attachments: attachments } });\n      this.scope.message = '';\n      this.items = msgs.concat(this.items);\n      this.scope.$apply();\n      this.scope.files = null;\n      this.scope.hideEditor();\n    }\n\n    postMessage(msg) {\n      if (this.scope.files.length) {\n        let files = [];\n        for (let f of this.scope.files) files.push(f.file);\n        var me = this;\n        Katrid.Services.Attachments.upload({files: files}, this.scope)\n        .done((res) => {\n          me._sendMesage(msg, res);\n        });\n      } else\n        this._sendMesage(msg);\n    }\n  }\n\n\n  Katrid.UI.uiKatrid.directive('comments', () =>\n    ({\n      restrict: 'E',\n      scope: {},\n      replace: true,\n      template: '<div class=\"content\"><div class=\"comments\"><mail-comments/></div></div>',\n      link(scope, element, attrs) {\n        if (element.closest('.modal-dialog').length)\n          element.remove();\n        else\n          $(element).closest('.form-view[ng-form=form]').children('.content:first').append(element);\n      }\n    })\n  );\n\n  Katrid.UI.uiKatrid.directive('mailComments', () =>\n    ({\n      restrict: 'E',\n      controller: ['$scope', ($scope) => {\n        $scope.comments = new Comments($scope);\n        $scope.files = [];\n\n        $scope.showEditor = () => {\n          $($scope.el).find('#mail-editor').show();\n          $($scope.el).find('#mail-msgEditor').focus();\n        };\n\n        $scope.hideEditor = () => {\n          $($scope.el).find('#mail-editor').hide();\n        };\n\n        $scope.attachFile = (file) => {\n          for (let f of file.files)\n            $scope.files.push({\n              name: f.name,\n              type: f.type,\n              file: f\n            });\n          $scope.$apply();\n        };\n\n        $scope.deleteFile = (idx) => {\n          $scope.files.splice(idx, 1);\n        }\n      }],\n      replace: true,\n      link(scope, element, attrs) {\n        scope.el = element;\n      },\n\n      template() {\n        return `\n  <div class=\"container\">\n          <h3>${Katrid.i18n.gettext('Comments')}</h3>\n          <div class=\"form-group\">\n          <button class=\"btn btn-outline-secondary\" ng-click=\"showEditor();\">${Katrid.i18n.gettext('New message')}</button>\n          <button class=\"btn btn-outline-secondary\">${Katrid.i18n.gettext('Log an internal note')}</button>\n          </div>\n          <div id=\"mail-editor\" style=\"display: none;\">\n            <div class=\"form-group\">\n              <textarea id=\"mail-msgEditor\" class=\"form-control\" ng-model=\"message\"></textarea>\n            </div>\n            <div class=\"form-group\">\n              <button class=\"btn btn-default\" type=\"button\" onclick=\"$(this).next().click()\"><i class=\"fa fa-paperclip\"></i></button>\n              <input class=\"input-file-hidden\" type=\"file\" multiple onchange=\"angular.element(this).scope().attachFile(this)\">\n            </div>\n            <div class=\"form-group\" ng-show=\"files.length\">\n              <ul class=\"list-inline attachments-area\">\n                <li ng-repeat=\"file in files\" ng-click=\"deleteFile($index)\" title=\"${ Katrid.i18n.gettext('Delete this attachment') }\">{{ file.name }}</li>\n              </ul>\n            </div>\n            <div class=\"from-group\">\n              <button class=\"btn btn-primary\" ng-click=\"comments.postMessage(message)\">${Katrid.i18n.gettext('Send')}</button>\n            </div>\n          </div>\n  \n          <hr>\n  \n          <div ng-show=\"loading\">{{ loading }}</div>\n          <div class=\"comment media col-sm-12\" ng-repeat=\"comment in comments.items\">\n            <div class=\"media-left\">\n              <img src=\"/static/web/assets/img/avatar.png\" class=\"avatar rounded\">\n            </div>\n            <div class=\"media-body\">\n              <strong>{{ ::comment.author_name }}</strong> - <span class=\"timestamp text-muted\" title=\"$\\{ ::comment.date_time|moment:'LLLL'}\"> {{::comment.date_time|moment}}</span>\n              <div class=\"clearfix\"></div>\n              <div class=\"form-group\">\n                {{::comment.content}}\n              </div>\n              <div class=\"form-group\" ng-if=\"comment.attachments\">\n                <ul class=\"list-inline\">\n                  <li ng-repeat=\"file in comment.attachments\"><a href=\"/web/content/$\\{ ::file.id }/?download\">{{ ::file.name }}</a></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n    </div>`;\n      }\n    })\n  );\n\n\n  class MailFollowers {}\n\n\n  class MailComments extends Katrid.UI.Widgets.Widget {\n    static initClass() {\n      this.prototype.tag = 'mail-comments';\n    }\n\n    spanTemplate(scope, el, attrs, field) {\n      return '';\n    }\n  }\n  MailComments.initClass();\n\n\n  Katrid.UI.Widgets.MailComments = MailComments;\n\n})();\n","(function () {\n  class BaseTemplate {\n\n    getSettingsDropdown(viewType) {\n      if (viewType === 'form') {\n        return `<ul class=\"dropdown-menu pull-right\">\n    <li>\n      <a href=\"javascript:void(0);\" ng-click=\"action.showDefaultValueDialog()\">${ Katrid.i18n.gettext('Set Default') }</a>\n    </li>\n  </ul>`;\n      }\n    }\n\n\n    getSetDefaultValueDialog() {\n      return `\\\n  <div class=\"modal fade\" id=\"set-default-value-dialog\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"${ Katrid.i18n.gettext('Close') }\"><span aria-hidden=\"true\">&times;</span></button>\n          <h4 class=\"modal-title\">${ Katrid.i18n.gettext('Set Default') }</h4>\n        </div>\n        <div class=\"modal-body\">\n          <select class=\"form-control\" id=\"id-set-default-value\">\n            <option ng-repeat=\"field in view.fields\">{{ field.caption }} = {{ record[field.name] }}</option>\n          </select>\n          <div class=\"radio\">\n            <label><input type=\"radio\" name=\"public\">${ Katrid.i18n.gettext('Only me') }</label>\n          </div>\n          <div class=\"radio\">\n            <label><input type=\"radio\" name=\"public\">${ Katrid.i18n.gettext('All users') }</label>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\">${ Katrid.i18n.gettext('Save') }</button>\n          <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">${ Katrid.i18n.gettext('Cancel') }</button>\n        </div>\n      </div>\n    </div>\n  </div>\\\n  `;\n    }\n\n    static get cssListClass() {\n      return 'table table-striped table-bordered table-condensed table-hover display responsive nowrap dataTable no-footer dtr-column';\n    }\n\n    renderList(scope, element, attrs, rowClick, parentDataSource, showSelector=true) {\n      let ths = '<th ng-show=\"dataSource.groups.length\"></th>';\n      let tfoot = false;\n      let totals = [];\n      let cols = `<td ng-show=\"dataSource.groups.length\" class=\"group-header\">\n  <div ng-show=\"record._group\">\n  <span class=\"fa fa-fw fa-caret-right\"\n    ng-class=\"{'fa-caret-down': record._group.expanded, 'fa-caret-right': record._group.collapsed}\"></span>\n    {{::record._group.__str__}} ({{::record._group.count }})</div></td>`;\n      if (showSelector) {\n        ths += `<th class=\"list-record-selector\"><input type=\"checkbox\" ng-click=\"action.selectToggle($event.currentTarget)\" onclick=\"$(this).closest('table').find('td.list-record-selector input').prop('checked', $(this).prop('checked'))\"></th>`;\n        cols += `<td class=\"list-record-selector\" onclick=\"event.stopPropagation();\"><input title=\"teste\" type=\"checkbox\" ng-click=\"action.selectToggle($event.currentTarget)\" onclick=\"if (!$(this).prop('checked')) $(this).closest('table').find('th.list-record-selector input').prop('checked', false)\"></td>`;\n      }\n\n      for (let col of Array.from(element.children())) {\n        let colHtml = col.outerHTML;\n        col = $(col);\n        let name = col.attr('name');\n        if (!name) {\n          cols += `<td>${col.html()}</td>`;\n          ths += \"<th><span>${col.attr('label')}</span></th>\";\n          continue;\n        }\n\n        let total = col.attr('total');\n        if (total) {\n          totals.push([name, total]);\n          tfoot = true;\n        } else totals.push(total);\n\n        name = col.attr('name');\n        const fieldInfo = scope.view.fields[name];\n\n        if ((col.attr('visible') === 'False') || (fieldInfo.visible === false))\n          continue;\n\n        // if (fieldInfo.choices) {\n        //   fieldInfo._listChoices = {};\n        //   for (let choice of Array.from(fieldInfo.choices)) {\n        //     fieldInfo._listChoices[choice[0]] = choice[1];\n        //   }\n        // }\n\n        let _widget = fieldInfo.createWidget(col.attr('widget'), scope, col, col);\n        _widget.inList = true;\n        _widget.inplaceEditor = Boolean(scope.inline);\n        ths += _widget.th(col.attr('label'));\n\n        cols += _widget.td(scope.inline, colHtml, col);\n      }\n      if (parentDataSource) {\n        ths += '<th class=\"list-column-delete\" ng-show=\"parent.dataSource.changing && !dataSource.readonly\">';\n        cols += '<td class=\"list-column-delete\" ng-show=\"parent.dataSource.changing && !dataSource.readonly\" ng-click=\"removeItem($index);$event.stopPropagation();\"><i class=\"fa fa-trash-o\"></i></td>';\n      }\n      if ((rowClick == null)) {\n        rowClick = 'action.listRowClick($index, row, $event)';\n      }\n\n      if (tfoot)\n        tfoot = `<tfoot><tr>${ totals.map(t => (t ? `<td class=\"text-right\"><strong><ng-total field=\"${ t[0] }\" type=\"${ t[1] }\"></ng-total></ strong></td>` : '<td class=\"borderless\"></td>')).join('') }</tr></tfoot>`;\n      else\n        tfoot = '';\n      let gridClass = ' grid';\n      if (scope.inline)\n        gridClass += ' inline-editor';\n      return `<table class=\"${this.constructor.cssListClass}${gridClass}\">\n  <thead><tr>${ths}</tr></thead>\n  <tbody>\n  <tr ng-repeat=\"record in records | limitTo:totalDisplayed\" ng-click=\"${rowClick}\" ng-class=\"{'group-header': record._hasGroup, 'form-data-changing': (dataSource.changing && dataSource.recordIndex === $index), 'form-data-readonly': !(dataSource.changing && dataSource.recordIndex === $index)}\" ng-form=\"grid-row-form-{{$index}}\" id=\"grid-row-form-{{$index}}\">${cols}</tr>\n  </tbody>\n  ${ tfoot }\n  </table>\n  <a href=\"javascript:void(0)\" ng-show=\"records.length > totalDisplayed\" ng-click=\"totalDisplayed = totalDisplayed + 1000\">${ Katrid.i18n.gettext('View more...') }</a>\n  `;\n    }\n\n    renderGrid(scope, element, attrs, rowClick) {\n      const tbl = this.renderList(scope, element, attrs, rowClick, true, false);\n      let buttons;\n      if (attrs.inline == 'inline')\n        buttons = `\n<button class=\"btn btn-xs btn-info\" ng-click=\"addItem()\" ng-show=\"parent.dataSource.changing && !dataSource.changing\" type=\"button\">${Katrid.i18n.gettext('Add')}</button>\n<button class=\"btn btn-xs btn-info\" ng-click=\"addItem()\" ng-show=\"dataSource.changing\" type=\"button\">${Katrid.i18n.gettext('Save')}</button>\n<button class=\"btn btn-xs btn-info\" ng-click=\"cancelChanges()\" ng-show=\"dataSource.changing\" type=\"button\">${Katrid.i18n.gettext('Cancel')}</button>\n`;\n      else\n        buttons = `\n<button class=\"btn btn-xs btn-info\" ng-click=\"addItem()\" ng-show=\"parent.dataSource.changing\" type=\"button\">${Katrid.i18n.gettext('Add')}</button>\n<button class=\"btn btn-xs btn-outline-secondary float-right\" ng-click=\"pasteData()\" ng-show=\"parent.dataSource.changing\" type=\"button\" title=\"${Katrid.i18n.gettext('Paste')}\">\n<i class=\"fa fa-clipboard\"></i>\n</button>\n`;\n      return `<div style=\"overflow-x: auto;\"><div ng-show=\"!dataSource.readonly\">\n  ${buttons}\n  </div><div class=\"row inline-input-dialog\" ng-show=\"dataSource.changing\"/>${tbl}</div>`;\n    }\n\n    windowDialog(scope) {\n      console.log('window dialog', scope);\n      return `\\\n  <div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n          <h4 class=\"modal-title\" id=\"myModalLabel\">\n          {{dialogTitle}}\n          {{action.info.display_name}}</h4>\n        </div>\n        <div class=\"modal-body\">\n    <div class=\"modal-dialog-body\" ng-class=\"{'form-data-changing': dataSource.changing}\"></div>\n  <div class=\"clearfix\"></div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" type=\"button\" ng-click=\"dataSource.saveAndClose()\" ng-show=\"dataSource.changing\">${Katrid.i18n.gettext('Save')}</button>\n          <button type=\"button\" class=\"btn btn-default\" type=\"button\" data-dismiss=\"modal\" ng-show=\"dataSource.changing\">${Katrid.i18n.gettext('Cancel')}</button>\n          <button type=\"button\" class=\"btn btn-default\" type=\"button\" data-dismiss=\"modal\" ng-show=\"!dataSource.changing\">${Katrid.i18n.gettext('Close')}</button>\n        </div>\n      </div>\n    </div>\n  </div>\\\n  `;\n    }\n\n    renderReportDialog(scope) {\n      return `<div ng-controller=\"ReportController\">\n  <form id=\"report-form\" method=\"get\" action=\"/web/reports/report/\">\n    <div class=\"data-heading panel panel-default\">\n      <div class=\"panel-body\">\n      <h2>{{ report.name }}</h3>\n      <div class=\"toolbar\">\n        <button class=\"btn btn-primary\" type=\"button\" ng-click=\"report.preview()\"><span class=\"fa fa-print fa-fw\"></span> ${ Katrid.i18n.gettext('Preview') }</button>\n  \n        <div class=\"btn-group\">\n          <button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                  aria-expanded=\"false\">${ Katrid.i18n.gettext('Export')  } <span class=\"caret\"></span></button>\n          <ul class=\"dropdown-menu\">\n            <li><a ng-click=\"Katrid.Reports.Reports.preview()\">PDF</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('docx')\">Word</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('xlsx')\">Excel</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('pptx')\">PowerPoint</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('csv')\">CSV</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('txt')\">${ Katrid.i18n.gettext('Text File') }</a></li>\n          </ul>\n        </div>\n  \n        <div class=\"btn-group\">\n          <button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                  aria-expanded=\"false\">${ Katrid.i18n.gettext('My reports')  } <span class=\"caret\"></span></button>\n          <ul class=\"dropdown-menu\">\n            <li><a ng-click=\"Katrid.Reports.Reports.preview()\">PDF</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('docx')\">Word</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('xlsx')\">Excel</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('pptx')\">PowerPoint</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('csv')\">CSV</a></li>\n            <li><a href=\"javascript:void(0)\" ng-click=\"Katrid.Reports.Reports.export('txt')\">${ Katrid.i18n.gettext('Text File') }</a></li>\n          </ul>\n        </div>\n  \n      <div class=\"pull-right btn-group\">\n        <button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                aria-expanded=\"false\"><i class=\"fa fa-gear fa-fw\"></i></button>\n        <ul class=\"dropdown-menu\">\n          <li><a href=\"javascript:void(0)\" ng-click=\"report.saveDialog()\">${ Katrid.i18n.gettext('Save') }</a></li>\n          <li><a href=\"#\">${ Katrid.i18n.gettext('Load') }</a></li>\n        </ul>\n      </div>\n  \n      </div>\n    </div>\n    </div>\n    <div class=\"col-sm-12\">\n      <table class=\"col-sm-12\" style=\"margin-top: 20px; display:none;\">\n        <tr>\n          <td colspan=\"2\" style=\"padding-top: 8px;\">\n            <label>${ Katrid.i18n.gettext('My reports') }</label>\n  \n            <select class=\"form-control\" ng-change=\"action.userReportChanged(action.userReport.id)\" ng-model=\"action.userReport.id\">\n                <option value=\"\"></option>\n                <option ng-repeat=\"rep in userReports\" value=\"{{ rep.id }}\">{{ rep.name }}</option>\n            </select>\n          </td>\n        </tr>\n      </table>\n    </div>\n  <div id=\"report-params\">\n  <div id=\"params-fields\" class=\"col-sm-12 form-group\">\n    <div class=\"checkbox\"><label><input type=\"checkbox\" ng-model=\"paramsAdvancedOptions\"> ${ Katrid.i18n.gettext('Advanced options') }</label></div>\n    <div ng-show=\"paramsAdvancedOptions\">\n      <div class=\"form-group\">\n        <label>${ Katrid.i18n.gettext('Printable Fields') }</label>\n        <input type=\"hidden\" id=\"report-id-fields\"/>\n      </div>\n      <div class=\"form-group\">\n        <label>${ Katrid.i18n.gettext('Totalizing Fields') }</label>\n        <input type=\"hidden\" id=\"report-id-totals\"/>\n      </div>\n    </div>\n  </div>\n  \n  <div id=\"params-sorting\" class=\"col-sm-12 form-group\">\n    <label class=\"control-label\">${ Katrid.i18n.gettext('Sorting') }</label>\n    <select multiple id=\"report-id-sorting\"></select>\n  </div>\n  \n  <div id=\"params-grouping\" class=\"col-sm-12 form-group\">\n    <label class=\"control-label\">${ Katrid.i18n.gettext('Grouping') }</label>\n    <select multiple id=\"report-id-grouping\"></select>\n  </div>\n  \n  <div class=\"clearfix\"></div>\n  \n  </div>\n    <hr>\n      <table class=\"col-sm-12\">\n        <tr>\n          <td class=\"col-sm-4\">\n            <select class=\"form-control\" ng-model=\"newParam\">\n              <option value=\"\">--- ${ Katrid.i18n.gettext('FILTERS') } ---</option>\n              <option ng-repeat=\"field in report.fields\" value=\"{{ field.name }}\">{{ field.label }}</option>\n            </select>\n          </td>\n          <td class=\"col-sm-8\">\n            <button\n                class=\"btn btn-default\" type=\"button\"\n                ng-click=\"report.addParam(newParam)\">\n              <i class=\"fa fa-plus fa-fw\"></i> ${ Katrid.i18n.gettext('Add Parameter') }\n            </button>\n          </td>\n        </tr>\n      </table>\n  <div class=\"clearfix\"></div>\n  <hr>\n  <div id=\"params-params\">\n    <div ng-repeat=\"param in report.params\" ng-controller=\"ReportParamController\" class=\"row form-group\">\n      <div class=\"col-sm-12\">\n      <div class=\"col-sm-4\">\n        <label class=\"control-label\">{{param.label}}</label>\n        <select ng-model=\"param.operation\" class=\"form-control\" ng-change=\"param.setOperation(param.operation)\">\n          <option ng-repeat=\"op in param.operations\" value=\"{{op.id}}\">{{op.text}}</option>\n        </select>\n      </div>\n      <div class=\"col-sm-8\" id=\"param-widget\"></div>\n      </div>\n    </div>\n  </div>\n  </form>\n  </div>\\\n  `;\n    }\n\n  }\n\n\n  Katrid.UI.utils = {\n    BaseTemplate,\n    Templates: new BaseTemplate()\n  };\n\n})();\n","(function() {\n\n  class NumPad {\n    constructor($compile) {\n      this.restrict = 'A';\n      this.require = 'ngModel';\n      this.scope = {};\n      this.$compile = $compile;\n    }\n    link(scope, el, attrs, ngModel) {\n\n      el.bind('click', () => {\n        console.log('numpad click');\n        let templ = this.$compile(Katrid.app.getTemplate('ui.numpad.pug'))(scope);\n        scope.val = parseFloat(ngModel.$modelValue || 0);\n        scope.$apply();\n        let modal = $(templ).modal();\n        modal.on('hidden.bs.modal', function() {\n          $(this).remove();\n        });\n\n        let comma = false;\n        let frac = '';\n\n        scope.done = () => {\n          scope.$parent.record[ngModel.$name] = scope.val.toString();\n          if (attrs.ngChange)\n            scope.$parent.$eval(attrs.ngChange);\n          ngModel.$setDirty();\n          modal.modal('hide');\n        };\n\n        scope.cancel = () => {\n          modal.modal('hide');\n        };\n\n        scope.buttonClick = (num) => {\n          let s = scope.val.toFixed(2).toString().replace('.', '');\n          if (num === 'bs') {\n            s = s.substr(0, s.length-1);\n            if (s)\n              scope.val = parseFloat(s) / 100;\n            else\n              scope.val = 0;\n          }\n          else if (num === '0')\n            scope.val *= 10;\n          else\n            scope.val = parseFloat(s + num) / 100;\n        }\n      });\n\n\n    }\n  }\n\n  Katrid.UI.uiKatrid.directive('numpadInput', ['$compile', NumPad]);\n\n})();\n","(function() {\n\n  Katrid.UI.uiKatrid\n  .directive('codeEditor', [function () {\n    return {\n      restrict: 'EA',\n      require: 'ngModel',\n      link: function (scope, elm, attrs, ngModel) {\n\n        let editor;\n\n        require.config({\n          paths: {\n            vs: '/static/web/monaco/min/vs',\n          }\n        });\n\n\n        console.log('set language', attrs.language);\n        require(['vs/editor/editor.main'], function () {\n          editor = monaco.editor.create(elm[0], {\n            value: '',\n            language: attrs.language || 'xml',\n            minimap: {\n              enabled: false,\n            },\n            automaticLayout: true,\n          });\n\n          editor.getModel().onDidChangeContent(evt => {\n            ngModel.$setViewValue(editor.getValue());\n          });\n\n          ngModel.$render = function () {\n            setTimeout(() => {\n              editor.setValue(ngModel.$viewValue);\n            }, 300);\n          };\n\n        });\n\n      }\n    };\n  }]);\n\n})();\n","(function () {\n\n  class Alerts {\n    static success(msg) {\n      return toastr['success'](msg);\n    }\n\n    static warn(msg) {\n      return toastr['warning'](msg);\n    }\n\n    static info(msg) {\n      return toastr['info'](msg);\n    }\n\n    static error(msg) {\n      return toastr['error'](msg);\n    }\n  }\n\n  class WaitDialog {\n    static show() {\n      $('#loading-msg').show();\n    }\n\n    static hide() {\n      $('#loading-msg').hide();\n    }\n  }\n\n  class Dialog extends Katrid.UI.Views.BaseView {\n    constructor(scope, options) {\n      super(scope);\n      this.templateUrl = 'dialog.base';\n      this.scope.isDialog = true;\n    }\n\n    render() {\n      return $(Katrid.app.getTemplate(this.templateUrl).replace('<!-- replace-content -->', this.content));\n    }\n\n    show() {\n      if (!this.el) {\n        this.el = $(this.render());\n        this.root = this.el.find('.modal-dialog-body');\n        this.el.find('form').first().addClass('row');\n        this.$compile(this.el)(this.scope);\n      }\n      this.el.modal('show')\n      .on('shown.bs.modal', () => Katrid.UI.uiKatrid.setFocus(this.el.find('.form-field').first()));\n      return this.el;\n    }\n}\n\n  class Window extends Dialog {\n    constructor(options) {\n      super(options.scope, options);\n      this.scope._ = this.scope.$parent._;\n      this.scope.parentAction = this.scope.action;\n      this.scope.views = {\n        form: options.view\n      };\n      this.dialogTitle = (options && options.title) || Katrid.i18n.gettext('Create: ');\n      this.scope.view = this.view = options.view;\n      this.scope.model = options.model;\n      this.options = options;\n    }\n\n    async createNew(config) {\n      let field = this.options.field;\n\n      this.scope.$setDirty = (field) => {\n        const control = this.scope.form[field];\n        if (control) {\n          control.$setDirty();\n        }\n      };\n\n      let view = this.scope.view;\n      let elScope = this.scope;\n      elScope.views = { form: view };\n      elScope.isDialog = true;\n      let caption = this.dialogTitle;\n\n      this.action = this.scope.action = {\n        scope: this.scope,\n        context: {},\n      };\n      let dataSource = this.action.dataSource = this.scope.dataSource = new Katrid.Data.DataSource(this.scope, this.action);\n\n      let formView = new Katrid.UI.Views.FormView(\n        this.action, this.view, { dialog: true, templateUrl: 'view.form.dialog.modal.jinja2' }\n      );\n      let el = formView.render();\n      let form = el.find('form:first');\n      elScope.root = form;\n      this.action.$element = form;\n\n      form.addClass('row');\n      el.modal('show').on('shown.bs.modal', () => Katrid.UI.uiKatrid.setFocus(el.find('.form-field').first()))\n      .on('hidden.bs.modal', function() {\n        $(this).modal('dispose').remove();\n      });\n\n      this.scope.form = form.controller('form');\n      this.scope.formElement = form;\n      if (field) {\n        let evt = this.scope.$on('saveAndClose', async (event, targetScope, data) => {\n          if (this.scope === targetScope) {\n            if (_.isArray(data) && data.length) {\n              data = await this.scope.$parent.model.getFieldChoices(field.name, null, {ids: data});\n              let vals = {};\n              let res = data.items[0];\n              vals[field.name] = res;\n              this.scope.$parent.action.dataSource.setValues(vals);\n              if (this.options.sel)\n                this.options.sel.select2('data', { id: res[0], text: res[1] });\n            }\n            // unhook event\n            evt();\n          }\n        });\n      }\n\n      return new Promise(async (resolve, reject) => {\n        setTimeout(async () => {\n          // check if there's a creation name\n          let kwargs, defaultValues;\n          if (config) {\n            if (config.creationName)\n              kwargs = { creation_name: name };\n            if (config.defaultValues)\n              defaultValues = config.defaultValues;\n          }\n          await dataSource.insert(true, defaultValues, kwargs);\n          this.scope.$apply();\n          resolve(el);\n        });\n\n      });\n\n    };\n  }\n\n  Katrid.UI.Dialogs = {\n    Alerts,\n    WaitDialog,\n    Dialog,\n    Window\n  };\n\n})();\n","(function () {\n\n  Katrid.UI.uiKatrid.directive(\"foreignkey\", ['$compile', '$controller', ($compile, $controller) => ({\n    restrict: \"A\",\n    require: \"ngModel\",\n    link(scope, el, attrs, controller) {\n      let serviceName;\n      let sel = el;\n      let _shown = false;\n      const field = scope.view.fields[attrs.name];\n      el.addClass(\"form-field\");\n      if (attrs.serviceName) serviceName = attrs;\n      else if (scope.action && scope.action.model) serviceName = scope.action.model.name;\n      else serviceName = attrs.foreignkey;\n      const newItem = function () {\n      };\n      const newEditItem = function () {\n      };\n      let _timeout = null;\n\n      let config = {\n        allowClear: true,\n        query(query) {\n          // evaluate domain attribute\n          let domain = field.domain;\n          if (domain && _.isString(domain))\n            domain = scope.$eval(domain);\n\n          // make params\n          let data = {\n            args: [query.term],\n            kwargs: {\n              count: 1,\n              page: query.page,\n              domain: domain,\n              name_fields: attrs.nameFields && attrs.nameFields.split(\",\") || null\n            }\n          };\n          const f = () => {\n            let svc;\n            if (scope.model) svc = scope.model.getFieldChoices(field.name, query.term, data.kwargs);\n            else svc = new Katrid.Services.Model(field.model).searchName(data);\n            svc.then(res => {\n              let data = res.items;\n              const r = data.map(item => ({\n                id: item[0],\n                text: item[1]\n              }));\n              const more = query.page * Katrid.settings.services.choicesPageLimit < res.count;\n              if (!multiple && !more) {\n                let msg;\n                const v = sel.data(\"select2\").search.val();\n                if ((attrs.allowCreate && attrs.allowCreate !== \"false\" || attrs.allowCreate == null) && v) {\n                  msg = Katrid.i18n.gettext('Create <i>\"%s\"</i>...');\n                  r.push({\n                    id: newItem,\n                    text: msg\n                  })\n                }\n              }\n              return query.callback({\n                results: r,\n                more: more\n              })\n            })\n          };\n          if (_timeout) clearTimeout(_timeout);\n          _timeout = setTimeout(f, 400)\n        },\n        ajax: {\n          url: `/api/rpc/${serviceName}/get_field_choices/`,\n          contentType: \"application/json\",\n          dataType: \"json\",\n          type: \"POST\"\n        },\n        formatSelection(val) {\n          if (val.id === newItem || val.id === newEditItem) return Katrid.i18n.gettext(\"Creating...\");\n          return val.text\n        },\n        formatResult(state) {\n          const s = sel.data(\"select2\").search.val();\n          if (state.id === newItem) {\n            state.str = s;\n            return `<strong>${sprintf(state.text, s)}</strong>`\n          } else if (state.id === newEditItem) {\n            state.str = s;\n            return `<strong>${sprintf(state.text, s)}</strong>`\n          }\n          return state.text\n        },\n        initSelection(el, cb) {\n          let v = controller.$modelValue;\n          if (multiple) {\n            v = v.map(obj => ({\n              id: obj[0],\n              text: obj[1]\n            }));\n            return cb(v)\n          } else if (_.isArray(v)) {\n            return cb({\n              id: v[0],\n              text: v[1]\n            })\n          }\n        }\n      };\n\n      let allowCreateEdit = attrs.noCreateEdit;\n      allowCreateEdit = _.isUndefined(allowCreateEdit) || !Boolean(allowCreateEdit);\n\n      let {\n        multiple: multiple\n      } = attrs;\n      if (multiple) {\n        config[\"multiple\"] = true\n      }\n      sel = sel.select2(config);\n\n      let createNew = () => {\n        sel.select2('close');\n        let service = new Katrid.Services.Model(field.model);\n        return service.getViewInfo({\n          view_type: \"form\"\n        }).then(function (res) {\n          let title = _.sprintf(Katrid.i18n.gettext('Create: %(title)s'), {title: field.caption});\n          let options = {\n            scope: scope.$new(true),\n            $controller: $controller,\n            sel: sel, field: field,\n            title: title,\n            view: res,\n            model: service,\n            action: scope.action,\n          };\n          let wnd = new Katrid.UI.Dialogs.Window(options);\n          wnd.createNew();\n        })\n      };\n\n      if (allowCreateEdit)\n        sel.parent().find('div.select2-container>div.select2-drop')\n        .append(`<div style=\"padding: 4px;\"><button type=\"button\" class=\"btn btn-link btn-sm\">${Katrid.i18n.gettext('Create New...')}</button></div>`)\n        .find('button').click(createNew);\n\n\n      sel.on(\"change\", async e => {\n        let v = e.added;\n        if (v && v.id === newItem) {\n          let service = new Katrid.Services.Model(field.model);\n          try {\n            let res = await service.createName(v.str);\n            let vals = {};\n            vals[field.name] = res;\n            scope.dataSource.setValues(vals);\n            sel.select2('data', {id: res[0], text: res[1]});\n          } catch (err) {\n            let res = await service.getViewInfo({\n              view_type: \"form\"\n            });\n            let title = _.sprintf(Katrid.i18n.gettext('Create: %(title)s'), {title: field.caption});\n            let options = {\n              scope: scope.$new(true),\n              $controller: $controller,\n              sel: sel, field: field,\n              title: title,\n              view: res,\n              model: service,\n              action: scope.action,\n            };\n            let wnd = new Katrid.UI.Dialogs.Window(options);\n            wnd.createNew({creationName: v.str});\n            sel.select2('data', null);\n          }\n        } else if (v && v.id === newEditItem) {\n        } else if (multiple && e.val.length) {\n          return controller.$setViewValue(e.val)\n        } else {\n          controller.$setDirty();\n          if (v) {\n            return controller.$setViewValue([v.id, v.text])\n          } else {\n            return controller.$setViewValue(null)\n          }\n        }\n      }).on(\"select2-open\", () => {\n        if (!_shown) {\n          _shown = true;\n          let parentModal = el.closest(\"div.modal\");\n          if (parentModal.length) parentModal.on(\"hide.bs.modal\", () => sel.select2(\"destroy\"))\n        }\n      });\n      controller.$parsers.push(value => {\n        if (value) {\n          if (_.isArray(value)) return value;\n          else if (_.isObject(value)) return [value.id, value.text];\n          else return value\n        }\n        return null\n      });\n      if (!multiple) scope.$watch(attrs.ngModel, (newValue, oldValue) => sel.select2(\"val\", newValue));\n      return controller.$render = function () {\n        if (multiple) {\n          if (controller.$viewValue) {\n            const v = Array.from(controller.$viewValue).map(obj => obj[0]);\n            sel.select2(\"val\", v)\n          }\n        }\n        if (controller.$viewValue) {\n          return sel.select2(\"val\", controller.$viewValue[0])\n        } else {\n          return sel.select2(\"val\", null)\n        }\n      }\n    }\n  })]);\n\n\n  Katrid.UI.uiKatrid.filter('m2m', () =>\n    function (input) {\n      if (_.isArray(input))\n        return input.map((obj) => obj ? obj[1] : null).join(', ');\n    }\n  );\n\n\n})();\n","(function() {\n\n  Katrid.UI.uiKatrid.directive('statusField', ['$compile', ($compile) =>\n    ({\n      restrict: 'A',\n      priority: 1,\n      replace: true,\n      link(scope, element, attrs, controller) {\n        const field = scope.view.fields[attrs.name];\n        scope.choices = field.choices;\n        if (!attrs.readonly) {\n          scope.itemClick = () => console.log('status field item click');\n        }\n        element.closest('header').prepend(element);\n      },\n      template(element, attrs) {\n        return sprintf(Katrid.app.$templateCache.get('view.field.StatusField'), { fieldName: attrs.name });\n      }\n    })\n\n  ]);\n\n})();\n","(function() {\n\n  Katrid.UI.uiKatrid.directive('sortableField', ['$compile', '$timeout', ($compile, $timeout) =>\n    ({\n      restrict: 'E',\n      require: 'ngModel',\n      replace: true,\n      scope: {},\n      link: {\n        post: function (scope, el, attrs) {\n          let tbl = el.closest('tbody');\n          let fixHelperModified = function (e, tr) {\n              let $originals = tr.children();\n              let $helper = tr.clone();\n              $helper.children().each(function (index) {\n                $(this).width($originals.eq(index).width())\n              });\n              return $helper;\n            },\n            updateIndex = function (e, ui) {\n              $('td.list-column-sortable', ui.item.parent()).each(function (i) {\n                // $(this).html(i + 1);\n              });\n            };\n\n          tbl.sortable({\n            helper: fixHelperModified,\n            stop: updateIndex\n          }).disableSelection();\n        }\n      },\n      template(element, attrs) {\n        return sprintf(Katrid.$templateCache.get('view.field.SortableField'), { fieldName: attrs.name });\n      }\n    })\n\n  ]);\n\n})();\n","/**\n * jQuery number plug-in 2.1.3\n * Copyright 2012, Digital Fusion\n * Licensed under the MIT license.\n * http://opensource.teamdf.com/license/\n *\n * A jQuery plugin which implements a permutation of phpjs.org's number_format to provide\n * simple number formatting, insertion, and as-you-type masking of a number.\n *\n * @author\tSam Sehnert\n * @docs\thttp://www.teamdf.com/web/jquery-number-format-redux/196/\n */\n(function($){\n\n\t\"use strict\";\n\n\t/**\n\t * Method for selecting a range of characters in an input/textarea.\n\t *\n\t * @param int rangeStart\t\t\t: Where we want the selection to start.\n\t * @param int rangeEnd\t\t\t\t: Where we want the selection to end.\n\t *\n\t * @return void;\n\t */\n\tfunction setSelectionRange( rangeStart, rangeEnd )\n\t{\n\t\t// Check which way we need to define the text range.\n\t\tif( this.createTextRange )\n\t\t{\n\t\t\tvar range = this.createTextRange();\n\t\t\t\trange.collapse( true );\n\t\t\t\trange.moveStart( 'character',\trangeStart );\n\t\t\t\trange.moveEnd( 'character',\t\trangeEnd-rangeStart );\n\t\t\t\trange.select();\n\t\t}\n\n\t\t// Alternate setSelectionRange method for supporting browsers.\n\t\telse if( this.setSelectionRange )\n\t\t{\n\t\t\tthis.focus();\n\t\t\tthis.setSelectionRange( rangeStart, rangeEnd );\n\t\t}\n\t}\n\n\t/**\n\t * Get the selection position for the given part.\n\t *\n\t * @param string part\t\t\t: Options, 'Start' or 'End'. The selection position to get.\n\t *\n\t * @return int : The index position of the selection part.\n\t */\n\tfunction getSelection( part )\n\t{\n\t\tvar pos\t= this.value.length;\n\n\t\t// Work out the selection part.\n\t\tpart = ( part.toLowerCase() == 'start' ? 'Start' : 'End' );\n\n\t\tif( document.selection ){\n\t\t\t// The current selection\n\t\t\tvar range = document.selection.createRange(), stored_range, selectionStart, selectionEnd;\n\t\t\t// We'll use this as a 'dummy'\n\t\t\tstored_range = range.duplicate();\n\t\t\t// Select all text\n\t\t\t//stored_range.moveToElementText( this );\n\t\t\tstored_range.expand('textedit');\n\t\t\t// Now move 'dummy' end point to end point of original range\n\t\t\tstored_range.setEndPoint( 'EndToEnd', range );\n\t\t\t// Now we can calculate start and end points\n\t\t\tselectionStart = stored_range.text.length - range.text.length;\n\t\t\tselectionEnd = selectionStart + range.text.length;\n\t\t\treturn part == 'Start' ? selectionStart : selectionEnd;\n\t\t}\n\n\t\telse if(typeof(this['selection'+part])!=\"undefined\")\n\t\t{\n\t\t \tpos = this['selection'+part];\n\t\t}\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Substitutions for keydown keycodes.\n\t * Allows conversion from e.which to ascii characters.\n\t */\n\tvar _keydown = {\n\t\tcodes : {\n\t\t\t188 : 44,\n      110 : 44,\n      108 : 44,\n\t\t\t109 : 45,\n\t\t\t190 : 46,\n\t\t\t191 : 47,\n\t\t\t192 : 96,\n\t\t\t220 : 92,\n\t\t\t222 : 39,\n\t\t\t221 : 93,\n\t\t\t219 : 91,\n\t\t\t173 : 45,\n\t\t\t187 : 61, //IE Key codes\n\t\t\t186 : 59, //IE Key codes\n\t\t\t189 : 45, //IE Key codes\n        },\n        shifts : {\n\t\t\t96 : \"~\",\n\t\t\t49 : \"!\",\n\t\t\t50 : \"@\",\n\t\t\t51 : \"#\",\n\t\t\t52 : \"$\",\n\t\t\t53 : \"%\",\n\t\t\t54 : \"^\",\n\t\t\t55 : \"&\",\n\t\t\t56 : \"*\",\n\t\t\t57 : \"(\",\n\t\t\t48 : \")\",\n\t\t\t45 : \"_\",\n\t\t\t61 : \"+\",\n\t\t\t91 : \"{\",\n\t\t\t93 : \"}\",\n\t\t\t92 : \"|\",\n\t\t\t59 : \":\",\n\t\t\t39 : \"\\\"\",\n\t\t\t44 : \"<\",\n\t\t\t46 : \">\",\n\t\t\t47 : \"?\"\n        }\n    };\n\n\t/**\n\t * jQuery number formatter plugin. This will allow you to format numbers on an element.\n\t *\n\t * @params proxied for format_number method.\n\t *\n\t * @return : The jQuery collection the method was called with.\n\t */\n\t$.fn.number = function( number, decimals, dec_point, thousands_sep ){\n\n\t    // Enter the default thousands separator, and the decimal placeholder.\n\t    thousands_sep\t= (typeof thousands_sep === 'undefined') ? ',' : thousands_sep;\n\t    dec_point\t\t= (typeof dec_point === 'undefined') ? '.' : dec_point;\n\t    decimals\t\t= (typeof decimals === 'undefined' ) ? 0 : decimals;\n\n\t    // Work out the unicode character for the decimal placeholder.\n\t    var u_dec\t\t\t= ('\\\\u'+('0000'+(dec_point.charCodeAt(0).toString(16))).slice(-4)),\n\t    \tregex_dec_num\t= new RegExp('[^-'+u_dec+'0-9]','g'),\n\t    \tregex_dec\t\t= new RegExp(u_dec,'g');\n\n\t    // If we've specified to take the number from the target element,\n\t    // we loop over the collection, and get the number.\n\t    if( number === true )\n\t    {\n\t    \t// If this element is a number, then we add a keyup\n\t    \tif( this.is('input:text') )\n\t    \t{\n\t    \t\t// Return the jquery collection.\n\t    \t\treturn this.on({\n\n\t    \t\t\t/**\n\t    \t\t\t * Handles keyup events, re-formatting numbers.\n\t    \t\t\t *\n\t    \t\t\t * @param object e\t\t\t: the keyup event object.s\n\t    \t\t\t *\n\t    \t\t\t * @return void;\n\t    \t\t\t */\n\t    \t\t\t'keydown.format' : function(e){\n\n\n\t    \t\t\t\t// Define variables used in the code below.\n\t    \t\t\t\tvar $this\t= $(this),\n\t    \t\t\t\t\tdata\t= $this.data('numFormat'),\n\t    \t\t\t\t\tcode\t= (e.keyCode ? e.keyCode : e.which),\n\t\t\t\t\t\t\tchara\t= '', //unescape(e.originalEvent.keyIdentifier.replace('U+','%u')),\n\t    \t\t\t\t\tstart\t= getSelection.apply(this,['start']),\n\t    \t\t\t\t\tend\t\t= getSelection.apply(this,['end']),\n\t    \t\t\t\t\tval\t\t= '',\n\t    \t\t\t\t\tsetPos\t= false;\n\n              if (e.key === '-') {\n              \tif ($this.val() === 0)\n              \t\tdata.negative = true;\n              \telse {\n              \t  data.negative = false;\n                  if (this.value.includes('-'))\n                    this.value = this.value.substr(1, this.value.length - 1);\n                  else\n                    this.value = '-' + this.value;\n                }\n                $this.val(this.value);\n                e.preventDefault();\n                return;\n              }\n\n\t    \t\t\t\t// Webkit (Chrome & Safari) on windows screws up the keyIdentifier detection\n\t    \t\t\t\t// for numpad characters. I've disabled this for now, because while keyCode munging\n\t    \t\t\t\t// below is hackish and ugly, it actually works cross browser & platform.\n\n//\t    \t\t\t\tif( typeof e.originalEvent.keyIdentifier !== 'undefined' )\n//\t    \t\t\t\t{\n//\t    \t\t\t\t\tchara = unescape(e.originalEvent.keyIdentifier.replace('U+','%u'));\n//\t    \t\t\t\t}\n//\t    \t\t\t\telse\n//\t    \t\t\t\t{\n\t    \t\t\t\t\tif (_keydown.codes.hasOwnProperty(code)) {\n\t\t\t\t\t            code = _keydown.codes[code];\n\t\t\t\t\t        }\n\t\t\t\t\t        if (!e.shiftKey && (code >= 65 && code <= 90)){\n\t\t\t\t\t        \tcode += 32;\n\t\t\t\t\t        } else if (!e.shiftKey && (code >= 69 && code <= 105)){\n\t\t\t\t\t        \tcode -= 48;\n\t\t\t\t\t        } else if (e.shiftKey && _keydown.shifts.hasOwnProperty(code)){\n\t\t\t\t\t            //get shifted keyCode value\n\t\t\t\t\t            chara = _keydown.shifts[code];\n\t\t\t\t\t        }\n\n\t\t\t\t\t        if( chara == '' ) chara = String.fromCharCode(code);\n//\t    \t\t\t\t}\n\n\n\n\t    \t\t\t\t// Stop executing if the user didn't type a number key, a decimal character, or backspace.\n\t    \t\t\t\tif( code !== 8 && chara != dec_point && !chara.match(/[0-9]/) )\n\t    \t\t\t\t{\n\t    \t\t\t\t\t// We need the original keycode now...\n\t    \t\t\t\t\tvar key = (e.keyCode ? e.keyCode : e.which);\n\t    \t\t\t\t\tif( // Allow control keys to go through... (delete, etc)\n\t    \t\t\t\t\t\tkey == 46 || key == 8 || key == 9 || key == 27 || key == 13 ||\n\t    \t\t\t\t\t\t// Allow: Ctrl+A, Ctrl+R\n\t    \t\t\t\t\t\t( (key == 65 || key == 82 ) && ( e.ctrlKey || e.metaKey ) === true ) ||\n\t    \t\t\t\t\t\t// Allow: Ctrl+V, Ctrl+C\n\t    \t\t\t\t\t\t( (key == 86 || key == 67 ) && ( e.ctrlKey || e.metaKey ) === true ) ||\n\t    \t\t\t\t\t\t// Allow: home, end, left, right\n\t    \t\t\t\t\t\t( (key >= 35 && key <= 39) )\n\t\t\t\t\t\t\t){\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// But prevent all other keys.\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\treturn false;\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// The whole lot has been selected, or if the field is empty...\n\t    \t\t\t\tif( start == 0 && end == this.value.length || $this.val() == 0 )\n\t    \t\t\t\t{\n\t    \t\t\t\t\tif( code === 8 )\n\t    \t\t\t\t\t{\n\t\t    \t\t\t\t\t// Blank out the field, but only if the data object has already been instanciated.\n\t    \t\t\t\t\t\tstart = end = 1;\n\t    \t\t\t\t\t\tthis.value = '';\n\n\t    \t\t\t\t\t\t// Reset the cursor position.\n\t\t    \t\t\t\t\tdata.init = (decimals>0?-1:0);\n\t\t    \t\t\t\t\tdata.c = (decimals>0?-(decimals+1):0);\n\t\t    \t\t\t\t\tsetSelectionRange.apply(this, [0,0]);\n\t\t    \t\t\t\t}\n\t\t    \t\t\t\telse if( chara === dec_point )\n\t\t    \t\t\t\t{\n\t\t    \t\t\t\t\tstart = end = 1;\n\t\t    \t\t\t\t\tthis.value = '0'+ dec_point + (new Array(decimals+1).join('0'));\n\n\t\t    \t\t\t\t\t// Reset the cursor position.\n\t\t    \t\t\t\t\tdata.init = (decimals>0?1:0);\n\t\t    \t\t\t\t\tdata.c = (decimals>0?-(decimals+1):0);\n\t\t    \t\t\t\t}\n\t\t    \t\t\t\telse if( this.value.length === 0 )\n\t\t    \t\t\t\t{\n\t\t    \t\t\t\t\t// Reset the cursor position.\n\t\t    \t\t\t\t\tdata.init = (decimals>0?-1:0);\n\t\t    \t\t\t\t\tdata.c = (decimals>0?-(decimals):0);\n\t\t    \t\t\t\t}\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// Otherwise, we need to reset the caret position\n\t    \t\t\t\t// based on the users selection.\n\t    \t\t\t\telse\n\t    \t\t\t\t{\n\t    \t\t\t\t\tdata.c = end-this.value.length;\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// If the start position is before the decimal point,\n\t    \t\t\t\t// and the user has typed a decimal point, we need to move the caret\n\t    \t\t\t\t// past the decimal place.\n\t    \t\t\t\tif( decimals > 0 && chara == dec_point && start == this.value.length-decimals-1 )\n\t    \t\t\t\t{\n\t    \t\t\t\t\tdata.c++;\n\t    \t\t\t\t\tdata.init = Math.max(0,data.init);\n\t    \t\t\t\t\te.preventDefault();\n\n\t    \t\t\t\t\t// Set the selection position.\n\t    \t\t\t\t\tsetPos = this.value.length+data.c;\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// If the user is just typing the decimal place,\n\t    \t\t\t\t// we simply ignore it.\n\t    \t\t\t\telse if( chara == dec_point )\n\t    \t\t\t\t{\n\t    \t\t\t\t\tdata.init = Math.max(0,data.init);\n\t    \t\t\t\t\te.preventDefault();\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// If hitting the delete key, and the cursor is behind a decimal place,\n\t    \t\t\t\t// we simply move the cursor to the other side of the decimal place.\n\t    \t\t\t\telse if( decimals > 0 && code == 8 && start == this.value.length-decimals )\n\t    \t\t\t\t{\n\t    \t\t\t\t\te.preventDefault();\n\t    \t\t\t\t\tdata.c--;\n\n\t    \t\t\t\t\t// Set the selection position.\n\t    \t\t\t\t\tsetPos = this.value.length+data.c;\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// If hitting the delete key, and the cursor is to the right of the decimal\n\t    \t\t\t\t// (but not directly to the right) we replace the character preceeding the\n\t    \t\t\t\t// caret with a 0.\n\t    \t\t\t\telse if( decimals > 0 && code == 8 && start > this.value.length-decimals )\n\t    \t\t\t\t{\n\t    \t\t\t\t\tif( this.value === '' ) return;\n\n\t    \t\t\t\t\t// If the character preceeding is not already a 0,\n\t    \t\t\t\t\t// replace it with one.\n\t    \t\t\t\t\tif( this.value.slice(start-1, start) != '0' )\n\t    \t\t\t\t\t{\n\t    \t\t\t\t\t\tval = this.value.slice(0, start-1) + '0' + this.value.slice(start);\n\t    \t\t\t\t\t\t$this.val(val.replace(regex_dec_num,'').replace(regex_dec,dec_point));\n\t    \t\t\t\t\t}\n\n\t    \t\t\t\t\te.preventDefault();\n\t    \t\t\t\t\tdata.c--;\n\n\t    \t\t\t\t\t// Set the selection position.\n\t    \t\t\t\t\tsetPos = this.value.length+data.c;\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// If the delete key was pressed, and the character immediately\n\t    \t\t\t\t// before the caret is a thousands_separator character, simply\n\t    \t\t\t\t// step over it.\n\t    \t\t\t\telse if( code == 8 && this.value.slice(start-1, start) == thousands_sep )\n\t    \t\t\t\t{\n\t    \t\t\t\t\te.preventDefault();\n\t    \t\t\t\t\tdata.c--;\n\n\t    \t\t\t\t\t// Set the selection position.\n\t    \t\t\t\t\tsetPos = this.value.length+data.c;\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// If the caret is to the right of the decimal place, and the user is entering a\n\t    \t\t\t\t// number, remove the following character before putting in the new one.\n\t    \t\t\t\telse if(\n\t    \t\t\t\t\tdecimals > 0 &&\n\t    \t\t\t\t\tstart == end &&\n\t    \t\t\t\t\tthis.value.length > decimals+1 &&\n\t    \t\t\t\t\tstart > this.value.length-decimals-1 && isFinite(+chara) &&\n\t\t    \t\t\t\t!e.metaKey && !e.ctrlKey && !e.altKey && chara.length === 1\n\t    \t\t\t\t)\n\t    \t\t\t\t{\n\t    \t\t\t\t\t// If the character preceeding is not already a 0,\n\t    \t\t\t\t\t// replace it with one.\n\t    \t\t\t\t\tif( end === this.value.length )\n\t    \t\t\t\t\t{\n\t    \t\t\t\t\t\tval = this.value.slice(0, start-1);\n\t    \t\t\t\t\t}\n\t    \t\t\t\t\telse\n\t    \t\t\t\t\t{\n\t    \t\t\t\t\t\tval = this.value.slice(0, start)+this.value.slice(start+1);\n\t    \t\t\t\t\t}\n\n\t    \t\t\t\t\t// Reset the position.\n\t    \t\t\t\t\tthis.value = val;\n\t    \t\t\t\t\tsetPos = start;\n\t    \t\t\t\t}\n\n\t    \t\t\t\tif (setPos === false && code === 44 && chara === dec_point)\n\t    \t\t\t\t\tsetPos = this.value.indexOf(dec_point) + 1;\n\n\t    \t\t\t\t// If we need to re-position the characters.\n\t    \t\t\t\tif( setPos !== false )\n\t    \t\t\t\t{\n\t    \t\t\t\t\tsetSelectionRange.apply(this, [setPos, setPos]);\n\t    \t\t\t\t}\n\n\t    \t\t\t\t// Store the data on the element.\n\t    \t\t\t\t$this.data('numFormat', data);\n\n\t    \t\t\t},\n\n\t    \t\t\t/**\n\t    \t\t\t * Handles keyup events, re-formatting numbers.\n\t    \t\t\t *\n\t    \t\t\t * @param object e\t\t\t: the keyup event object.s\n\t    \t\t\t *\n\t    \t\t\t * @return void;\n\t    \t\t\t */\n\t    \t\t\t'keyup.format' : function(e){\n\n\t    \t\t\t\t// Store these variables for use below.\n\t    \t\t\t\tvar $this\t= $(this),\n\t    \t\t\t\t\tdata\t= $this.data('numFormat'),\n\t    \t\t\t\t\tcode\t= (e.keyCode ? e.keyCode : e.which),\n\t    \t\t\t\t\tstart\t= getSelection.apply(this,['start']),\n\t    \t\t\t\t\tsetPos;\n\n\t    \t\t\t\t// Stop executing if the user didn't type a number key, a decimal, or a comma.\n\t    \t\t\t\tif( this.value === '' || (code < 48 || code > 57) && (code < 96 || code > 105 ) && code !== 8 )\n\t    \t\t\t\t  return;\n\n\t    \t\t\t\t// Re-format the textarea.\n\t    \t\t\t\t$this.val($this.val());\n\n\t    \t\t\t\tif( decimals > 0 )\n\t    \t\t\t\t{\n\t\t    \t\t\t\t// If we haven't marked this item as 'initialised'\n\t\t    \t\t\t\t// then do so now. It means we should place the caret just\n\t\t    \t\t\t\t// before the decimal. This will never be un-initialised before\n\t\t    \t\t\t\t// the decimal character itself is entered.\n\t\t    \t\t\t\tif( data.init < 1 )\n\t\t    \t\t\t\t{\n\t\t    \t\t\t\t\tstart\t\t= this.value.length-decimals-( data.init < 0 ? 1 : 0 );\n\t\t    \t\t\t\t\tdata.c\t\t= start-this.value.length;\n\t\t    \t\t\t\t\tdata.init\t= 1;\n\n\t\t    \t\t\t\t\t$this.data('numFormat', data);\n\t\t    \t\t\t\t}\n\n\t\t    \t\t\t\t// Increase the cursor position if the caret is to the right\n\t\t    \t\t\t\t// of the decimal place, and the character pressed isn't the delete key.\n\t\t    \t\t\t\telse if( start > this.value.length-decimals && code != 8 )\n\t\t    \t\t\t\t{\n\t\t    \t\t\t\t\tdata.c++;\n\n\t\t    \t\t\t\t\t// Store the data, now that it's changed.\n\t\t    \t\t\t\t\t$this.data('numFormat', data);\n\t\t    \t\t\t\t}\n\t    \t\t\t\t}\n\n\t    \t\t\t\t//console.log( 'Setting pos: ', start, decimals, this.value.length + data.c, this.value.length, data.c );\n\n\t    \t\t\t\t// Set the selection position.\n\t    \t\t\t\tsetPos = this.value.length+data.c;\n\t    \t\t\t\tif (((this.value.length - setPos) === data.decimals) && (String.fromCharCode(code) !== data.dec_point)) {\n                setPos -= 1;\n                console.log('set pos', data.dec_point, code, String.fromCharCode(code));\n              }\n\t    \t\t\t\tsetSelectionRange.apply(this, [setPos, setPos]);\n\t    \t\t\t},\n\n\t    \t\t\t/**\n\t    \t\t\t * Reformat when pasting into the field.\n\t    \t\t\t *\n\t    \t\t\t * @param object e \t\t: jQuery event object.\n\t    \t\t\t *\n\t    \t\t\t * @return false : prevent default action.\n\t    \t\t\t */\n\t    \t\t\t'paste.format' : function(e){\n\n\t    \t\t\t\t// Defint $this. It's used twice!.\n\t    \t\t\t\tvar $this\t\t= $(this),\n\t    \t\t\t\t\toriginal\t= e.originalEvent,\n\t    \t\t\t\t\tval\t\t= null;\n\n\t\t\t\t\t\t// Get the text content stream.\n\t\t\t\t\t\tif (window.clipboardData && window.clipboardData.getData) { // IE\n\t\t\t\t\t\t\tval = window.clipboardData.getData('Text');\n\t\t\t\t\t\t} else if (original.clipboardData && original.clipboardData.getData) {\n\t\t\t\t\t\t\tval = original.clipboardData.getData('text/plain');\n\t\t\t\t\t\t}\n\n\t    \t\t\t\t// Do the reformat operation.\n\t    \t\t\t\t$this.val(val);\n\n\t    \t\t\t\t// Stop the actual content from being pasted.\n\t    \t\t\t\te.preventDefault();\n\t    \t\t\t\treturn false;\n\t    \t\t\t}\n\n\t    \t\t})\n\n\t    \t\t// Loop each element (which isn't blank) and do the format.\n    \t\t\t.each(function(){\n\n    \t\t\t\tvar $this = $(this).data('numFormat',{\n    \t\t\t\t\tc\t\t\t\t: -(decimals+1),\n    \t\t\t\t\tdecimals\t\t: decimals,\n    \t\t\t\t\tthousands_sep\t: thousands_sep,\n    \t\t\t\t\tdec_point\t\t: dec_point,\n    \t\t\t\t\tregex_dec_num\t: regex_dec_num,\n    \t\t\t\t\tregex_dec\t\t: regex_dec,\n    \t\t\t\t\tinit\t\t\t: false\n    \t\t\t\t});\n\n    \t\t\t\t// Return if the element is empty.\n    \t\t\t\tif( this.value === '' ) return;\n\n    \t\t\t\t// Otherwise... format!!\n    \t\t\t\t$this.val($this.val());\n    \t\t\t});\n\t    \t}\n\t    \telse\n\t    \t{\n\t\t    \t// return the collection.\n\t\t    \treturn this.each(function(){\n\t\t    \t\tvar $this = $(this), num = +$this.text().replace(regex_dec_num,'').replace(regex_dec,'.');\n\t\t    \t\t$this.number( !isFinite(num) ? 0 : +num, decimals, dec_point, thousands_sep );\n\t\t    \t});\n\t    \t}\n\t    }\n\n\t    // Add this number to the element as text.\n\t    return this.text( $.number.apply(window,arguments) );\n\t};\n\n\t//\n\t// Create .val() hooks to get and set formatted numbers in inputs.\n\t//\n\n\t// We check if any hooks already exist, and cache\n\t// them in case we need to re-use them later on.\n\tvar origHookGet = null, origHookSet = null;\n\n\t// Check if a text valHook already exists.\n\tif( $.isPlainObject( $.valHooks.text ) )\n\t{\n\t    // Preserve the original valhook function\n\t    // we'll call this for values we're not\n\t    // explicitly handling.\n\t    if( $.isFunction( $.valHooks.text.get ) ) origHookGet = $.valHooks.text.get;\n\t    if( $.isFunction( $.valHooks.text.set ) ) origHookSet = $.valHooks.text.set;\n\t}\n\telse\n\t{\n\t    // Define an object for the new valhook.\n\t    $.valHooks.text = {};\n\t}\n\n\t/**\n\t * Define the valHook to return normalised field data against an input\n\t * which has been tagged by the number formatter.\n\t *\n\t * @param object el\t\t\t: The raw DOM element that we're getting the value from.\n\t *\n\t * @return mixed : Returns the value that was written to the element as a\n\t *\t\t\t\t   javascript number, or undefined to let jQuery handle it normally.\n\t */\n\t$.valHooks.text.get = function( el ){\n\n\t\t// Get the element, and its data.\n\t\tvar $this\t= $(el), num,\n\t\t\tdata\t= $this.data('numFormat');\n\n        // Does this element have our data field?\n        if( !data )\n        {\n            // Check if the valhook function already existed\n            if( $.isFunction( origHookGet ) )\n            {\n                // There was, so go ahead and call it\n                return origHookGet(el);\n            }\n            else\n            {\n                // No previous function, return undefined to have jQuery\n                // take care of retrieving the value\n                return undefined;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Remove formatting, and return as number.\n\t\t\tif( el.value === '' ) return '';\n\n\t\t\t// Convert to a number.\n\t\t\tnum = +(el.value\n\t\t\t\t.replace( data.regex_dec_num, '' )\n\t\t\t\t.replace( data.regex_dec, '.' ));\n\n\t\t\t// If we've got a finite number, return it.\n\t\t\t// Otherwise, simply return 0.\n\t\t\t// Return as a string... thats what we're\n\t\t\t// used to with .val()\n\t\t\treturn ''+( isFinite( num ) ? num : 0 );\n\t\t}\n\t};\n\n\t/**\n\t * A valhook which formats a number when run against an input\n\t * which has been tagged by the number formatter.\n\t *\n\t * @param object el\t\t: The raw DOM element (input element).\n\t * @param float\t\t\t: The number to set into the value field.\n\t *\n\t * @return mixed : Returns the value that was written to the element,\n\t *\t\t\t\t   or undefined to let jQuery handle it normally.\n\t */\n\t$.valHooks.text.set = function( el, val )\n\t{\n\t\t// Get the element, and its data.\n\t\tvar $this\t= $(el),\n\t\t\tdata\t= $this.data('numFormat');\n\n\t\t// Does this element have our data field?\n\t\tif( !data )\n\t\t{\n\n\t\t    // Check if the valhook function already exists\n\t\t    if( $.isFunction( origHookSet ) )\n\t\t    {\n\t\t        // There was, so go ahead and call it\n\t\t        return origHookSet(el,val);\n\t\t    }\n\t\t    else\n\t\t    {\n\t\t        // No previous function, return undefined to have jQuery\n\t\t        // take care of retrieving the value\n\t\t        return undefined;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Otherwise, don't worry about other valhooks, just run ours.\n\t\t\treturn el.value = $.number( val, data.decimals, data.dec_point, data.thousands_sep );\n\t\t}\n\t};\n\n\t/**\n\t * The (modified) excellent number formatting method from PHPJS.org.\n\t * http://phpjs.org/functions/number_format/\n\t *\n\t * @modified by Sam Sehnert (teamdf.com)\n\t *\t- don't redefine dec_point, thousands_sep... just overwrite with defaults.\n\t *\t- don't redefine decimals, just overwrite as numeric.\n\t *\t- Generate regex for normalizing pre-formatted numbers.\n\t *\n\t * @param float number\t\t\t: The number you wish to format, or TRUE to use the text contents\n\t *\t\t\t\t\t\t\t\t  of the element as the number. Please note that this won't work for\n\t *\t\t\t\t\t\t\t\t  elements which have child nodes with text content.\n\t * @param int decimals\t\t\t: The number of decimal places that should be displayed. Defaults to 0.\n\t * @param string dec_point\t\t: The character to use as a decimal point. Defaults to '.'.\n\t * @param string thousands_sep\t: The character to use as a thousands separator. Defaults to ','.\n\t *\n\t * @return string : The formatted number as a string.\n\t */\n\t$.number = function( number, decimals, dec_point, thousands_sep ){\n\t\t// Set the default values here, instead so we can use them in the replace below.\n\t\tthousands_sep\t= (typeof thousands_sep === 'undefined') ? ',' : thousands_sep;\n\t\tdec_point\t\t= (typeof dec_point === 'undefined') ? '.' : dec_point;\n\t\tdecimals\t\t= !isFinite(+decimals) ? 0 : Math.abs(decimals);\n\n\t\t// Work out the unicode representation for the decimal place and thousand sep.\n\t\tvar u_dec = ('\\\\u'+('0000'+(dec_point.charCodeAt(0).toString(16))).slice(-4));\n\t\tvar u_sep = ('\\\\u'+('0000'+(thousands_sep.charCodeAt(0).toString(16))).slice(-4));\n\n\t\t// Fix the number, so that it's an actual number.\n\t\tnumber = (number + '')\n\t\t\t.replace('\\.', dec_point) // because the number if passed in as a float (having . as decimal point per definition) we need to replace this with the passed in decimal point character\n\t\t\t.replace(new RegExp(u_sep,'g'),'')\n\t\t\t.replace(new RegExp(u_dec,'g'),'.')\n\t\t\t.replace(new RegExp('[^0-9+\\-Ee.]','g'),'');\n\n\t\tvar n = !isFinite(+number) ? 0 : +number,\n\t\t    s = '',\n\t\t    toFixedFix = function (n, decimals) {\n\t\t        var k = Math.pow(10, decimals);\n\t\t        return '' + Math.round(n * k) / k;\n\t\t    };\n\n\t\t// Fix for IE parseFloat(0.55).toFixed(0) = 0;\n\t\ts = (decimals ? toFixedFix(n, decimals) : '' + Math.round(n)).split('.');\n\t\tif (s[0].length > 3) {\n\t\t    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, thousands_sep);\n\t\t}\n\t\tif ((s[1] || '').length < decimals) {\n\t\t    s[1] = s[1] || '';\n\t\t    s[1] += new Array(decimals - s[1].length + 1).join('0');\n\t\t}\n\t\treturn s.join(dec_point);\n\t}\n\n})(jQuery);\n","(function() {\n\n  class Total {\n    constructor($filter) {\n      this.restrict = 'E';\n      this.scope = false;\n      this.replace = true;\n      this.$filter = $filter;\n    }\n\n    template(el, attrs) {\n      if (attrs.expr[0] === \"'\")\n        return `<span>${ attrs.expr.substring(1, attrs.expr.length - 1) }</span>`;\n      else\n        return `<span ng-bind=\"total$${attrs.field}|number:2\"></span>`;\n    }\n\n    link(scope, element, attrs, controller) {\n      if (attrs.expr[0] !== \"'\")\n        scope.$watch(`records`, (newValue) => {\n          let total = 0;\n          newValue.map((r) => total += parseFloat(r[attrs.field]));\n          scope['total$' + attrs.field] = total;\n          scope.parent['total$' + scope.fieldName + '$' + attrs.field] = total;\n        });\n    }\n  }\n\n  Katrid.UI.uiKatrid.directive('ngTotal', ['$filter', Total]);\n\n})();\n","(function () {\n\n  class Dashboard extends Katrid.UI.Views.ClientView {\n    async render() {\n      // get the linked view for the client action\n      let model = new Katrid.Services.Model('ir.action.client');\n      let res = await model.rpc('get_view', [this.action.info.id]);\n      if (res.content) {\n        return Katrid.Core.$compile(res.content)(this.action.scope);\n      }\n    }\n  }\n\n  class DashboardComponent extends Katrid.UI.Widgets.Component {\n    constructor($compile) {\n      super();\n      this.$compile = $compile;\n      this.restrict = 'E';\n      this.scope = false;\n    }\n\n    async link(scope, el, attrs, controller) {\n      let dashboardId = attrs.dashboardId;\n    }\n  }\n\n\n  let dataGroup = function (data, groups, total) {\n    let res = [];\n    let row = data[0];\n    let x = [];\n    let grps = {};\n    let c = 0;\n\n    for (let group of groups) {\n      let g = [];\n\n      if (c === 0)\n        g.push(groups[0]);\n\n      for (let row of data) {\n        let v = row[group];\n        if ((c > 0) && !(v in grps)) {\n          g = [v];\n          grps[v] = g;\n          for (let z of x)\n            g.push(0);\n        } else if (c > 0)\n          g = grps[v];\n        if (c > 0)\n          g[x.indexOf(row[groups[0]])] = row[total || 'total'] || 0;\n        else if (!g.includes(v))\n          g.push(v);\n      }\n      if (c === 0) {\n        x = g;\n        grps[groups[0]] = g;\n      } else {\n\n      }\n      c++;\n    }\n    res = Object.values(grps);\n    console.log(res);\n    return res;\n  };\n\n\n  class ChartComponent extends Katrid.UI.Widgets.Component {\n    constructor() {\n      super();\n    }\n\n    async link(scope, el, attrs) {\n      let res, chart, sql;\n\n      // find by a query child element\n      let q = el.find('query');\n      if (q.length) {\n        q.remove();\n        sql = q.text();\n      }\n\n      console.log('init chart');\n\n      let groups;\n      if (attrs.groups)\n        groups = attrs.groups.split(',');\n\n      let observe = async (url) => {\n\n        if (sql)\n          res = await Katrid.Services.Query.executeSql(sql);\n        else if (attrs.source)\n          res = scope[attrs.source];\n        else {\n          res = await fetch(url).then(res => res.json());\n        }\n        console.log(url);\n\n        let data = res.data;\n        let cfg = {\n          bindto: el[0],\n          data: {},\n          color: {\n            pattern: Katrid.UI.Dashboard.colorPatterns,\n          },\n        };\n\n        let hasData = false;\n\n        let type = el.attr('type');\n\n        if (type)\n          cfg.data.type = type;\n\n        if (groups) {\n          data = dataGroup(data, groups);\n          let vals = [];\n          for (let i = 1; i < data.length; i++)\n            vals.push(data[i][0]);\n          hasData = true;\n        }\n        else if (_.isArray(data) && data.length) {\n          let cols = Object.keys(data[0]);\n          cfg.data.columns = data.map(obj => [obj[cols[0]], obj[cols[1]]]);\n          hasData = true;\n        }\n\n        if (hasData)\n          chart = c3.generate(cfg);\n      };\n\n      if (attrs.urlParams) {\n        let urlParams = attrs.urlParams;\n        // TODO add list support\n        scope.$watch(attrs.urlParams, observe);\n      } else if (attrs.source) {\n        scope.$watch(attrs.source, observe);\n      } else\n        observe();\n      attrs.$observe('url', observe);\n    }\n  }\n\n\n  class Query extends Katrid.UI.Widgets.Component {\n    constructor() {\n      super();\n      this.priority = 200;\n      this.scope = false;\n    }\n\n    link(scope, el, attrs) {\n      let ds = new DataSource(el, scope);\n      el.remove();\n      return;\n      if (!attrs.name)\n        throw Error('Query name attribute is required!');\n      let instance = scope[attrs.name] = {loading: false, data: null};\n      // find query by url\n      let url = el.data('url');\n      if (url) {\n        console.log('find query by url', url);\n        $.get(url)\n        .then(res => {\n          instance.loading = false;\n          let data = res.data.map((row) => (_.object(res.fields, row)));\n          scope.$apply(() => instance.data = data);\n        });\n        return;\n      }\n\n      let r;\n      let sqlQuery = el.html();\n      let inMemory = 'inMemory' in attrs;\n      if (inMemory) {\n        let dataBind = el.data('bind');\n        let dataBindField = el.data('bind-field');\n        if (dataBind) {\n          scope.$parent.$watch(dataBind, function (newValue, oldValue) {\n            if (_.isArray(newValue) && newValue.length && _.isObject(newValue[0]))\n              console.log(alasql(sqlQuery, [newValue]));\n          });\n        } else if (dataBindField) {\n          // add watcher for the bind fields\n          let fnBind = function (newValue, oldValue) {\n            let fieldLog = scope.dataSource.$fieldLog[dataBindField];\n            if (fieldLog) {\n              let data = fieldLog.value;\n\n              if (_.isArray(data) && data.length && _.isObject(data[0])) {\n                instance = alasql(sqlQuery, [data]);\n              }\n            }\n          };\n          if (_.isString(dataBindField))\n            dataBindField = [dataBindField];\n          for (let field of dataBindField)\n            scope.$parent.$watch('$fieldLog.' + field + '.count', fnBind);\n        }\n      } else {\n        instance.loading = true;\n        if (_.isUndefined(attrs.url))\n          r = Katrid.Services.Query.read(attrs.queryId);\n        else\n          r = $.get(attrs.url);\n        r.then(res => {\n          instance.loading = false;\n          let data = res.data.map((row) => (_.object(res.fields, row)));\n          scope.$apply(() => instance.data = data);\n        });\n      }\n      el.remove();\n    }\n  }\n\n\n  Katrid.Actions.ClientAction.register('dashboard', Dashboard);\n\n  Katrid.UI.uiKatrid.directive('dashboard', ['$compile', DashboardComponent]);\n  Katrid.UI.uiKatrid.directive('chart', ChartComponent);\n  Katrid.UI.uiKatrid.directive('query', Query);\n\n\n  class Field {\n    constructor(el) {\n      this.el = el;\n    }\n\n    th() {\n      let caption = this.el.attr('caption') || this.el.attr('name');\n      let cls = this.el.attr('class');\n      let title = this.el.attr('header-title');\n      let attrs = '';\n      if (!title)\n        title = '';\n      let headerClick = this.el.attr('on-header-click');\n      if (cls)\n        attrs += 'class =\"' + cls + '\"';\n      if (headerClick)\n        attrs += ' ng-click=\"' + headerClick + '\"';\n      return `<th title=\"${title}\" ${attrs}>${caption}</th>`;\n    }\n\n    td() {\n      let format = this.el.attr('format');\n      if (format) {\n        format = '|' + format;\n        console.log('format', format);\n      } else\n        format = '';\n      let title = this.el.attr('title');\n      if (!title)\n        title = '';\n      let ngClass = this.el.attr('ng-class');\n      let cls = this.el[0].className;\n      let content = this.el.html();\n      if (!content)\n        content = `\\${ record.${this.name}${format} }`;\n      return `<td title='${title}' class=\"${cls}\">${content}</td>`;\n    }\n\n    tfoot() {\n      let total = this.total;\n      if (total)\n        total = '${grid.total(\"' + this.name + '\")}';\n      else if (this.footer)\n        total = this.footer;\n      else\n        total = '';\n      let cls = this.el[0].className;\n      return `<td class=\"${cls}\">${total}</td>`;\n    }\n\n    get name() {\n      return this.el.attr('name');\n    }\n\n    get footer() {\n      return this.el.attr('footer');\n    }\n\n    get total() {\n      return this.el.attr('total');\n    }\n  }\n\n\n  Katrid.UI.uiKatrid.directive('tableView', () => ({\n    restrict: 'E',\n    scope: false,\n    template(el, attrs) {\n      let fields = [];\n      for (let fld of el.find('field'))\n        fields.push(new Field($(fld)));\n      return Katrid.app.getTemplate('dashboard.table.jinja2', {fields, el, attrs});\n    }\n  }));\n\n\n  class DataSource {\n    constructor(el, scope) {\n      this.$el = el;\n      this.controls = [];\n      this.$counter = 0;\n      this.$scope = scope;\n      this.name = el.attr('name');\n      if (this.name)\n        scope[this.name] = this;\n      this.sql = this.$el.html();\n      this.url = el.data('url');\n      setTimeout(() => this.execute(), 100);\n    }\n\n    async execute() {\n      this.$loading = true;\n      try {\n        let res;\n        if (this.url) {\n          res = await fetch(this.url)\n          .then(res => res.json());\n        } else if (this.sql)\n          res = await Katrid.Services.Query.executeSql(this.sql);\n        this.$counter++;\n        this.data = res.data;\n        this.$scope.$apply();\n        this.onChange();\n      } finally {\n        this.$loading = false;\n      }\n    }\n\n    onChange() {\n      for (let control of this.controls)\n        control.$render(this.data);\n    }\n\n  }\n\n\n  class DashboardWidget {\n    constructor(opts) {\n      if (_.isString(opts.el))\n        this.$el = $(opts.el);\n      else\n        this.$el = opts.el;\n      this.$scope = opts.scope;\n      this.$sourceScope = opts.sourceScope || opts.scope;\n      this.$loading = false;\n      this.create(opts);\n\n      if (_.isString(this.dataSource)) {\n        let ds = this.$sourceScope[this.dataSource];\n        if (ds) {\n          ds.controls.push(this);\n          if (ds.$counter)\n            this.$render(ds.data);\n        }\n      }\n\n    }\n\n    create(opts) {\n      this.dataSource = opts.dataSource || this.$el.data('source');\n      this.caption = opts.caption || this.$el.attr('caption');\n    }\n\n    $render(data) {\n\n    }\n  }\n\n\n  class Chart extends DashboardWidget {\n    constructor(opts) {\n      super(opts);\n      this.backButton = $(`<button style=\"position: absolute; left: 0; top: 0;\" class=\"btn btn-outline-secondary btn-sm back-button\">${_.gettext('Back')}</button>`);\n      this.backButton.hide();\n      this.$el.prepend(this.backButton);\n    }\n\n    groupBy(data, group, totals) {\n      if (data.length === 0)\n        return [];\n      let res = [];\n      let firstRow = data[0];\n      let sql = 'select ';\n      let groups = group;\n      if (_.isArray(groups))\n        groups = groups.join(',');\n      else if (_.isNumber(group))\n        groups = Object.keys(firstRow)[group];\n      sql += groups;\n      if (_.isArray(totals))\n        for (let total of totals)\n          sql += ',' + 'sum(' + total + ') as ' + total;\n      else if (_.isString((totals)))\n        sql += `,sum(${totals}) as ${totals}`;\n      else if (_.isNumber(totals)) {\n        totals = Object.keys(firstRow)[totals];\n        sql += ',sum(' + totals + ') as ' + totals;\n      }\n      sql += ' from ? group by ';\n      sql += groups;\n      console.log(sql);\n      res = alasql(sql, [data]);\n      return res;\n    }\n\n    create(opts) {\n      super.create(opts);\n      this.x = opts.x;\n      this.y = opts.y;\n      this.keys = opts.keys;\n      this.type = opts.type;\n      this.axis = opts.axis;\n      this.legend = opts.legend;\n      this.onclick = opts.onclick;\n      this.columns = opts.columns;\n      this.grid = opts.grid;\n      this.labels = opts.labels;\n      this.pie = opts.pie;\n\n      if (!this.columns && !this.keys && _.isUndefined(this.x) && _.isUndefined(this.y)) {\n        this.x = 0;\n        this.y = 1;\n      }\n    }\n\n    $render(data) {\n      this.$data = data;\n      if (this.columns)\n        this.$columns = this.columns;\n      else\n        this.$columns = this.groupBy(data, this.x, this.y).map(obj => Object.values(obj));\n\n      let size = {\n        width: this.$el.parent().width(),\n      };\n\n      this.$chart = c3.generate({\n        bindto: this.$el[0],\n        data: {\n          columns: this.$columns,\n          type: this.type,\n          onclick: this.onclick,\n          labels: this.labels,\n        },\n        color: {\n          pattern: ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5']\n        },\n        pie: this.pie,\n        size,\n        grid: this.grid,\n        legend: this.legend,\n        axis: this.axis,\n      });\n\n      this.$chart.$chart = this;\n    }\n\n    query(sql, params) {\n      return alasql(sql, params);\n    }\n  }\n\n\n  class GridView extends DashboardWidget {\n    constructor(opts) {\n      super(opts);\n      this._groupBy = [];\n      let groupBy = this.$el.attr('group-by');\n      if (groupBy)\n        this._groupBy = groupBy.split(',');\n      this.totals = [];\n\n\n      this.fields = [];\n      for (let fld of this.$el.find('field')) {\n        let field = new Field($(fld));\n        this.fields.push(field);\n        if (field.total)\n          this.totals.push(field.name);\n      }\n\n      this.$scope.grid = this;\n\n      let templ = Katrid.app.getTemplate('dashboard.grid.jinja2', {\n        self: this,\n        fields: this.fields,\n      });\n      templ = Katrid.Core.$compile(templ)(this.$scope);\n      this.$el.html(templ);\n    }\n\n    get groupBy() {\n      return this._groupBy;\n    }\n\n    set groupBy(groupBy) {\n      this._groupBy = groupBy;\n      if (this._lastData)\n        this.$render(this._lastData);\n    }\n\n    total(attr) {\n      console.log('calc attr', attr);\n      let r = 0;\n      if (this._lastData)\n        for (let row of this._lastData)\n          r += row[attr];\n      return r;\n    }\n\n    $render(data) {\n      // render loaded data\n      this._lastData = data;\n      if (!data)\n        data = [];\n      if (this.groupBy.length) {\n        data = groupBy(data, this.groupBy, this.totals, this.fields[0].name);\n      }\n      this.$scope.records = this._renderGroup(data);\n    }\n\n    _renderGroup(data) {\n      let r = [];\n      for (let row of data) {\n        r.push(row);\n        if (row.$group)\n          r = r.concat(this._renderGroup(row.$children));\n      }\n      return r;\n    }\n  }\n\n  function groupBy(data, member, totals, to) {\n    let r = {};\n    for (let row of data) {\n      let v = row[member];\n      let group = r[v];\n      if (!group) {\n        group = r[v] = {$children: []};\n        for (let total of totals)\n          group[total] = 0;\n      }\n      group.$children.push(row);\n      group.$group = true;\n      group[to] = v;\n      for (let total of totals)\n        group[total] += row[total];\n    }\n    return Object.values(r);\n  }\n\n  class GridRow {\n    constructor(grid, row, el) {\n      this.row = row;\n    }\n\n  }\n\n  class GroupRow extends GridRow {\n\n  }\n\n\n  Katrid.UI.uiKatrid.directive('gridView', () => ({\n    restrict: 'E',\n    scope: {},\n    // template(el, attrs) {\n    //   let fields = [];\n    //   for (let fld of el.find('field'))\n    //     fields.push(new Field($(fld)));\n    //   let query = el.find('query');\n    //   if (query.length)\n    //     query = query[0].outerHTML;\n    //   else\n    //     query = '';\n    //   return Katrid.app.getTemplate('dashboard.grid.jinja2', {fields, el, attrs, query});\n    // },\n\n    async link(scope, el, attrs) {\n      let grid = new GridView({el, attrs, scope, sourceScope: scope.$parent});\n      return;\n      scope.loading = false;\n      let res, sql;\n      let query = el.find('query');\n      if (attrs.source) {\n        console.log('data source is', attrs.source);\n      } else if (query.length) {\n        sql = query.text();\n        query.remove();\n\n        if (sql) {\n          scope.loading = true;\n          scope.$apply();\n          res = await Katrid.Services.Query.executeSql(sql);\n          scope.loading = false;\n        }\n\n        if (res) {\n          scope.records = res.data;\n          scope.$apply();\n        }\n      }\n    }\n  }));\n\n\n  Katrid.UI.uiKatrid.filter('duration', () => {\n    return (input, unit, format) => {\n      if (!format)\n        format = 'HH:mm:ss';\n      if (input) {\n        if ((unit === 'seconds') && (_.isString(input)))\n          input = parseInt(input);\n        let fmt = moment.duration(input, unit).format(format);\n        if (fmt.length === 5)\n          fmt = '00:' + fmt;\n        return fmt;\n      }\n      return input;\n    }\n  });\n\n\n  Katrid.UI.Dashboard = {\n    Chart,\n    colorPatterns: [\n      '#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5',\n      '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'\n    ],\n  };\n\n\n})();\n","(function() {\n\n  class Telegram {\n    static async export(report, format) {\n      console.log('export telegram');\n      let templ = Katrid.app.$templateCache.get('reportbot.dialog.contacts');\n      let modal = $(templ);\n      $('body').append(modal);\n\n      let sel = modal.find('#id-reportbot-select-contacts');\n      let partners = new Katrid.Services.Model('res.partner');\n      let res = await partners.post('get_telegram_contacts');\n      if (res) {\n        if (res)\n          res.map(c => sel.append(`<option value=\"${ c[0] }\">${ c[1] }</option>`));\n        sel.select2();\n      }\n      modal.find('#id-btn-ok').click(async () => {\n\n        let svc = new Katrid.Services.Model('telegram.pending');\n        format = 'pdf';\n        const params = report.getUserParams();\n        let res = svc.post('export_report', { args: [report.info.id], kwargs: { contacts: sel.val(), format, params } });\n        if (res.ok) console.log('ok');\n      });\n      modal.modal();\n      return true;\n\n    }\n  }\n\n  Katrid.Reports.Telegram = Telegram;\n})();\n","(function () {\n\n  class QueryManager {\n    constructor(app) {\n      this.app = app;\n      this.$scope = app.$scope.$new();\n      this.$scope.queryChange = (query) => this.queryChange(query);\n      this.$scope.search = {};\n      let me = this;\n      this.action = this.$scope.action = {\n        context: {},\n        views: {},\n        async saveSearch(search) {\n          let svc = new Katrid.Services.Model('ui.filter');\n          let data = {};\n          Object.assign(data, search);\n          data.query = me.$scope.query.id;\n          if (search.name === null) {\n            search.name = prompt('Query name', 'current query namne');\n            search.is_default = false;\n            search.is_shared = true;\n          }\n          if (search.name)\n            await svc.write([data])\n        },\n        setSearchParams(params) {\n          me.$scope.search.params = params;\n          me.refresh(me.query);\n        },\n        switchView(viewType) {\n          console.log('set view type', viewType);\n        },\n        orderBy(field) {\n          if (me.$scope.ordering === field)\n            me.$scope.reverse = !me.$scope.reverse;\n          else {\n            me.$scope.ordering = field;\n            me.$scope.reverse = false;\n          }\n        }\n      };\n    }\n\n    getFilter(field) {\n      if (field.type === 'DateField')\n        return \"|date:'shortDate'\";\n      else if (field.type === 'DateTimeField')\n        return \"|date:'short'\";\n      else if (field.type === 'IntegerField')\n        return \"|number:0\";\n      return \"\";\n    }\n\n    getSearchView(query) {\n      let s;\n      if (query.params)\n        s = query.params;\n      else {\n        s = `<search>`;\n        for (let f of query.fields)\n          s += `<field name=\"${f.name}\"/>`;\n        s += '</search>';\n      }\n      // prepare fields to view\n      let fields = {};\n      for (let f of query.fields)\n        fields[f.name] = Katrid.Data.Fields.Field.fromInfo(f);\n      this.fields = fields;\n      return {content: s, fields};\n    }\n\n    async queryChange(query) {\n      this.$scope.search = {\n        viewMoreButtons: true,\n      };\n      this.query = query;\n      let res = await this.refresh(query);\n      // render the result on table\n      // transform result to list of objects\n      query.fields = res.fields;\n      this.action.search = this.getSearchView(query);\n      this.action.fieldList = Object.values(this.fields);\n      this.$scope.action.views.search = this.$scope.action.search;\n      this.renderSearch();\n      this.renderTable(res);\n      this.$scope.$apply();\n    }\n\n    async refresh(query) {\n      let res = await Katrid.Services.Query.read({ id: query.id, details: true, params: this.$scope.search.params });\n      for (let f of res.fields)\n        f.filter = this.getFilter(f);\n      let _toObject = (fields, values) => {\n        let r = {}, i = 0;\n        for (let f of fields) {\n          r[f.name] = values[i];\n          i++;\n        }\n        return r;\n      };\n      this.$scope.records = res.data.map(row => _toObject(res.fields, row));\n      this.$scope.$apply();\n      return res;\n    }\n\n    renderSearch() {\n      let el = this.app.getTemplate('query.manager.search.jinja2');\n      el = Katrid.Core.$compile(el)(this.$scope);\n      this.$element.find('#query-search-view').html(el);\n    }\n\n    async render() {\n      let templ = this.app.getTemplate('query.manager.jinja2');\n      templ = Katrid.Core.$compile(templ)(this.$scope);\n      this.$element = templ;\n      let queries = await Katrid.Services.Query.all();\n      this.$scope.queries = queries.data;\n      this.app.$element.html(templ);\n      this.$scope.$apply();\n    }\n\n    renderTable(data) {\n      let templ = this.app.getTemplate('query.manager.table.jinja2', {\n        self: this, query: this.$scope.query, records: this.records, fields: Object.values(this.fields),\n      });\n      templ = Katrid.Core.$compile(templ)(this.$scope);\n      initColumn(templ);\n      this.$element.find('#query-manager-result').html(templ);\n    }\n  }\n\n  // register the plugin\n  Katrid.Core.plugins.register((app) => {\n    // register event listener\n    $(app).on('hashchange', (event, hash) => {\n      if (hash.startsWith('#/app/query.manager/')) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        app.$scope.$parent.currentMenu = { name: 'Query Manager' };\n\n        let q = new QueryManager(app);\n        q.render();\n      }\n    });\n  });\n\n\n  function initColumn(table) {\n    // $('.checkbox-menu').sortable();\n  }\n\n  function reorder(index1, index2) {\n    $('table tr').each(function () {\n      var tr = $(this);\n      var td1 = tr.find(`td:eq(${index1})`);\n      var td2 = tr.find(`td:eq(${index2})`);\n      td1.detach().insertAfter(td2);\n    });\n  }\n\n\n})();\n","(function () {\n\n  class FileManager {\n    constructor(opts) {\n      this.$element = opts.el;\n      this.$scope = opts.scope;\n      this.service = this.$element.attr('service');\n\n      $.get(this.service)\n      .then(res => {\n        this.$scope.dirs = res.content.filter(obj => obj.type === 'dir');\n        this.$scope.files = res.content.filter(obj => obj.type === 'file');\n        this.$scope.items = res.content;\n        this.$scope.levels[this.$scope.level] = this.$scope.items;\n        this.$scope.$apply();\n      });\n    }\n\n    getPath(item) {\n      let url = item.name;\n      let parent = item.parent;\n      while (parent) {\n        url = parent.name + '/' + url;\n        parent = parent.parent;\n      }\n      return url;\n    }\n\n    expand(item) {\n      let url = this.getPath(item);\n      url = this.service + '?path=' + url;\n      $.get(url)\n        .then(res => {\n          this.$scope.items = res.content;\n          this.$scope.dirs = res.content.filter(obj => obj.type === 'dir');\n          this.$scope.files = res.content.filter(obj => obj.type === 'file');\n          res.content.map(obj => obj.parent = item);\n          this.$scope.levels[this.$scope.level] = this.$scope.items;\n          this.$scope.$apply();\n        });\n    }\n  }\n\n  Katrid.UI.uiKatrid.directive('fileManager', () => ({\n    restrict: 'E',\n    scope: {},\n    templateUrl: 'file-manager.jinja2',\n    link(scope, el) {\n      scope.level = 0;\n      scope.levels = {};\n      let fm = new FileManager({ el, scope });\n      scope.expand = item => {\n        scope.level++;\n        scope.currentItem = item;\n        fm.expand(item);\n        scope.currentPath = fm.getPath(item);\n      };\n\n      scope.backTo = level => {\n        scope.level = level;\n        console.log('back to', level);\n        scope.items = scope.levels[scope.level];\n        scope.dirs = scope.items.filter(obj => obj.type === 'dir');\n        scope.files = scope.items.filter(obj => obj.type === 'file');\n        scope.currentPath = fm.getPath(scope.items[0]);\n      };\n\n      scope.uploadFile = file => {\n        console.log('current path', scope.currentPath);\n        Katrid.Services.Upload.uploadTo('/pwapec/file-manager/upload/?path=' + (scope.currentPath || ''), file)\n          .then(() => {\n            fm.expand(scope.currentItem);\n          });\n      };\n    }\n  }));\n\n})();\n"]}